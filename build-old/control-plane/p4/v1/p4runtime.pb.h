// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: p4/v1/p4runtime.proto

#ifndef PROTOBUF_p4_2fv1_2fp4runtime_2eproto__INCLUDED
#define PROTOBUF_p4_2fv1_2fp4runtime_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include "google/rpc/status.pb.h"
#include "p4/config/v1/p4info.pb.h"
#include "p4/v1/p4data.pb.h"
// @@protoc_insertion_point(includes)
namespace google {
namespace protobuf {
class Any;
class AnyDefaultTypeInternal;
extern AnyDefaultTypeInternal _Any_default_instance_;
}  // namespace protobuf
namespace rpc {
class Status;
class StatusDefaultTypeInternal;
extern StatusDefaultTypeInternal _Status_default_instance_;
}  // namespace rpc
}  // namespace google
namespace p4 {
namespace config {
namespace v1 {
class Action;
class ActionDefaultTypeInternal;
extern ActionDefaultTypeInternal _Action_default_instance_;
class ActionProfile;
class ActionProfileDefaultTypeInternal;
extern ActionProfileDefaultTypeInternal _ActionProfile_default_instance_;
class ActionRef;
class ActionRefDefaultTypeInternal;
extern ActionRefDefaultTypeInternal _ActionRef_default_instance_;
class Action_Param;
class Action_ParamDefaultTypeInternal;
extern Action_ParamDefaultTypeInternal _Action_Param_default_instance_;
class ControllerPacketMetadata;
class ControllerPacketMetadataDefaultTypeInternal;
extern ControllerPacketMetadataDefaultTypeInternal _ControllerPacketMetadata_default_instance_;
class ControllerPacketMetadata_Metadata;
class ControllerPacketMetadata_MetadataDefaultTypeInternal;
extern ControllerPacketMetadata_MetadataDefaultTypeInternal _ControllerPacketMetadata_Metadata_default_instance_;
class Counter;
class CounterDefaultTypeInternal;
extern CounterDefaultTypeInternal _Counter_default_instance_;
class CounterSpec;
class CounterSpecDefaultTypeInternal;
extern CounterSpecDefaultTypeInternal _CounterSpec_default_instance_;
class Digest;
class DigestDefaultTypeInternal;
extern DigestDefaultTypeInternal _Digest_default_instance_;
class DirectCounter;
class DirectCounterDefaultTypeInternal;
extern DirectCounterDefaultTypeInternal _DirectCounter_default_instance_;
class DirectMeter;
class DirectMeterDefaultTypeInternal;
extern DirectMeterDefaultTypeInternal _DirectMeter_default_instance_;
class Documentation;
class DocumentationDefaultTypeInternal;
extern DocumentationDefaultTypeInternal _Documentation_default_instance_;
class Extern;
class ExternDefaultTypeInternal;
extern ExternDefaultTypeInternal _Extern_default_instance_;
class ExternInstance;
class ExternInstanceDefaultTypeInternal;
extern ExternInstanceDefaultTypeInternal _ExternInstance_default_instance_;
class MatchField;
class MatchFieldDefaultTypeInternal;
extern MatchFieldDefaultTypeInternal _MatchField_default_instance_;
class Meter;
class MeterDefaultTypeInternal;
extern MeterDefaultTypeInternal _Meter_default_instance_;
class MeterSpec;
class MeterSpecDefaultTypeInternal;
extern MeterSpecDefaultTypeInternal _MeterSpec_default_instance_;
class P4Ids;
class P4IdsDefaultTypeInternal;
extern P4IdsDefaultTypeInternal _P4Ids_default_instance_;
class P4Info;
class P4InfoDefaultTypeInternal;
extern P4InfoDefaultTypeInternal _P4Info_default_instance_;
class PkgInfo;
class PkgInfoDefaultTypeInternal;
extern PkgInfoDefaultTypeInternal _PkgInfo_default_instance_;
class Preamble;
class PreambleDefaultTypeInternal;
extern PreambleDefaultTypeInternal _Preamble_default_instance_;
class Register;
class RegisterDefaultTypeInternal;
extern RegisterDefaultTypeInternal _Register_default_instance_;
class Table;
class TableDefaultTypeInternal;
extern TableDefaultTypeInternal _Table_default_instance_;
class ValueSet;
class ValueSetDefaultTypeInternal;
extern ValueSetDefaultTypeInternal _ValueSet_default_instance_;
}  // namespace v1
}  // namespace config
namespace v1 {
class Action;
class ActionDefaultTypeInternal;
extern ActionDefaultTypeInternal _Action_default_instance_;
class ActionProfileAction;
class ActionProfileActionDefaultTypeInternal;
extern ActionProfileActionDefaultTypeInternal _ActionProfileAction_default_instance_;
class ActionProfileActionSet;
class ActionProfileActionSetDefaultTypeInternal;
extern ActionProfileActionSetDefaultTypeInternal _ActionProfileActionSet_default_instance_;
class ActionProfileGroup;
class ActionProfileGroupDefaultTypeInternal;
extern ActionProfileGroupDefaultTypeInternal _ActionProfileGroup_default_instance_;
class ActionProfileGroup_Member;
class ActionProfileGroup_MemberDefaultTypeInternal;
extern ActionProfileGroup_MemberDefaultTypeInternal _ActionProfileGroup_Member_default_instance_;
class ActionProfileMember;
class ActionProfileMemberDefaultTypeInternal;
extern ActionProfileMemberDefaultTypeInternal _ActionProfileMember_default_instance_;
class Action_Param;
class Action_ParamDefaultTypeInternal;
extern Action_ParamDefaultTypeInternal _Action_Param_default_instance_;
class CapabilitiesRequest;
class CapabilitiesRequestDefaultTypeInternal;
extern CapabilitiesRequestDefaultTypeInternal _CapabilitiesRequest_default_instance_;
class CapabilitiesResponse;
class CapabilitiesResponseDefaultTypeInternal;
extern CapabilitiesResponseDefaultTypeInternal _CapabilitiesResponse_default_instance_;
class CloneSessionEntry;
class CloneSessionEntryDefaultTypeInternal;
extern CloneSessionEntryDefaultTypeInternal _CloneSessionEntry_default_instance_;
class CounterData;
class CounterDataDefaultTypeInternal;
extern CounterDataDefaultTypeInternal _CounterData_default_instance_;
class CounterEntry;
class CounterEntryDefaultTypeInternal;
extern CounterEntryDefaultTypeInternal _CounterEntry_default_instance_;
class DigestEntry;
class DigestEntryDefaultTypeInternal;
extern DigestEntryDefaultTypeInternal _DigestEntry_default_instance_;
class DigestEntry_Config;
class DigestEntry_ConfigDefaultTypeInternal;
extern DigestEntry_ConfigDefaultTypeInternal _DigestEntry_Config_default_instance_;
class DigestList;
class DigestListDefaultTypeInternal;
extern DigestListDefaultTypeInternal _DigestList_default_instance_;
class DigestListAck;
class DigestListAckDefaultTypeInternal;
extern DigestListAckDefaultTypeInternal _DigestListAck_default_instance_;
class DigestListAckError;
class DigestListAckErrorDefaultTypeInternal;
extern DigestListAckErrorDefaultTypeInternal _DigestListAckError_default_instance_;
class DirectCounterEntry;
class DirectCounterEntryDefaultTypeInternal;
extern DirectCounterEntryDefaultTypeInternal _DirectCounterEntry_default_instance_;
class DirectMeterEntry;
class DirectMeterEntryDefaultTypeInternal;
extern DirectMeterEntryDefaultTypeInternal _DirectMeterEntry_default_instance_;
class Entity;
class EntityDefaultTypeInternal;
extern EntityDefaultTypeInternal _Entity_default_instance_;
class Error;
class ErrorDefaultTypeInternal;
extern ErrorDefaultTypeInternal _Error_default_instance_;
class ExternEntry;
class ExternEntryDefaultTypeInternal;
extern ExternEntryDefaultTypeInternal _ExternEntry_default_instance_;
class FieldMatch;
class FieldMatchDefaultTypeInternal;
extern FieldMatchDefaultTypeInternal _FieldMatch_default_instance_;
class FieldMatch_Exact;
class FieldMatch_ExactDefaultTypeInternal;
extern FieldMatch_ExactDefaultTypeInternal _FieldMatch_Exact_default_instance_;
class FieldMatch_LPM;
class FieldMatch_LPMDefaultTypeInternal;
extern FieldMatch_LPMDefaultTypeInternal _FieldMatch_LPM_default_instance_;
class FieldMatch_Optional;
class FieldMatch_OptionalDefaultTypeInternal;
extern FieldMatch_OptionalDefaultTypeInternal _FieldMatch_Optional_default_instance_;
class FieldMatch_Range;
class FieldMatch_RangeDefaultTypeInternal;
extern FieldMatch_RangeDefaultTypeInternal _FieldMatch_Range_default_instance_;
class FieldMatch_Ternary;
class FieldMatch_TernaryDefaultTypeInternal;
extern FieldMatch_TernaryDefaultTypeInternal _FieldMatch_Ternary_default_instance_;
class ForwardingPipelineConfig;
class ForwardingPipelineConfigDefaultTypeInternal;
extern ForwardingPipelineConfigDefaultTypeInternal _ForwardingPipelineConfig_default_instance_;
class ForwardingPipelineConfig_Cookie;
class ForwardingPipelineConfig_CookieDefaultTypeInternal;
extern ForwardingPipelineConfig_CookieDefaultTypeInternal _ForwardingPipelineConfig_Cookie_default_instance_;
class GetForwardingPipelineConfigRequest;
class GetForwardingPipelineConfigRequestDefaultTypeInternal;
extern GetForwardingPipelineConfigRequestDefaultTypeInternal _GetForwardingPipelineConfigRequest_default_instance_;
class GetForwardingPipelineConfigResponse;
class GetForwardingPipelineConfigResponseDefaultTypeInternal;
extern GetForwardingPipelineConfigResponseDefaultTypeInternal _GetForwardingPipelineConfigResponse_default_instance_;
class IdleTimeoutNotification;
class IdleTimeoutNotificationDefaultTypeInternal;
extern IdleTimeoutNotificationDefaultTypeInternal _IdleTimeoutNotification_default_instance_;
class Index;
class IndexDefaultTypeInternal;
extern IndexDefaultTypeInternal _Index_default_instance_;
class MasterArbitrationUpdate;
class MasterArbitrationUpdateDefaultTypeInternal;
extern MasterArbitrationUpdateDefaultTypeInternal _MasterArbitrationUpdate_default_instance_;
class MeterConfig;
class MeterConfigDefaultTypeInternal;
extern MeterConfigDefaultTypeInternal _MeterConfig_default_instance_;
class MeterEntry;
class MeterEntryDefaultTypeInternal;
extern MeterEntryDefaultTypeInternal _MeterEntry_default_instance_;
class MulticastGroupEntry;
class MulticastGroupEntryDefaultTypeInternal;
extern MulticastGroupEntryDefaultTypeInternal _MulticastGroupEntry_default_instance_;
class P4Data;
class P4DataDefaultTypeInternal;
extern P4DataDefaultTypeInternal _P4Data_default_instance_;
class P4Header;
class P4HeaderDefaultTypeInternal;
extern P4HeaderDefaultTypeInternal _P4Header_default_instance_;
class P4HeaderStack;
class P4HeaderStackDefaultTypeInternal;
extern P4HeaderStackDefaultTypeInternal _P4HeaderStack_default_instance_;
class P4HeaderUnion;
class P4HeaderUnionDefaultTypeInternal;
extern P4HeaderUnionDefaultTypeInternal _P4HeaderUnion_default_instance_;
class P4HeaderUnionStack;
class P4HeaderUnionStackDefaultTypeInternal;
extern P4HeaderUnionStackDefaultTypeInternal _P4HeaderUnionStack_default_instance_;
class P4StructLike;
class P4StructLikeDefaultTypeInternal;
extern P4StructLikeDefaultTypeInternal _P4StructLike_default_instance_;
class P4Varbit;
class P4VarbitDefaultTypeInternal;
extern P4VarbitDefaultTypeInternal _P4Varbit_default_instance_;
class PacketIn;
class PacketInDefaultTypeInternal;
extern PacketInDefaultTypeInternal _PacketIn_default_instance_;
class PacketMetadata;
class PacketMetadataDefaultTypeInternal;
extern PacketMetadataDefaultTypeInternal _PacketMetadata_default_instance_;
class PacketOut;
class PacketOutDefaultTypeInternal;
extern PacketOutDefaultTypeInternal _PacketOut_default_instance_;
class PacketOutError;
class PacketOutErrorDefaultTypeInternal;
extern PacketOutErrorDefaultTypeInternal _PacketOutError_default_instance_;
class PacketReplicationEngineEntry;
class PacketReplicationEngineEntryDefaultTypeInternal;
extern PacketReplicationEngineEntryDefaultTypeInternal _PacketReplicationEngineEntry_default_instance_;
class ReadRequest;
class ReadRequestDefaultTypeInternal;
extern ReadRequestDefaultTypeInternal _ReadRequest_default_instance_;
class ReadResponse;
class ReadResponseDefaultTypeInternal;
extern ReadResponseDefaultTypeInternal _ReadResponse_default_instance_;
class RegisterEntry;
class RegisterEntryDefaultTypeInternal;
extern RegisterEntryDefaultTypeInternal _RegisterEntry_default_instance_;
class Replica;
class ReplicaDefaultTypeInternal;
extern ReplicaDefaultTypeInternal _Replica_default_instance_;
class Role;
class RoleDefaultTypeInternal;
extern RoleDefaultTypeInternal _Role_default_instance_;
class SetForwardingPipelineConfigRequest;
class SetForwardingPipelineConfigRequestDefaultTypeInternal;
extern SetForwardingPipelineConfigRequestDefaultTypeInternal _SetForwardingPipelineConfigRequest_default_instance_;
class SetForwardingPipelineConfigResponse;
class SetForwardingPipelineConfigResponseDefaultTypeInternal;
extern SetForwardingPipelineConfigResponseDefaultTypeInternal _SetForwardingPipelineConfigResponse_default_instance_;
class StreamError;
class StreamErrorDefaultTypeInternal;
extern StreamErrorDefaultTypeInternal _StreamError_default_instance_;
class StreamMessageRequest;
class StreamMessageRequestDefaultTypeInternal;
extern StreamMessageRequestDefaultTypeInternal _StreamMessageRequest_default_instance_;
class StreamMessageResponse;
class StreamMessageResponseDefaultTypeInternal;
extern StreamMessageResponseDefaultTypeInternal _StreamMessageResponse_default_instance_;
class StreamOtherError;
class StreamOtherErrorDefaultTypeInternal;
extern StreamOtherErrorDefaultTypeInternal _StreamOtherError_default_instance_;
class TableAction;
class TableActionDefaultTypeInternal;
extern TableActionDefaultTypeInternal _TableAction_default_instance_;
class TableEntry;
class TableEntryDefaultTypeInternal;
extern TableEntryDefaultTypeInternal _TableEntry_default_instance_;
class TableEntry_IdleTimeout;
class TableEntry_IdleTimeoutDefaultTypeInternal;
extern TableEntry_IdleTimeoutDefaultTypeInternal _TableEntry_IdleTimeout_default_instance_;
class Uint128;
class Uint128DefaultTypeInternal;
extern Uint128DefaultTypeInternal _Uint128_default_instance_;
class Update;
class UpdateDefaultTypeInternal;
extern UpdateDefaultTypeInternal _Update_default_instance_;
class ValueSetEntry;
class ValueSetEntryDefaultTypeInternal;
extern ValueSetEntryDefaultTypeInternal _ValueSetEntry_default_instance_;
class ValueSetMember;
class ValueSetMemberDefaultTypeInternal;
extern ValueSetMemberDefaultTypeInternal _ValueSetMember_default_instance_;
class WriteRequest;
class WriteRequestDefaultTypeInternal;
extern WriteRequestDefaultTypeInternal _WriteRequest_default_instance_;
class WriteResponse;
class WriteResponseDefaultTypeInternal;
extern WriteResponseDefaultTypeInternal _WriteResponse_default_instance_;
}  // namespace v1
}  // namespace p4

namespace p4 {
namespace v1 {

namespace protobuf_p4_2fv1_2fp4runtime_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_p4_2fv1_2fp4runtime_2eproto

enum WriteRequest_Atomicity {
  WriteRequest_Atomicity_CONTINUE_ON_ERROR = 0,
  WriteRequest_Atomicity_ROLLBACK_ON_ERROR = 1,
  WriteRequest_Atomicity_DATAPLANE_ATOMIC = 2,
  WriteRequest_Atomicity_WriteRequest_Atomicity_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WriteRequest_Atomicity_WriteRequest_Atomicity_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WriteRequest_Atomicity_IsValid(int value);
const WriteRequest_Atomicity WriteRequest_Atomicity_Atomicity_MIN = WriteRequest_Atomicity_CONTINUE_ON_ERROR;
const WriteRequest_Atomicity WriteRequest_Atomicity_Atomicity_MAX = WriteRequest_Atomicity_DATAPLANE_ATOMIC;
const int WriteRequest_Atomicity_Atomicity_ARRAYSIZE = WriteRequest_Atomicity_Atomicity_MAX + 1;

const ::google::protobuf::EnumDescriptor* WriteRequest_Atomicity_descriptor();
inline const ::std::string& WriteRequest_Atomicity_Name(WriteRequest_Atomicity value) {
  return ::google::protobuf::internal::NameOfEnum(
    WriteRequest_Atomicity_descriptor(), value);
}
inline bool WriteRequest_Atomicity_Parse(
    const ::std::string& name, WriteRequest_Atomicity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WriteRequest_Atomicity>(
    WriteRequest_Atomicity_descriptor(), name, value);
}
enum Update_Type {
  Update_Type_UNSPECIFIED = 0,
  Update_Type_INSERT = 1,
  Update_Type_MODIFY = 2,
  Update_Type_DELETE = 3,
  Update_Type_Update_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Update_Type_Update_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Update_Type_IsValid(int value);
const Update_Type Update_Type_Type_MIN = Update_Type_UNSPECIFIED;
const Update_Type Update_Type_Type_MAX = Update_Type_DELETE;
const int Update_Type_Type_ARRAYSIZE = Update_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Update_Type_descriptor();
inline const ::std::string& Update_Type_Name(Update_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Update_Type_descriptor(), value);
}
inline bool Update_Type_Parse(
    const ::std::string& name, Update_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Update_Type>(
    Update_Type_descriptor(), name, value);
}
enum SetForwardingPipelineConfigRequest_Action {
  SetForwardingPipelineConfigRequest_Action_UNSPECIFIED = 0,
  SetForwardingPipelineConfigRequest_Action_VERIFY = 1,
  SetForwardingPipelineConfigRequest_Action_VERIFY_AND_SAVE = 2,
  SetForwardingPipelineConfigRequest_Action_VERIFY_AND_COMMIT = 3,
  SetForwardingPipelineConfigRequest_Action_COMMIT = 4,
  SetForwardingPipelineConfigRequest_Action_RECONCILE_AND_COMMIT = 5,
  SetForwardingPipelineConfigRequest_Action_SetForwardingPipelineConfigRequest_Action_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetForwardingPipelineConfigRequest_Action_SetForwardingPipelineConfigRequest_Action_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetForwardingPipelineConfigRequest_Action_IsValid(int value);
const SetForwardingPipelineConfigRequest_Action SetForwardingPipelineConfigRequest_Action_Action_MIN = SetForwardingPipelineConfigRequest_Action_UNSPECIFIED;
const SetForwardingPipelineConfigRequest_Action SetForwardingPipelineConfigRequest_Action_Action_MAX = SetForwardingPipelineConfigRequest_Action_RECONCILE_AND_COMMIT;
const int SetForwardingPipelineConfigRequest_Action_Action_ARRAYSIZE = SetForwardingPipelineConfigRequest_Action_Action_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetForwardingPipelineConfigRequest_Action_descriptor();
inline const ::std::string& SetForwardingPipelineConfigRequest_Action_Name(SetForwardingPipelineConfigRequest_Action value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetForwardingPipelineConfigRequest_Action_descriptor(), value);
}
inline bool SetForwardingPipelineConfigRequest_Action_Parse(
    const ::std::string& name, SetForwardingPipelineConfigRequest_Action* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetForwardingPipelineConfigRequest_Action>(
    SetForwardingPipelineConfigRequest_Action_descriptor(), name, value);
}
enum GetForwardingPipelineConfigRequest_ResponseType {
  GetForwardingPipelineConfigRequest_ResponseType_ALL = 0,
  GetForwardingPipelineConfigRequest_ResponseType_COOKIE_ONLY = 1,
  GetForwardingPipelineConfigRequest_ResponseType_P4INFO_AND_COOKIE = 2,
  GetForwardingPipelineConfigRequest_ResponseType_DEVICE_CONFIG_AND_COOKIE = 3,
  GetForwardingPipelineConfigRequest_ResponseType_GetForwardingPipelineConfigRequest_ResponseType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetForwardingPipelineConfigRequest_ResponseType_GetForwardingPipelineConfigRequest_ResponseType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetForwardingPipelineConfigRequest_ResponseType_IsValid(int value);
const GetForwardingPipelineConfigRequest_ResponseType GetForwardingPipelineConfigRequest_ResponseType_ResponseType_MIN = GetForwardingPipelineConfigRequest_ResponseType_ALL;
const GetForwardingPipelineConfigRequest_ResponseType GetForwardingPipelineConfigRequest_ResponseType_ResponseType_MAX = GetForwardingPipelineConfigRequest_ResponseType_DEVICE_CONFIG_AND_COOKIE;
const int GetForwardingPipelineConfigRequest_ResponseType_ResponseType_ARRAYSIZE = GetForwardingPipelineConfigRequest_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetForwardingPipelineConfigRequest_ResponseType_descriptor();
inline const ::std::string& GetForwardingPipelineConfigRequest_ResponseType_Name(GetForwardingPipelineConfigRequest_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetForwardingPipelineConfigRequest_ResponseType_descriptor(), value);
}
inline bool GetForwardingPipelineConfigRequest_ResponseType_Parse(
    const ::std::string& name, GetForwardingPipelineConfigRequest_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetForwardingPipelineConfigRequest_ResponseType>(
    GetForwardingPipelineConfigRequest_ResponseType_descriptor(), name, value);
}
enum SdnPort {
  SDN_PORT_UNKNOWN = 0,
  SDN_PORT_MIN = 1,
  SDN_PORT_MAX = -257,
  SDN_PORT_RECIRCULATE = -6,
  SDN_PORT_CPU = -3,
  SdnPort_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SdnPort_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SdnPort_IsValid(int value);
const SdnPort SdnPort_MIN = SDN_PORT_MAX;
const SdnPort SdnPort_MAX = SDN_PORT_MIN;
const int SdnPort_ARRAYSIZE = SdnPort_MAX + 1;

const ::google::protobuf::EnumDescriptor* SdnPort_descriptor();
inline const ::std::string& SdnPort_Name(SdnPort value) {
  return ::google::protobuf::internal::NameOfEnum(
    SdnPort_descriptor(), value);
}
inline bool SdnPort_Parse(
    const ::std::string& name, SdnPort* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SdnPort>(
    SdnPort_descriptor(), name, value);
}
// ===================================================================

class WriteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.WriteRequest) */ {
 public:
  WriteRequest();
  virtual ~WriteRequest();

  WriteRequest(const WriteRequest& from);

  inline WriteRequest& operator=(const WriteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteRequest& default_instance();

  static inline const WriteRequest* internal_default_instance() {
    return reinterpret_cast<const WriteRequest*>(
               &_WriteRequest_default_instance_);
  }

  void Swap(WriteRequest* other);

  // implements Message ----------------------------------------------

  inline WriteRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  WriteRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WriteRequest& from);
  void MergeFrom(const WriteRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WriteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WriteRequest_Atomicity Atomicity;
  static const Atomicity CONTINUE_ON_ERROR =
    WriteRequest_Atomicity_CONTINUE_ON_ERROR;
  static const Atomicity ROLLBACK_ON_ERROR =
    WriteRequest_Atomicity_ROLLBACK_ON_ERROR;
  static const Atomicity DATAPLANE_ATOMIC =
    WriteRequest_Atomicity_DATAPLANE_ATOMIC;
  static inline bool Atomicity_IsValid(int value) {
    return WriteRequest_Atomicity_IsValid(value);
  }
  static const Atomicity Atomicity_MIN =
    WriteRequest_Atomicity_Atomicity_MIN;
  static const Atomicity Atomicity_MAX =
    WriteRequest_Atomicity_Atomicity_MAX;
  static const int Atomicity_ARRAYSIZE =
    WriteRequest_Atomicity_Atomicity_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Atomicity_descriptor() {
    return WriteRequest_Atomicity_descriptor();
  }
  static inline const ::std::string& Atomicity_Name(Atomicity value) {
    return WriteRequest_Atomicity_Name(value);
  }
  static inline bool Atomicity_Parse(const ::std::string& name,
      Atomicity* value) {
    return WriteRequest_Atomicity_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .p4.v1.Update updates = 4;
  int updates_size() const;
  void clear_updates();
  static const int kUpdatesFieldNumber = 4;
  const ::p4::v1::Update& updates(int index) const;
  ::p4::v1::Update* mutable_updates(int index);
  ::p4::v1::Update* add_updates();
  ::google::protobuf::RepeatedPtrField< ::p4::v1::Update >*
      mutable_updates();
  const ::google::protobuf::RepeatedPtrField< ::p4::v1::Update >&
      updates() const;

  // .p4.v1.Uint128 election_id = 3;
  bool has_election_id() const;
  void clear_election_id();
  static const int kElectionIdFieldNumber = 3;
  const ::p4::v1::Uint128& election_id() const;
  ::p4::v1::Uint128* mutable_election_id();
  ::p4::v1::Uint128* release_election_id();
  void set_allocated_election_id(::p4::v1::Uint128* election_id);

  // uint64 device_id = 1;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 1;
  ::google::protobuf::uint64 device_id() const;
  void set_device_id(::google::protobuf::uint64 value);

  // uint64 role_id = 2;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::uint64 role_id() const;
  void set_role_id(::google::protobuf::uint64 value);

  // .p4.v1.WriteRequest.Atomicity atomicity = 5;
  void clear_atomicity();
  static const int kAtomicityFieldNumber = 5;
  ::p4::v1::WriteRequest_Atomicity atomicity() const;
  void set_atomicity(::p4::v1::WriteRequest_Atomicity value);

  // @@protoc_insertion_point(class_scope:p4.v1.WriteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::v1::Update > updates_;
  ::p4::v1::Uint128* election_id_;
  ::google::protobuf::uint64 device_id_;
  ::google::protobuf::uint64 role_id_;
  int atomicity_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WriteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.WriteResponse) */ {
 public:
  WriteResponse();
  virtual ~WriteResponse();

  WriteResponse(const WriteResponse& from);

  inline WriteResponse& operator=(const WriteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteResponse& default_instance();

  static inline const WriteResponse* internal_default_instance() {
    return reinterpret_cast<const WriteResponse*>(
               &_WriteResponse_default_instance_);
  }

  void Swap(WriteResponse* other);

  // implements Message ----------------------------------------------

  inline WriteResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  WriteResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WriteResponse& from);
  void MergeFrom(const WriteResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WriteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:p4.v1.WriteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.ReadRequest) */ {
 public:
  ReadRequest();
  virtual ~ReadRequest();

  ReadRequest(const ReadRequest& from);

  inline ReadRequest& operator=(const ReadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadRequest& default_instance();

  static inline const ReadRequest* internal_default_instance() {
    return reinterpret_cast<const ReadRequest*>(
               &_ReadRequest_default_instance_);
  }

  void Swap(ReadRequest* other);

  // implements Message ----------------------------------------------

  inline ReadRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadRequest& from);
  void MergeFrom(const ReadRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.v1.Entity entities = 2;
  int entities_size() const;
  void clear_entities();
  static const int kEntitiesFieldNumber = 2;
  const ::p4::v1::Entity& entities(int index) const;
  ::p4::v1::Entity* mutable_entities(int index);
  ::p4::v1::Entity* add_entities();
  ::google::protobuf::RepeatedPtrField< ::p4::v1::Entity >*
      mutable_entities();
  const ::google::protobuf::RepeatedPtrField< ::p4::v1::Entity >&
      entities() const;

  // uint64 device_id = 1;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 1;
  ::google::protobuf::uint64 device_id() const;
  void set_device_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:p4.v1.ReadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::v1::Entity > entities_;
  ::google::protobuf::uint64 device_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.ReadResponse) */ {
 public:
  ReadResponse();
  virtual ~ReadResponse();

  ReadResponse(const ReadResponse& from);

  inline ReadResponse& operator=(const ReadResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadResponse& default_instance();

  static inline const ReadResponse* internal_default_instance() {
    return reinterpret_cast<const ReadResponse*>(
               &_ReadResponse_default_instance_);
  }

  void Swap(ReadResponse* other);

  // implements Message ----------------------------------------------

  inline ReadResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadResponse& from);
  void MergeFrom(const ReadResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.v1.Entity entities = 1;
  int entities_size() const;
  void clear_entities();
  static const int kEntitiesFieldNumber = 1;
  const ::p4::v1::Entity& entities(int index) const;
  ::p4::v1::Entity* mutable_entities(int index);
  ::p4::v1::Entity* add_entities();
  ::google::protobuf::RepeatedPtrField< ::p4::v1::Entity >*
      mutable_entities();
  const ::google::protobuf::RepeatedPtrField< ::p4::v1::Entity >&
      entities() const;

  // @@protoc_insertion_point(class_scope:p4.v1.ReadResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::v1::Entity > entities_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Update : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.Update) */ {
 public:
  Update();
  virtual ~Update();

  Update(const Update& from);

  inline Update& operator=(const Update& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Update& default_instance();

  static inline const Update* internal_default_instance() {
    return reinterpret_cast<const Update*>(
               &_Update_default_instance_);
  }

  void Swap(Update* other);

  // implements Message ----------------------------------------------

  inline Update* New() const PROTOBUF_FINAL { return New(NULL); }

  Update* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Update& from);
  void MergeFrom(const Update& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Update* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Update_Type Type;
  static const Type UNSPECIFIED =
    Update_Type_UNSPECIFIED;
  static const Type INSERT =
    Update_Type_INSERT;
  static const Type MODIFY =
    Update_Type_MODIFY;
  static const Type DELETE =
    Update_Type_DELETE;
  static inline bool Type_IsValid(int value) {
    return Update_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Update_Type_Type_MIN;
  static const Type Type_MAX =
    Update_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Update_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Update_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Update_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Update_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .p4.v1.Entity entity = 2;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 2;
  const ::p4::v1::Entity& entity() const;
  ::p4::v1::Entity* mutable_entity();
  ::p4::v1::Entity* release_entity();
  void set_allocated_entity(::p4::v1::Entity* entity);

  // .p4.v1.Update.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::p4::v1::Update_Type type() const;
  void set_type(::p4::v1::Update_Type value);

  // @@protoc_insertion_point(class_scope:p4.v1.Update)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::v1::Entity* entity_;
  int type_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Entity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.Entity) */ {
 public:
  Entity();
  virtual ~Entity();

  Entity(const Entity& from);

  inline Entity& operator=(const Entity& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Entity& default_instance();

  enum EntityCase {
    kExternEntry = 1,
    kTableEntry = 2,
    kActionProfileMember = 3,
    kActionProfileGroup = 4,
    kMeterEntry = 5,
    kDirectMeterEntry = 6,
    kCounterEntry = 7,
    kDirectCounterEntry = 8,
    kPacketReplicationEngineEntry = 9,
    kValueSetEntry = 10,
    kRegisterEntry = 11,
    kDigestEntry = 12,
    ENTITY_NOT_SET = 0,
  };

  static inline const Entity* internal_default_instance() {
    return reinterpret_cast<const Entity*>(
               &_Entity_default_instance_);
  }

  void Swap(Entity* other);

  // implements Message ----------------------------------------------

  inline Entity* New() const PROTOBUF_FINAL { return New(NULL); }

  Entity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Entity& from);
  void MergeFrom(const Entity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Entity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.v1.ExternEntry extern_entry = 1;
  bool has_extern_entry() const;
  void clear_extern_entry();
  static const int kExternEntryFieldNumber = 1;
  const ::p4::v1::ExternEntry& extern_entry() const;
  ::p4::v1::ExternEntry* mutable_extern_entry();
  ::p4::v1::ExternEntry* release_extern_entry();
  void set_allocated_extern_entry(::p4::v1::ExternEntry* extern_entry);

  // .p4.v1.TableEntry table_entry = 2;
  bool has_table_entry() const;
  void clear_table_entry();
  static const int kTableEntryFieldNumber = 2;
  const ::p4::v1::TableEntry& table_entry() const;
  ::p4::v1::TableEntry* mutable_table_entry();
  ::p4::v1::TableEntry* release_table_entry();
  void set_allocated_table_entry(::p4::v1::TableEntry* table_entry);

  // .p4.v1.ActionProfileMember action_profile_member = 3;
  bool has_action_profile_member() const;
  void clear_action_profile_member();
  static const int kActionProfileMemberFieldNumber = 3;
  const ::p4::v1::ActionProfileMember& action_profile_member() const;
  ::p4::v1::ActionProfileMember* mutable_action_profile_member();
  ::p4::v1::ActionProfileMember* release_action_profile_member();
  void set_allocated_action_profile_member(::p4::v1::ActionProfileMember* action_profile_member);

  // .p4.v1.ActionProfileGroup action_profile_group = 4;
  bool has_action_profile_group() const;
  void clear_action_profile_group();
  static const int kActionProfileGroupFieldNumber = 4;
  const ::p4::v1::ActionProfileGroup& action_profile_group() const;
  ::p4::v1::ActionProfileGroup* mutable_action_profile_group();
  ::p4::v1::ActionProfileGroup* release_action_profile_group();
  void set_allocated_action_profile_group(::p4::v1::ActionProfileGroup* action_profile_group);

  // .p4.v1.MeterEntry meter_entry = 5;
  bool has_meter_entry() const;
  void clear_meter_entry();
  static const int kMeterEntryFieldNumber = 5;
  const ::p4::v1::MeterEntry& meter_entry() const;
  ::p4::v1::MeterEntry* mutable_meter_entry();
  ::p4::v1::MeterEntry* release_meter_entry();
  void set_allocated_meter_entry(::p4::v1::MeterEntry* meter_entry);

  // .p4.v1.DirectMeterEntry direct_meter_entry = 6;
  bool has_direct_meter_entry() const;
  void clear_direct_meter_entry();
  static const int kDirectMeterEntryFieldNumber = 6;
  const ::p4::v1::DirectMeterEntry& direct_meter_entry() const;
  ::p4::v1::DirectMeterEntry* mutable_direct_meter_entry();
  ::p4::v1::DirectMeterEntry* release_direct_meter_entry();
  void set_allocated_direct_meter_entry(::p4::v1::DirectMeterEntry* direct_meter_entry);

  // .p4.v1.CounterEntry counter_entry = 7;
  bool has_counter_entry() const;
  void clear_counter_entry();
  static const int kCounterEntryFieldNumber = 7;
  const ::p4::v1::CounterEntry& counter_entry() const;
  ::p4::v1::CounterEntry* mutable_counter_entry();
  ::p4::v1::CounterEntry* release_counter_entry();
  void set_allocated_counter_entry(::p4::v1::CounterEntry* counter_entry);

  // .p4.v1.DirectCounterEntry direct_counter_entry = 8;
  bool has_direct_counter_entry() const;
  void clear_direct_counter_entry();
  static const int kDirectCounterEntryFieldNumber = 8;
  const ::p4::v1::DirectCounterEntry& direct_counter_entry() const;
  ::p4::v1::DirectCounterEntry* mutable_direct_counter_entry();
  ::p4::v1::DirectCounterEntry* release_direct_counter_entry();
  void set_allocated_direct_counter_entry(::p4::v1::DirectCounterEntry* direct_counter_entry);

  // .p4.v1.PacketReplicationEngineEntry packet_replication_engine_entry = 9;
  bool has_packet_replication_engine_entry() const;
  void clear_packet_replication_engine_entry();
  static const int kPacketReplicationEngineEntryFieldNumber = 9;
  const ::p4::v1::PacketReplicationEngineEntry& packet_replication_engine_entry() const;
  ::p4::v1::PacketReplicationEngineEntry* mutable_packet_replication_engine_entry();
  ::p4::v1::PacketReplicationEngineEntry* release_packet_replication_engine_entry();
  void set_allocated_packet_replication_engine_entry(::p4::v1::PacketReplicationEngineEntry* packet_replication_engine_entry);

  // .p4.v1.ValueSetEntry value_set_entry = 10;
  bool has_value_set_entry() const;
  void clear_value_set_entry();
  static const int kValueSetEntryFieldNumber = 10;
  const ::p4::v1::ValueSetEntry& value_set_entry() const;
  ::p4::v1::ValueSetEntry* mutable_value_set_entry();
  ::p4::v1::ValueSetEntry* release_value_set_entry();
  void set_allocated_value_set_entry(::p4::v1::ValueSetEntry* value_set_entry);

  // .p4.v1.RegisterEntry register_entry = 11;
  bool has_register_entry() const;
  void clear_register_entry();
  static const int kRegisterEntryFieldNumber = 11;
  const ::p4::v1::RegisterEntry& register_entry() const;
  ::p4::v1::RegisterEntry* mutable_register_entry();
  ::p4::v1::RegisterEntry* release_register_entry();
  void set_allocated_register_entry(::p4::v1::RegisterEntry* register_entry);

  // .p4.v1.DigestEntry digest_entry = 12;
  bool has_digest_entry() const;
  void clear_digest_entry();
  static const int kDigestEntryFieldNumber = 12;
  const ::p4::v1::DigestEntry& digest_entry() const;
  ::p4::v1::DigestEntry* mutable_digest_entry();
  ::p4::v1::DigestEntry* release_digest_entry();
  void set_allocated_digest_entry(::p4::v1::DigestEntry* digest_entry);

  EntityCase entity_case() const;
  // @@protoc_insertion_point(class_scope:p4.v1.Entity)
 private:
  void set_has_extern_entry();
  void set_has_table_entry();
  void set_has_action_profile_member();
  void set_has_action_profile_group();
  void set_has_meter_entry();
  void set_has_direct_meter_entry();
  void set_has_counter_entry();
  void set_has_direct_counter_entry();
  void set_has_packet_replication_engine_entry();
  void set_has_value_set_entry();
  void set_has_register_entry();
  void set_has_digest_entry();

  inline bool has_entity() const;
  void clear_entity();
  inline void clear_has_entity();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union EntityUnion {
    EntityUnion() {}
    ::p4::v1::ExternEntry* extern_entry_;
    ::p4::v1::TableEntry* table_entry_;
    ::p4::v1::ActionProfileMember* action_profile_member_;
    ::p4::v1::ActionProfileGroup* action_profile_group_;
    ::p4::v1::MeterEntry* meter_entry_;
    ::p4::v1::DirectMeterEntry* direct_meter_entry_;
    ::p4::v1::CounterEntry* counter_entry_;
    ::p4::v1::DirectCounterEntry* direct_counter_entry_;
    ::p4::v1::PacketReplicationEngineEntry* packet_replication_engine_entry_;
    ::p4::v1::ValueSetEntry* value_set_entry_;
    ::p4::v1::RegisterEntry* register_entry_;
    ::p4::v1::DigestEntry* digest_entry_;
  } entity_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExternEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.ExternEntry) */ {
 public:
  ExternEntry();
  virtual ~ExternEntry();

  ExternEntry(const ExternEntry& from);

  inline ExternEntry& operator=(const ExternEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExternEntry& default_instance();

  static inline const ExternEntry* internal_default_instance() {
    return reinterpret_cast<const ExternEntry*>(
               &_ExternEntry_default_instance_);
  }

  void Swap(ExternEntry* other);

  // implements Message ----------------------------------------------

  inline ExternEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  ExternEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExternEntry& from);
  void MergeFrom(const ExternEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExternEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Any entry = 3;
  bool has_entry() const;
  void clear_entry();
  static const int kEntryFieldNumber = 3;
  const ::google::protobuf::Any& entry() const;
  ::google::protobuf::Any* mutable_entry();
  ::google::protobuf::Any* release_entry();
  void set_allocated_entry(::google::protobuf::Any* entry);

  // uint32 extern_type_id = 1;
  void clear_extern_type_id();
  static const int kExternTypeIdFieldNumber = 1;
  ::google::protobuf::uint32 extern_type_id() const;
  void set_extern_type_id(::google::protobuf::uint32 value);

  // uint32 extern_id = 2;
  void clear_extern_id();
  static const int kExternIdFieldNumber = 2;
  ::google::protobuf::uint32 extern_id() const;
  void set_extern_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.ExternEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Any* entry_;
  ::google::protobuf::uint32 extern_type_id_;
  ::google::protobuf::uint32 extern_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TableEntry_IdleTimeout : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.TableEntry.IdleTimeout) */ {
 public:
  TableEntry_IdleTimeout();
  virtual ~TableEntry_IdleTimeout();

  TableEntry_IdleTimeout(const TableEntry_IdleTimeout& from);

  inline TableEntry_IdleTimeout& operator=(const TableEntry_IdleTimeout& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableEntry_IdleTimeout& default_instance();

  static inline const TableEntry_IdleTimeout* internal_default_instance() {
    return reinterpret_cast<const TableEntry_IdleTimeout*>(
               &_TableEntry_IdleTimeout_default_instance_);
  }

  void Swap(TableEntry_IdleTimeout* other);

  // implements Message ----------------------------------------------

  inline TableEntry_IdleTimeout* New() const PROTOBUF_FINAL { return New(NULL); }

  TableEntry_IdleTimeout* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TableEntry_IdleTimeout& from);
  void MergeFrom(const TableEntry_IdleTimeout& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TableEntry_IdleTimeout* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 elapsed_ns = 1;
  void clear_elapsed_ns();
  static const int kElapsedNsFieldNumber = 1;
  ::google::protobuf::int64 elapsed_ns() const;
  void set_elapsed_ns(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:p4.v1.TableEntry.IdleTimeout)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 elapsed_ns_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TableEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.TableEntry) */ {
 public:
  TableEntry();
  virtual ~TableEntry();

  TableEntry(const TableEntry& from);

  inline TableEntry& operator=(const TableEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableEntry& default_instance();

  static inline const TableEntry* internal_default_instance() {
    return reinterpret_cast<const TableEntry*>(
               &_TableEntry_default_instance_);
  }

  void Swap(TableEntry* other);

  // implements Message ----------------------------------------------

  inline TableEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  TableEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TableEntry& from);
  void MergeFrom(const TableEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TableEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TableEntry_IdleTimeout IdleTimeout;

  // accessors -------------------------------------------------------

  // repeated .p4.v1.FieldMatch match = 2;
  int match_size() const;
  void clear_match();
  static const int kMatchFieldNumber = 2;
  const ::p4::v1::FieldMatch& match(int index) const;
  ::p4::v1::FieldMatch* mutable_match(int index);
  ::p4::v1::FieldMatch* add_match();
  ::google::protobuf::RepeatedPtrField< ::p4::v1::FieldMatch >*
      mutable_match();
  const ::google::protobuf::RepeatedPtrField< ::p4::v1::FieldMatch >&
      match() const;

  // bytes metadata = 11;
  void clear_metadata();
  static const int kMetadataFieldNumber = 11;
  const ::std::string& metadata() const;
  void set_metadata(const ::std::string& value);
  #if LANG_CXX11
  void set_metadata(::std::string&& value);
  #endif
  void set_metadata(const char* value);
  void set_metadata(const void* value, size_t size);
  ::std::string* mutable_metadata();
  ::std::string* release_metadata();
  void set_allocated_metadata(::std::string* metadata);

  // .p4.v1.TableAction action = 3;
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 3;
  const ::p4::v1::TableAction& action() const;
  ::p4::v1::TableAction* mutable_action();
  ::p4::v1::TableAction* release_action();
  void set_allocated_action(::p4::v1::TableAction* action);

  // .p4.v1.MeterConfig meter_config = 6;
  bool has_meter_config() const;
  void clear_meter_config();
  static const int kMeterConfigFieldNumber = 6;
  const ::p4::v1::MeterConfig& meter_config() const;
  ::p4::v1::MeterConfig* mutable_meter_config();
  ::p4::v1::MeterConfig* release_meter_config();
  void set_allocated_meter_config(::p4::v1::MeterConfig* meter_config);

  // .p4.v1.CounterData counter_data = 7;
  bool has_counter_data() const;
  void clear_counter_data();
  static const int kCounterDataFieldNumber = 7;
  const ::p4::v1::CounterData& counter_data() const;
  ::p4::v1::CounterData* mutable_counter_data();
  ::p4::v1::CounterData* release_counter_data();
  void set_allocated_counter_data(::p4::v1::CounterData* counter_data);

  // .p4.v1.TableEntry.IdleTimeout time_since_last_hit = 10;
  bool has_time_since_last_hit() const;
  void clear_time_since_last_hit();
  static const int kTimeSinceLastHitFieldNumber = 10;
  const ::p4::v1::TableEntry_IdleTimeout& time_since_last_hit() const;
  ::p4::v1::TableEntry_IdleTimeout* mutable_time_since_last_hit();
  ::p4::v1::TableEntry_IdleTimeout* release_time_since_last_hit();
  void set_allocated_time_since_last_hit(::p4::v1::TableEntry_IdleTimeout* time_since_last_hit);

  // uint32 table_id = 1;
  void clear_table_id();
  static const int kTableIdFieldNumber = 1;
  ::google::protobuf::uint32 table_id() const;
  void set_table_id(::google::protobuf::uint32 value);

  // int32 priority = 4;
  void clear_priority();
  static const int kPriorityFieldNumber = 4;
  ::google::protobuf::int32 priority() const;
  void set_priority(::google::protobuf::int32 value);

  // uint64 controller_metadata = 5 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_controller_metadata();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kControllerMetadataFieldNumber = 5;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::uint64 controller_metadata() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_controller_metadata(::google::protobuf::uint64 value);

  // int64 idle_timeout_ns = 9;
  void clear_idle_timeout_ns();
  static const int kIdleTimeoutNsFieldNumber = 9;
  ::google::protobuf::int64 idle_timeout_ns() const;
  void set_idle_timeout_ns(::google::protobuf::int64 value);

  // bool is_default_action = 8;
  void clear_is_default_action();
  static const int kIsDefaultActionFieldNumber = 8;
  bool is_default_action() const;
  void set_is_default_action(bool value);

  // @@protoc_insertion_point(class_scope:p4.v1.TableEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::v1::FieldMatch > match_;
  ::google::protobuf::internal::ArenaStringPtr metadata_;
  ::p4::v1::TableAction* action_;
  ::p4::v1::MeterConfig* meter_config_;
  ::p4::v1::CounterData* counter_data_;
  ::p4::v1::TableEntry_IdleTimeout* time_since_last_hit_;
  ::google::protobuf::uint32 table_id_;
  ::google::protobuf::int32 priority_;
  ::google::protobuf::uint64 controller_metadata_;
  ::google::protobuf::int64 idle_timeout_ns_;
  bool is_default_action_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FieldMatch_Exact : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.FieldMatch.Exact) */ {
 public:
  FieldMatch_Exact();
  virtual ~FieldMatch_Exact();

  FieldMatch_Exact(const FieldMatch_Exact& from);

  inline FieldMatch_Exact& operator=(const FieldMatch_Exact& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldMatch_Exact& default_instance();

  static inline const FieldMatch_Exact* internal_default_instance() {
    return reinterpret_cast<const FieldMatch_Exact*>(
               &_FieldMatch_Exact_default_instance_);
  }

  void Swap(FieldMatch_Exact* other);

  // implements Message ----------------------------------------------

  inline FieldMatch_Exact* New() const PROTOBUF_FINAL { return New(NULL); }

  FieldMatch_Exact* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FieldMatch_Exact& from);
  void MergeFrom(const FieldMatch_Exact& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FieldMatch_Exact* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:p4.v1.FieldMatch.Exact)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FieldMatch_Ternary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.FieldMatch.Ternary) */ {
 public:
  FieldMatch_Ternary();
  virtual ~FieldMatch_Ternary();

  FieldMatch_Ternary(const FieldMatch_Ternary& from);

  inline FieldMatch_Ternary& operator=(const FieldMatch_Ternary& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldMatch_Ternary& default_instance();

  static inline const FieldMatch_Ternary* internal_default_instance() {
    return reinterpret_cast<const FieldMatch_Ternary*>(
               &_FieldMatch_Ternary_default_instance_);
  }

  void Swap(FieldMatch_Ternary* other);

  // implements Message ----------------------------------------------

  inline FieldMatch_Ternary* New() const PROTOBUF_FINAL { return New(NULL); }

  FieldMatch_Ternary* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FieldMatch_Ternary& from);
  void MergeFrom(const FieldMatch_Ternary& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FieldMatch_Ternary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // bytes mask = 2;
  void clear_mask();
  static const int kMaskFieldNumber = 2;
  const ::std::string& mask() const;
  void set_mask(const ::std::string& value);
  #if LANG_CXX11
  void set_mask(::std::string&& value);
  #endif
  void set_mask(const char* value);
  void set_mask(const void* value, size_t size);
  ::std::string* mutable_mask();
  ::std::string* release_mask();
  void set_allocated_mask(::std::string* mask);

  // @@protoc_insertion_point(class_scope:p4.v1.FieldMatch.Ternary)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr mask_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FieldMatch_LPM : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.FieldMatch.LPM) */ {
 public:
  FieldMatch_LPM();
  virtual ~FieldMatch_LPM();

  FieldMatch_LPM(const FieldMatch_LPM& from);

  inline FieldMatch_LPM& operator=(const FieldMatch_LPM& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldMatch_LPM& default_instance();

  static inline const FieldMatch_LPM* internal_default_instance() {
    return reinterpret_cast<const FieldMatch_LPM*>(
               &_FieldMatch_LPM_default_instance_);
  }

  void Swap(FieldMatch_LPM* other);

  // implements Message ----------------------------------------------

  inline FieldMatch_LPM* New() const PROTOBUF_FINAL { return New(NULL); }

  FieldMatch_LPM* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FieldMatch_LPM& from);
  void MergeFrom(const FieldMatch_LPM& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FieldMatch_LPM* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // int32 prefix_len = 2;
  void clear_prefix_len();
  static const int kPrefixLenFieldNumber = 2;
  ::google::protobuf::int32 prefix_len() const;
  void set_prefix_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.FieldMatch.LPM)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int32 prefix_len_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FieldMatch_Range : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.FieldMatch.Range) */ {
 public:
  FieldMatch_Range();
  virtual ~FieldMatch_Range();

  FieldMatch_Range(const FieldMatch_Range& from);

  inline FieldMatch_Range& operator=(const FieldMatch_Range& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldMatch_Range& default_instance();

  static inline const FieldMatch_Range* internal_default_instance() {
    return reinterpret_cast<const FieldMatch_Range*>(
               &_FieldMatch_Range_default_instance_);
  }

  void Swap(FieldMatch_Range* other);

  // implements Message ----------------------------------------------

  inline FieldMatch_Range* New() const PROTOBUF_FINAL { return New(NULL); }

  FieldMatch_Range* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FieldMatch_Range& from);
  void MergeFrom(const FieldMatch_Range& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FieldMatch_Range* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes low = 1;
  void clear_low();
  static const int kLowFieldNumber = 1;
  const ::std::string& low() const;
  void set_low(const ::std::string& value);
  #if LANG_CXX11
  void set_low(::std::string&& value);
  #endif
  void set_low(const char* value);
  void set_low(const void* value, size_t size);
  ::std::string* mutable_low();
  ::std::string* release_low();
  void set_allocated_low(::std::string* low);

  // bytes high = 2;
  void clear_high();
  static const int kHighFieldNumber = 2;
  const ::std::string& high() const;
  void set_high(const ::std::string& value);
  #if LANG_CXX11
  void set_high(::std::string&& value);
  #endif
  void set_high(const char* value);
  void set_high(const void* value, size_t size);
  ::std::string* mutable_high();
  ::std::string* release_high();
  void set_allocated_high(::std::string* high);

  // @@protoc_insertion_point(class_scope:p4.v1.FieldMatch.Range)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr low_;
  ::google::protobuf::internal::ArenaStringPtr high_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FieldMatch_Optional : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.FieldMatch.Optional) */ {
 public:
  FieldMatch_Optional();
  virtual ~FieldMatch_Optional();

  FieldMatch_Optional(const FieldMatch_Optional& from);

  inline FieldMatch_Optional& operator=(const FieldMatch_Optional& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldMatch_Optional& default_instance();

  static inline const FieldMatch_Optional* internal_default_instance() {
    return reinterpret_cast<const FieldMatch_Optional*>(
               &_FieldMatch_Optional_default_instance_);
  }

  void Swap(FieldMatch_Optional* other);

  // implements Message ----------------------------------------------

  inline FieldMatch_Optional* New() const PROTOBUF_FINAL { return New(NULL); }

  FieldMatch_Optional* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FieldMatch_Optional& from);
  void MergeFrom(const FieldMatch_Optional& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FieldMatch_Optional* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:p4.v1.FieldMatch.Optional)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FieldMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.FieldMatch) */ {
 public:
  FieldMatch();
  virtual ~FieldMatch();

  FieldMatch(const FieldMatch& from);

  inline FieldMatch& operator=(const FieldMatch& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldMatch& default_instance();

  enum FieldMatchTypeCase {
    kExact = 2,
    kTernary = 3,
    kLpm = 4,
    kRange = 6,
    kOptional = 7,
    kOther = 100,
    FIELD_MATCH_TYPE_NOT_SET = 0,
  };

  static inline const FieldMatch* internal_default_instance() {
    return reinterpret_cast<const FieldMatch*>(
               &_FieldMatch_default_instance_);
  }

  void Swap(FieldMatch* other);

  // implements Message ----------------------------------------------

  inline FieldMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  FieldMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FieldMatch& from);
  void MergeFrom(const FieldMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FieldMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FieldMatch_Exact Exact;
  typedef FieldMatch_Ternary Ternary;
  typedef FieldMatch_LPM LPM;
  typedef FieldMatch_Range Range;
  typedef FieldMatch_Optional Optional;

  // accessors -------------------------------------------------------

  // uint32 field_id = 1;
  void clear_field_id();
  static const int kFieldIdFieldNumber = 1;
  ::google::protobuf::uint32 field_id() const;
  void set_field_id(::google::protobuf::uint32 value);

  // .p4.v1.FieldMatch.Exact exact = 2;
  bool has_exact() const;
  void clear_exact();
  static const int kExactFieldNumber = 2;
  const ::p4::v1::FieldMatch_Exact& exact() const;
  ::p4::v1::FieldMatch_Exact* mutable_exact();
  ::p4::v1::FieldMatch_Exact* release_exact();
  void set_allocated_exact(::p4::v1::FieldMatch_Exact* exact);

  // .p4.v1.FieldMatch.Ternary ternary = 3;
  bool has_ternary() const;
  void clear_ternary();
  static const int kTernaryFieldNumber = 3;
  const ::p4::v1::FieldMatch_Ternary& ternary() const;
  ::p4::v1::FieldMatch_Ternary* mutable_ternary();
  ::p4::v1::FieldMatch_Ternary* release_ternary();
  void set_allocated_ternary(::p4::v1::FieldMatch_Ternary* ternary);

  // .p4.v1.FieldMatch.LPM lpm = 4;
  bool has_lpm() const;
  void clear_lpm();
  static const int kLpmFieldNumber = 4;
  const ::p4::v1::FieldMatch_LPM& lpm() const;
  ::p4::v1::FieldMatch_LPM* mutable_lpm();
  ::p4::v1::FieldMatch_LPM* release_lpm();
  void set_allocated_lpm(::p4::v1::FieldMatch_LPM* lpm);

  // .p4.v1.FieldMatch.Range range = 6;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 6;
  const ::p4::v1::FieldMatch_Range& range() const;
  ::p4::v1::FieldMatch_Range* mutable_range();
  ::p4::v1::FieldMatch_Range* release_range();
  void set_allocated_range(::p4::v1::FieldMatch_Range* range);

  // .p4.v1.FieldMatch.Optional optional = 7;
  bool has_optional() const;
  void clear_optional();
  static const int kOptionalFieldNumber = 7;
  const ::p4::v1::FieldMatch_Optional& optional() const;
  ::p4::v1::FieldMatch_Optional* mutable_optional();
  ::p4::v1::FieldMatch_Optional* release_optional();
  void set_allocated_optional(::p4::v1::FieldMatch_Optional* optional);

  // .google.protobuf.Any other = 100;
  bool has_other() const;
  void clear_other();
  static const int kOtherFieldNumber = 100;
  const ::google::protobuf::Any& other() const;
  ::google::protobuf::Any* mutable_other();
  ::google::protobuf::Any* release_other();
  void set_allocated_other(::google::protobuf::Any* other);

  FieldMatchTypeCase field_match_type_case() const;
  // @@protoc_insertion_point(class_scope:p4.v1.FieldMatch)
 private:
  void set_has_exact();
  void set_has_ternary();
  void set_has_lpm();
  void set_has_range();
  void set_has_optional();
  void set_has_other();

  inline bool has_field_match_type() const;
  void clear_field_match_type();
  inline void clear_has_field_match_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 field_id_;
  union FieldMatchTypeUnion {
    FieldMatchTypeUnion() {}
    ::p4::v1::FieldMatch_Exact* exact_;
    ::p4::v1::FieldMatch_Ternary* ternary_;
    ::p4::v1::FieldMatch_LPM* lpm_;
    ::p4::v1::FieldMatch_Range* range_;
    ::p4::v1::FieldMatch_Optional* optional_;
    ::google::protobuf::Any* other_;
  } field_match_type_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TableAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.TableAction) */ {
 public:
  TableAction();
  virtual ~TableAction();

  TableAction(const TableAction& from);

  inline TableAction& operator=(const TableAction& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableAction& default_instance();

  enum TypeCase {
    kAction = 1,
    kActionProfileMemberId = 2,
    kActionProfileGroupId = 3,
    kActionProfileActionSet = 4,
    TYPE_NOT_SET = 0,
  };

  static inline const TableAction* internal_default_instance() {
    return reinterpret_cast<const TableAction*>(
               &_TableAction_default_instance_);
  }

  void Swap(TableAction* other);

  // implements Message ----------------------------------------------

  inline TableAction* New() const PROTOBUF_FINAL { return New(NULL); }

  TableAction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TableAction& from);
  void MergeFrom(const TableAction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TableAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.v1.Action action = 1;
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 1;
  const ::p4::v1::Action& action() const;
  ::p4::v1::Action* mutable_action();
  ::p4::v1::Action* release_action();
  void set_allocated_action(::p4::v1::Action* action);

  // uint32 action_profile_member_id = 2;
  private:
  bool has_action_profile_member_id() const;
  public:
  void clear_action_profile_member_id();
  static const int kActionProfileMemberIdFieldNumber = 2;
  ::google::protobuf::uint32 action_profile_member_id() const;
  void set_action_profile_member_id(::google::protobuf::uint32 value);

  // uint32 action_profile_group_id = 3;
  private:
  bool has_action_profile_group_id() const;
  public:
  void clear_action_profile_group_id();
  static const int kActionProfileGroupIdFieldNumber = 3;
  ::google::protobuf::uint32 action_profile_group_id() const;
  void set_action_profile_group_id(::google::protobuf::uint32 value);

  // .p4.v1.ActionProfileActionSet action_profile_action_set = 4;
  bool has_action_profile_action_set() const;
  void clear_action_profile_action_set();
  static const int kActionProfileActionSetFieldNumber = 4;
  const ::p4::v1::ActionProfileActionSet& action_profile_action_set() const;
  ::p4::v1::ActionProfileActionSet* mutable_action_profile_action_set();
  ::p4::v1::ActionProfileActionSet* release_action_profile_action_set();
  void set_allocated_action_profile_action_set(::p4::v1::ActionProfileActionSet* action_profile_action_set);

  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:p4.v1.TableAction)
 private:
  void set_has_action();
  void set_has_action_profile_member_id();
  void set_has_action_profile_group_id();
  void set_has_action_profile_action_set();

  inline bool has_type() const;
  void clear_type();
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union TypeUnion {
    TypeUnion() {}
    ::p4::v1::Action* action_;
    ::google::protobuf::uint32 action_profile_member_id_;
    ::google::protobuf::uint32 action_profile_group_id_;
    ::p4::v1::ActionProfileActionSet* action_profile_action_set_;
  } type_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Action_Param : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.Action.Param) */ {
 public:
  Action_Param();
  virtual ~Action_Param();

  Action_Param(const Action_Param& from);

  inline Action_Param& operator=(const Action_Param& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Action_Param& default_instance();

  static inline const Action_Param* internal_default_instance() {
    return reinterpret_cast<const Action_Param*>(
               &_Action_Param_default_instance_);
  }

  void Swap(Action_Param* other);

  // implements Message ----------------------------------------------

  inline Action_Param* New() const PROTOBUF_FINAL { return New(NULL); }

  Action_Param* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Action_Param& from);
  void MergeFrom(const Action_Param& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Action_Param* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // uint32 param_id = 2;
  void clear_param_id();
  static const int kParamIdFieldNumber = 2;
  ::google::protobuf::uint32 param_id() const;
  void set_param_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.Action.Param)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint32 param_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Action : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.Action) */ {
 public:
  Action();
  virtual ~Action();

  Action(const Action& from);

  inline Action& operator=(const Action& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Action& default_instance();

  static inline const Action* internal_default_instance() {
    return reinterpret_cast<const Action*>(
               &_Action_default_instance_);
  }

  void Swap(Action* other);

  // implements Message ----------------------------------------------

  inline Action* New() const PROTOBUF_FINAL { return New(NULL); }

  Action* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Action& from);
  void MergeFrom(const Action& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Action* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Action_Param Param;

  // accessors -------------------------------------------------------

  // repeated .p4.v1.Action.Param params = 4;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 4;
  const ::p4::v1::Action_Param& params(int index) const;
  ::p4::v1::Action_Param* mutable_params(int index);
  ::p4::v1::Action_Param* add_params();
  ::google::protobuf::RepeatedPtrField< ::p4::v1::Action_Param >*
      mutable_params();
  const ::google::protobuf::RepeatedPtrField< ::p4::v1::Action_Param >&
      params() const;

  // uint32 action_id = 1;
  void clear_action_id();
  static const int kActionIdFieldNumber = 1;
  ::google::protobuf::uint32 action_id() const;
  void set_action_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.Action)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::v1::Action_Param > params_;
  ::google::protobuf::uint32 action_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionProfileActionSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.ActionProfileActionSet) */ {
 public:
  ActionProfileActionSet();
  virtual ~ActionProfileActionSet();

  ActionProfileActionSet(const ActionProfileActionSet& from);

  inline ActionProfileActionSet& operator=(const ActionProfileActionSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionProfileActionSet& default_instance();

  static inline const ActionProfileActionSet* internal_default_instance() {
    return reinterpret_cast<const ActionProfileActionSet*>(
               &_ActionProfileActionSet_default_instance_);
  }

  void Swap(ActionProfileActionSet* other);

  // implements Message ----------------------------------------------

  inline ActionProfileActionSet* New() const PROTOBUF_FINAL { return New(NULL); }

  ActionProfileActionSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActionProfileActionSet& from);
  void MergeFrom(const ActionProfileActionSet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActionProfileActionSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.v1.ActionProfileAction action_profile_actions = 1;
  int action_profile_actions_size() const;
  void clear_action_profile_actions();
  static const int kActionProfileActionsFieldNumber = 1;
  const ::p4::v1::ActionProfileAction& action_profile_actions(int index) const;
  ::p4::v1::ActionProfileAction* mutable_action_profile_actions(int index);
  ::p4::v1::ActionProfileAction* add_action_profile_actions();
  ::google::protobuf::RepeatedPtrField< ::p4::v1::ActionProfileAction >*
      mutable_action_profile_actions();
  const ::google::protobuf::RepeatedPtrField< ::p4::v1::ActionProfileAction >&
      action_profile_actions() const;

  // @@protoc_insertion_point(class_scope:p4.v1.ActionProfileActionSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::v1::ActionProfileAction > action_profile_actions_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionProfileAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.ActionProfileAction) */ {
 public:
  ActionProfileAction();
  virtual ~ActionProfileAction();

  ActionProfileAction(const ActionProfileAction& from);

  inline ActionProfileAction& operator=(const ActionProfileAction& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionProfileAction& default_instance();

  static inline const ActionProfileAction* internal_default_instance() {
    return reinterpret_cast<const ActionProfileAction*>(
               &_ActionProfileAction_default_instance_);
  }

  void Swap(ActionProfileAction* other);

  // implements Message ----------------------------------------------

  inline ActionProfileAction* New() const PROTOBUF_FINAL { return New(NULL); }

  ActionProfileAction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActionProfileAction& from);
  void MergeFrom(const ActionProfileAction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActionProfileAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.v1.Action action = 1;
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 1;
  const ::p4::v1::Action& action() const;
  ::p4::v1::Action* mutable_action();
  ::p4::v1::Action* release_action();
  void set_allocated_action(::p4::v1::Action* action);

  // int32 weight = 2;
  void clear_weight();
  static const int kWeightFieldNumber = 2;
  ::google::protobuf::int32 weight() const;
  void set_weight(::google::protobuf::int32 value);

  // int32 watch = 3;
  void clear_watch();
  static const int kWatchFieldNumber = 3;
  ::google::protobuf::int32 watch() const;
  void set_watch(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.ActionProfileAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::v1::Action* action_;
  ::google::protobuf::int32 weight_;
  ::google::protobuf::int32 watch_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionProfileMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.ActionProfileMember) */ {
 public:
  ActionProfileMember();
  virtual ~ActionProfileMember();

  ActionProfileMember(const ActionProfileMember& from);

  inline ActionProfileMember& operator=(const ActionProfileMember& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionProfileMember& default_instance();

  static inline const ActionProfileMember* internal_default_instance() {
    return reinterpret_cast<const ActionProfileMember*>(
               &_ActionProfileMember_default_instance_);
  }

  void Swap(ActionProfileMember* other);

  // implements Message ----------------------------------------------

  inline ActionProfileMember* New() const PROTOBUF_FINAL { return New(NULL); }

  ActionProfileMember* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActionProfileMember& from);
  void MergeFrom(const ActionProfileMember& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActionProfileMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.v1.Action action = 3;
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 3;
  const ::p4::v1::Action& action() const;
  ::p4::v1::Action* mutable_action();
  ::p4::v1::Action* release_action();
  void set_allocated_action(::p4::v1::Action* action);

  // uint32 action_profile_id = 1;
  void clear_action_profile_id();
  static const int kActionProfileIdFieldNumber = 1;
  ::google::protobuf::uint32 action_profile_id() const;
  void set_action_profile_id(::google::protobuf::uint32 value);

  // uint32 member_id = 2;
  void clear_member_id();
  static const int kMemberIdFieldNumber = 2;
  ::google::protobuf::uint32 member_id() const;
  void set_member_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.ActionProfileMember)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::v1::Action* action_;
  ::google::protobuf::uint32 action_profile_id_;
  ::google::protobuf::uint32 member_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionProfileGroup_Member : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.ActionProfileGroup.Member) */ {
 public:
  ActionProfileGroup_Member();
  virtual ~ActionProfileGroup_Member();

  ActionProfileGroup_Member(const ActionProfileGroup_Member& from);

  inline ActionProfileGroup_Member& operator=(const ActionProfileGroup_Member& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionProfileGroup_Member& default_instance();

  static inline const ActionProfileGroup_Member* internal_default_instance() {
    return reinterpret_cast<const ActionProfileGroup_Member*>(
               &_ActionProfileGroup_Member_default_instance_);
  }

  void Swap(ActionProfileGroup_Member* other);

  // implements Message ----------------------------------------------

  inline ActionProfileGroup_Member* New() const PROTOBUF_FINAL { return New(NULL); }

  ActionProfileGroup_Member* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActionProfileGroup_Member& from);
  void MergeFrom(const ActionProfileGroup_Member& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActionProfileGroup_Member* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 member_id = 1;
  void clear_member_id();
  static const int kMemberIdFieldNumber = 1;
  ::google::protobuf::uint32 member_id() const;
  void set_member_id(::google::protobuf::uint32 value);

  // int32 weight = 2;
  void clear_weight();
  static const int kWeightFieldNumber = 2;
  ::google::protobuf::int32 weight() const;
  void set_weight(::google::protobuf::int32 value);

  // uint32 watch = 3;
  void clear_watch();
  static const int kWatchFieldNumber = 3;
  ::google::protobuf::uint32 watch() const;
  void set_watch(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.ActionProfileGroup.Member)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 member_id_;
  ::google::protobuf::int32 weight_;
  ::google::protobuf::uint32 watch_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionProfileGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.ActionProfileGroup) */ {
 public:
  ActionProfileGroup();
  virtual ~ActionProfileGroup();

  ActionProfileGroup(const ActionProfileGroup& from);

  inline ActionProfileGroup& operator=(const ActionProfileGroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionProfileGroup& default_instance();

  static inline const ActionProfileGroup* internal_default_instance() {
    return reinterpret_cast<const ActionProfileGroup*>(
               &_ActionProfileGroup_default_instance_);
  }

  void Swap(ActionProfileGroup* other);

  // implements Message ----------------------------------------------

  inline ActionProfileGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  ActionProfileGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActionProfileGroup& from);
  void MergeFrom(const ActionProfileGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActionProfileGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ActionProfileGroup_Member Member;

  // accessors -------------------------------------------------------

  // repeated .p4.v1.ActionProfileGroup.Member members = 3;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 3;
  const ::p4::v1::ActionProfileGroup_Member& members(int index) const;
  ::p4::v1::ActionProfileGroup_Member* mutable_members(int index);
  ::p4::v1::ActionProfileGroup_Member* add_members();
  ::google::protobuf::RepeatedPtrField< ::p4::v1::ActionProfileGroup_Member >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::p4::v1::ActionProfileGroup_Member >&
      members() const;

  // uint32 action_profile_id = 1;
  void clear_action_profile_id();
  static const int kActionProfileIdFieldNumber = 1;
  ::google::protobuf::uint32 action_profile_id() const;
  void set_action_profile_id(::google::protobuf::uint32 value);

  // uint32 group_id = 2;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // int32 max_size = 4;
  void clear_max_size();
  static const int kMaxSizeFieldNumber = 4;
  ::google::protobuf::int32 max_size() const;
  void set_max_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.ActionProfileGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::v1::ActionProfileGroup_Member > members_;
  ::google::protobuf::uint32 action_profile_id_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::int32 max_size_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Index : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.Index) */ {
 public:
  Index();
  virtual ~Index();

  Index(const Index& from);

  inline Index& operator=(const Index& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Index& default_instance();

  static inline const Index* internal_default_instance() {
    return reinterpret_cast<const Index*>(
               &_Index_default_instance_);
  }

  void Swap(Index* other);

  // implements Message ----------------------------------------------

  inline Index* New() const PROTOBUF_FINAL { return New(NULL); }

  Index* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Index& from);
  void MergeFrom(const Index& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Index* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int64 index() const;
  void set_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:p4.v1.Index)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 index_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MeterEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.MeterEntry) */ {
 public:
  MeterEntry();
  virtual ~MeterEntry();

  MeterEntry(const MeterEntry& from);

  inline MeterEntry& operator=(const MeterEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MeterEntry& default_instance();

  static inline const MeterEntry* internal_default_instance() {
    return reinterpret_cast<const MeterEntry*>(
               &_MeterEntry_default_instance_);
  }

  void Swap(MeterEntry* other);

  // implements Message ----------------------------------------------

  inline MeterEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  MeterEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MeterEntry& from);
  void MergeFrom(const MeterEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MeterEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.v1.Index index = 2;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  const ::p4::v1::Index& index() const;
  ::p4::v1::Index* mutable_index();
  ::p4::v1::Index* release_index();
  void set_allocated_index(::p4::v1::Index* index);

  // .p4.v1.MeterConfig config = 3;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 3;
  const ::p4::v1::MeterConfig& config() const;
  ::p4::v1::MeterConfig* mutable_config();
  ::p4::v1::MeterConfig* release_config();
  void set_allocated_config(::p4::v1::MeterConfig* config);

  // uint32 meter_id = 1;
  void clear_meter_id();
  static const int kMeterIdFieldNumber = 1;
  ::google::protobuf::uint32 meter_id() const;
  void set_meter_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.MeterEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::v1::Index* index_;
  ::p4::v1::MeterConfig* config_;
  ::google::protobuf::uint32 meter_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DirectMeterEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.DirectMeterEntry) */ {
 public:
  DirectMeterEntry();
  virtual ~DirectMeterEntry();

  DirectMeterEntry(const DirectMeterEntry& from);

  inline DirectMeterEntry& operator=(const DirectMeterEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DirectMeterEntry& default_instance();

  static inline const DirectMeterEntry* internal_default_instance() {
    return reinterpret_cast<const DirectMeterEntry*>(
               &_DirectMeterEntry_default_instance_);
  }

  void Swap(DirectMeterEntry* other);

  // implements Message ----------------------------------------------

  inline DirectMeterEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  DirectMeterEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DirectMeterEntry& from);
  void MergeFrom(const DirectMeterEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DirectMeterEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.v1.TableEntry table_entry = 1;
  bool has_table_entry() const;
  void clear_table_entry();
  static const int kTableEntryFieldNumber = 1;
  const ::p4::v1::TableEntry& table_entry() const;
  ::p4::v1::TableEntry* mutable_table_entry();
  ::p4::v1::TableEntry* release_table_entry();
  void set_allocated_table_entry(::p4::v1::TableEntry* table_entry);

  // .p4.v1.MeterConfig config = 2;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 2;
  const ::p4::v1::MeterConfig& config() const;
  ::p4::v1::MeterConfig* mutable_config();
  ::p4::v1::MeterConfig* release_config();
  void set_allocated_config(::p4::v1::MeterConfig* config);

  // @@protoc_insertion_point(class_scope:p4.v1.DirectMeterEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::v1::TableEntry* table_entry_;
  ::p4::v1::MeterConfig* config_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MeterConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.MeterConfig) */ {
 public:
  MeterConfig();
  virtual ~MeterConfig();

  MeterConfig(const MeterConfig& from);

  inline MeterConfig& operator=(const MeterConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MeterConfig& default_instance();

  static inline const MeterConfig* internal_default_instance() {
    return reinterpret_cast<const MeterConfig*>(
               &_MeterConfig_default_instance_);
  }

  void Swap(MeterConfig* other);

  // implements Message ----------------------------------------------

  inline MeterConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  MeterConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MeterConfig& from);
  void MergeFrom(const MeterConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MeterConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 cir = 1;
  void clear_cir();
  static const int kCirFieldNumber = 1;
  ::google::protobuf::int64 cir() const;
  void set_cir(::google::protobuf::int64 value);

  // int64 cburst = 2;
  void clear_cburst();
  static const int kCburstFieldNumber = 2;
  ::google::protobuf::int64 cburst() const;
  void set_cburst(::google::protobuf::int64 value);

  // int64 pir = 3;
  void clear_pir();
  static const int kPirFieldNumber = 3;
  ::google::protobuf::int64 pir() const;
  void set_pir(::google::protobuf::int64 value);

  // int64 pburst = 4;
  void clear_pburst();
  static const int kPburstFieldNumber = 4;
  ::google::protobuf::int64 pburst() const;
  void set_pburst(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:p4.v1.MeterConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 cir_;
  ::google::protobuf::int64 cburst_;
  ::google::protobuf::int64 pir_;
  ::google::protobuf::int64 pburst_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CounterEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.CounterEntry) */ {
 public:
  CounterEntry();
  virtual ~CounterEntry();

  CounterEntry(const CounterEntry& from);

  inline CounterEntry& operator=(const CounterEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CounterEntry& default_instance();

  static inline const CounterEntry* internal_default_instance() {
    return reinterpret_cast<const CounterEntry*>(
               &_CounterEntry_default_instance_);
  }

  void Swap(CounterEntry* other);

  // implements Message ----------------------------------------------

  inline CounterEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  CounterEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CounterEntry& from);
  void MergeFrom(const CounterEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CounterEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.v1.Index index = 2;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  const ::p4::v1::Index& index() const;
  ::p4::v1::Index* mutable_index();
  ::p4::v1::Index* release_index();
  void set_allocated_index(::p4::v1::Index* index);

  // .p4.v1.CounterData data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::p4::v1::CounterData& data() const;
  ::p4::v1::CounterData* mutable_data();
  ::p4::v1::CounterData* release_data();
  void set_allocated_data(::p4::v1::CounterData* data);

  // uint32 counter_id = 1;
  void clear_counter_id();
  static const int kCounterIdFieldNumber = 1;
  ::google::protobuf::uint32 counter_id() const;
  void set_counter_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.CounterEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::v1::Index* index_;
  ::p4::v1::CounterData* data_;
  ::google::protobuf::uint32 counter_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DirectCounterEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.DirectCounterEntry) */ {
 public:
  DirectCounterEntry();
  virtual ~DirectCounterEntry();

  DirectCounterEntry(const DirectCounterEntry& from);

  inline DirectCounterEntry& operator=(const DirectCounterEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DirectCounterEntry& default_instance();

  static inline const DirectCounterEntry* internal_default_instance() {
    return reinterpret_cast<const DirectCounterEntry*>(
               &_DirectCounterEntry_default_instance_);
  }

  void Swap(DirectCounterEntry* other);

  // implements Message ----------------------------------------------

  inline DirectCounterEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  DirectCounterEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DirectCounterEntry& from);
  void MergeFrom(const DirectCounterEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DirectCounterEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.v1.TableEntry table_entry = 1;
  bool has_table_entry() const;
  void clear_table_entry();
  static const int kTableEntryFieldNumber = 1;
  const ::p4::v1::TableEntry& table_entry() const;
  ::p4::v1::TableEntry* mutable_table_entry();
  ::p4::v1::TableEntry* release_table_entry();
  void set_allocated_table_entry(::p4::v1::TableEntry* table_entry);

  // .p4.v1.CounterData data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::p4::v1::CounterData& data() const;
  ::p4::v1::CounterData* mutable_data();
  ::p4::v1::CounterData* release_data();
  void set_allocated_data(::p4::v1::CounterData* data);

  // @@protoc_insertion_point(class_scope:p4.v1.DirectCounterEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::v1::TableEntry* table_entry_;
  ::p4::v1::CounterData* data_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CounterData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.CounterData) */ {
 public:
  CounterData();
  virtual ~CounterData();

  CounterData(const CounterData& from);

  inline CounterData& operator=(const CounterData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CounterData& default_instance();

  static inline const CounterData* internal_default_instance() {
    return reinterpret_cast<const CounterData*>(
               &_CounterData_default_instance_);
  }

  void Swap(CounterData* other);

  // implements Message ----------------------------------------------

  inline CounterData* New() const PROTOBUF_FINAL { return New(NULL); }

  CounterData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CounterData& from);
  void MergeFrom(const CounterData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CounterData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 byte_count = 1;
  void clear_byte_count();
  static const int kByteCountFieldNumber = 1;
  ::google::protobuf::int64 byte_count() const;
  void set_byte_count(::google::protobuf::int64 value);

  // int64 packet_count = 2;
  void clear_packet_count();
  static const int kPacketCountFieldNumber = 2;
  ::google::protobuf::int64 packet_count() const;
  void set_packet_count(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:p4.v1.CounterData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 byte_count_;
  ::google::protobuf::int64 packet_count_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PacketReplicationEngineEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.PacketReplicationEngineEntry) */ {
 public:
  PacketReplicationEngineEntry();
  virtual ~PacketReplicationEngineEntry();

  PacketReplicationEngineEntry(const PacketReplicationEngineEntry& from);

  inline PacketReplicationEngineEntry& operator=(const PacketReplicationEngineEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PacketReplicationEngineEntry& default_instance();

  enum TypeCase {
    kMulticastGroupEntry = 1,
    kCloneSessionEntry = 2,
    TYPE_NOT_SET = 0,
  };

  static inline const PacketReplicationEngineEntry* internal_default_instance() {
    return reinterpret_cast<const PacketReplicationEngineEntry*>(
               &_PacketReplicationEngineEntry_default_instance_);
  }

  void Swap(PacketReplicationEngineEntry* other);

  // implements Message ----------------------------------------------

  inline PacketReplicationEngineEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  PacketReplicationEngineEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PacketReplicationEngineEntry& from);
  void MergeFrom(const PacketReplicationEngineEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PacketReplicationEngineEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.v1.MulticastGroupEntry multicast_group_entry = 1;
  bool has_multicast_group_entry() const;
  void clear_multicast_group_entry();
  static const int kMulticastGroupEntryFieldNumber = 1;
  const ::p4::v1::MulticastGroupEntry& multicast_group_entry() const;
  ::p4::v1::MulticastGroupEntry* mutable_multicast_group_entry();
  ::p4::v1::MulticastGroupEntry* release_multicast_group_entry();
  void set_allocated_multicast_group_entry(::p4::v1::MulticastGroupEntry* multicast_group_entry);

  // .p4.v1.CloneSessionEntry clone_session_entry = 2;
  bool has_clone_session_entry() const;
  void clear_clone_session_entry();
  static const int kCloneSessionEntryFieldNumber = 2;
  const ::p4::v1::CloneSessionEntry& clone_session_entry() const;
  ::p4::v1::CloneSessionEntry* mutable_clone_session_entry();
  ::p4::v1::CloneSessionEntry* release_clone_session_entry();
  void set_allocated_clone_session_entry(::p4::v1::CloneSessionEntry* clone_session_entry);

  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:p4.v1.PacketReplicationEngineEntry)
 private:
  void set_has_multicast_group_entry();
  void set_has_clone_session_entry();

  inline bool has_type() const;
  void clear_type();
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union TypeUnion {
    TypeUnion() {}
    ::p4::v1::MulticastGroupEntry* multicast_group_entry_;
    ::p4::v1::CloneSessionEntry* clone_session_entry_;
  } type_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Replica : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.Replica) */ {
 public:
  Replica();
  virtual ~Replica();

  Replica(const Replica& from);

  inline Replica& operator=(const Replica& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Replica& default_instance();

  static inline const Replica* internal_default_instance() {
    return reinterpret_cast<const Replica*>(
               &_Replica_default_instance_);
  }

  void Swap(Replica* other);

  // implements Message ----------------------------------------------

  inline Replica* New() const PROTOBUF_FINAL { return New(NULL); }

  Replica* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Replica& from);
  void MergeFrom(const Replica& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Replica* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 egress_port = 1;
  void clear_egress_port();
  static const int kEgressPortFieldNumber = 1;
  ::google::protobuf::uint32 egress_port() const;
  void set_egress_port(::google::protobuf::uint32 value);

  // uint32 instance = 2;
  void clear_instance();
  static const int kInstanceFieldNumber = 2;
  ::google::protobuf::uint32 instance() const;
  void set_instance(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.Replica)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 egress_port_;
  ::google::protobuf::uint32 instance_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MulticastGroupEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.MulticastGroupEntry) */ {
 public:
  MulticastGroupEntry();
  virtual ~MulticastGroupEntry();

  MulticastGroupEntry(const MulticastGroupEntry& from);

  inline MulticastGroupEntry& operator=(const MulticastGroupEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MulticastGroupEntry& default_instance();

  static inline const MulticastGroupEntry* internal_default_instance() {
    return reinterpret_cast<const MulticastGroupEntry*>(
               &_MulticastGroupEntry_default_instance_);
  }

  void Swap(MulticastGroupEntry* other);

  // implements Message ----------------------------------------------

  inline MulticastGroupEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  MulticastGroupEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MulticastGroupEntry& from);
  void MergeFrom(const MulticastGroupEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MulticastGroupEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.v1.Replica replicas = 2;
  int replicas_size() const;
  void clear_replicas();
  static const int kReplicasFieldNumber = 2;
  const ::p4::v1::Replica& replicas(int index) const;
  ::p4::v1::Replica* mutable_replicas(int index);
  ::p4::v1::Replica* add_replicas();
  ::google::protobuf::RepeatedPtrField< ::p4::v1::Replica >*
      mutable_replicas();
  const ::google::protobuf::RepeatedPtrField< ::p4::v1::Replica >&
      replicas() const;

  // uint32 multicast_group_id = 1;
  void clear_multicast_group_id();
  static const int kMulticastGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 multicast_group_id() const;
  void set_multicast_group_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.MulticastGroupEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::v1::Replica > replicas_;
  ::google::protobuf::uint32 multicast_group_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CloneSessionEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.CloneSessionEntry) */ {
 public:
  CloneSessionEntry();
  virtual ~CloneSessionEntry();

  CloneSessionEntry(const CloneSessionEntry& from);

  inline CloneSessionEntry& operator=(const CloneSessionEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CloneSessionEntry& default_instance();

  static inline const CloneSessionEntry* internal_default_instance() {
    return reinterpret_cast<const CloneSessionEntry*>(
               &_CloneSessionEntry_default_instance_);
  }

  void Swap(CloneSessionEntry* other);

  // implements Message ----------------------------------------------

  inline CloneSessionEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  CloneSessionEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloneSessionEntry& from);
  void MergeFrom(const CloneSessionEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloneSessionEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.v1.Replica replicas = 2;
  int replicas_size() const;
  void clear_replicas();
  static const int kReplicasFieldNumber = 2;
  const ::p4::v1::Replica& replicas(int index) const;
  ::p4::v1::Replica* mutable_replicas(int index);
  ::p4::v1::Replica* add_replicas();
  ::google::protobuf::RepeatedPtrField< ::p4::v1::Replica >*
      mutable_replicas();
  const ::google::protobuf::RepeatedPtrField< ::p4::v1::Replica >&
      replicas() const;

  // uint32 session_id = 1;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // uint32 class_of_service = 3;
  void clear_class_of_service();
  static const int kClassOfServiceFieldNumber = 3;
  ::google::protobuf::uint32 class_of_service() const;
  void set_class_of_service(::google::protobuf::uint32 value);

  // int32 packet_length_bytes = 4;
  void clear_packet_length_bytes();
  static const int kPacketLengthBytesFieldNumber = 4;
  ::google::protobuf::int32 packet_length_bytes() const;
  void set_packet_length_bytes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.CloneSessionEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::v1::Replica > replicas_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 class_of_service_;
  ::google::protobuf::int32 packet_length_bytes_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ValueSetMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.ValueSetMember) */ {
 public:
  ValueSetMember();
  virtual ~ValueSetMember();

  ValueSetMember(const ValueSetMember& from);

  inline ValueSetMember& operator=(const ValueSetMember& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ValueSetMember& default_instance();

  static inline const ValueSetMember* internal_default_instance() {
    return reinterpret_cast<const ValueSetMember*>(
               &_ValueSetMember_default_instance_);
  }

  void Swap(ValueSetMember* other);

  // implements Message ----------------------------------------------

  inline ValueSetMember* New() const PROTOBUF_FINAL { return New(NULL); }

  ValueSetMember* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ValueSetMember& from);
  void MergeFrom(const ValueSetMember& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ValueSetMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.v1.FieldMatch match = 1;
  int match_size() const;
  void clear_match();
  static const int kMatchFieldNumber = 1;
  const ::p4::v1::FieldMatch& match(int index) const;
  ::p4::v1::FieldMatch* mutable_match(int index);
  ::p4::v1::FieldMatch* add_match();
  ::google::protobuf::RepeatedPtrField< ::p4::v1::FieldMatch >*
      mutable_match();
  const ::google::protobuf::RepeatedPtrField< ::p4::v1::FieldMatch >&
      match() const;

  // @@protoc_insertion_point(class_scope:p4.v1.ValueSetMember)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::v1::FieldMatch > match_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ValueSetEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.ValueSetEntry) */ {
 public:
  ValueSetEntry();
  virtual ~ValueSetEntry();

  ValueSetEntry(const ValueSetEntry& from);

  inline ValueSetEntry& operator=(const ValueSetEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ValueSetEntry& default_instance();

  static inline const ValueSetEntry* internal_default_instance() {
    return reinterpret_cast<const ValueSetEntry*>(
               &_ValueSetEntry_default_instance_);
  }

  void Swap(ValueSetEntry* other);

  // implements Message ----------------------------------------------

  inline ValueSetEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  ValueSetEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ValueSetEntry& from);
  void MergeFrom(const ValueSetEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ValueSetEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.v1.ValueSetMember members = 2;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 2;
  const ::p4::v1::ValueSetMember& members(int index) const;
  ::p4::v1::ValueSetMember* mutable_members(int index);
  ::p4::v1::ValueSetMember* add_members();
  ::google::protobuf::RepeatedPtrField< ::p4::v1::ValueSetMember >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::p4::v1::ValueSetMember >&
      members() const;

  // uint32 value_set_id = 1;
  void clear_value_set_id();
  static const int kValueSetIdFieldNumber = 1;
  ::google::protobuf::uint32 value_set_id() const;
  void set_value_set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.ValueSetEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::v1::ValueSetMember > members_;
  ::google::protobuf::uint32 value_set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.RegisterEntry) */ {
 public:
  RegisterEntry();
  virtual ~RegisterEntry();

  RegisterEntry(const RegisterEntry& from);

  inline RegisterEntry& operator=(const RegisterEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterEntry& default_instance();

  static inline const RegisterEntry* internal_default_instance() {
    return reinterpret_cast<const RegisterEntry*>(
               &_RegisterEntry_default_instance_);
  }

  void Swap(RegisterEntry* other);

  // implements Message ----------------------------------------------

  inline RegisterEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterEntry& from);
  void MergeFrom(const RegisterEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.v1.Index index = 2;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  const ::p4::v1::Index& index() const;
  ::p4::v1::Index* mutable_index();
  ::p4::v1::Index* release_index();
  void set_allocated_index(::p4::v1::Index* index);

  // .p4.v1.P4Data data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::p4::v1::P4Data& data() const;
  ::p4::v1::P4Data* mutable_data();
  ::p4::v1::P4Data* release_data();
  void set_allocated_data(::p4::v1::P4Data* data);

  // uint32 register_id = 1;
  void clear_register_id();
  static const int kRegisterIdFieldNumber = 1;
  ::google::protobuf::uint32 register_id() const;
  void set_register_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.RegisterEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::v1::Index* index_;
  ::p4::v1::P4Data* data_;
  ::google::protobuf::uint32 register_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DigestEntry_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.DigestEntry.Config) */ {
 public:
  DigestEntry_Config();
  virtual ~DigestEntry_Config();

  DigestEntry_Config(const DigestEntry_Config& from);

  inline DigestEntry_Config& operator=(const DigestEntry_Config& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DigestEntry_Config& default_instance();

  static inline const DigestEntry_Config* internal_default_instance() {
    return reinterpret_cast<const DigestEntry_Config*>(
               &_DigestEntry_Config_default_instance_);
  }

  void Swap(DigestEntry_Config* other);

  // implements Message ----------------------------------------------

  inline DigestEntry_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  DigestEntry_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DigestEntry_Config& from);
  void MergeFrom(const DigestEntry_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DigestEntry_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 max_timeout_ns = 1;
  void clear_max_timeout_ns();
  static const int kMaxTimeoutNsFieldNumber = 1;
  ::google::protobuf::int64 max_timeout_ns() const;
  void set_max_timeout_ns(::google::protobuf::int64 value);

  // int64 ack_timeout_ns = 3;
  void clear_ack_timeout_ns();
  static const int kAckTimeoutNsFieldNumber = 3;
  ::google::protobuf::int64 ack_timeout_ns() const;
  void set_ack_timeout_ns(::google::protobuf::int64 value);

  // int32 max_list_size = 2;
  void clear_max_list_size();
  static const int kMaxListSizeFieldNumber = 2;
  ::google::protobuf::int32 max_list_size() const;
  void set_max_list_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.DigestEntry.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 max_timeout_ns_;
  ::google::protobuf::int64 ack_timeout_ns_;
  ::google::protobuf::int32 max_list_size_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DigestEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.DigestEntry) */ {
 public:
  DigestEntry();
  virtual ~DigestEntry();

  DigestEntry(const DigestEntry& from);

  inline DigestEntry& operator=(const DigestEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DigestEntry& default_instance();

  static inline const DigestEntry* internal_default_instance() {
    return reinterpret_cast<const DigestEntry*>(
               &_DigestEntry_default_instance_);
  }

  void Swap(DigestEntry* other);

  // implements Message ----------------------------------------------

  inline DigestEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  DigestEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DigestEntry& from);
  void MergeFrom(const DigestEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DigestEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DigestEntry_Config Config;

  // accessors -------------------------------------------------------

  // .p4.v1.DigestEntry.Config config = 2;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 2;
  const ::p4::v1::DigestEntry_Config& config() const;
  ::p4::v1::DigestEntry_Config* mutable_config();
  ::p4::v1::DigestEntry_Config* release_config();
  void set_allocated_config(::p4::v1::DigestEntry_Config* config);

  // uint32 digest_id = 1;
  void clear_digest_id();
  static const int kDigestIdFieldNumber = 1;
  ::google::protobuf::uint32 digest_id() const;
  void set_digest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.DigestEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::v1::DigestEntry_Config* config_;
  ::google::protobuf::uint32 digest_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StreamMessageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.StreamMessageRequest) */ {
 public:
  StreamMessageRequest();
  virtual ~StreamMessageRequest();

  StreamMessageRequest(const StreamMessageRequest& from);

  inline StreamMessageRequest& operator=(const StreamMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamMessageRequest& default_instance();

  enum UpdateCase {
    kArbitration = 1,
    kPacket = 2,
    kDigestAck = 3,
    kOther = 4,
    UPDATE_NOT_SET = 0,
  };

  static inline const StreamMessageRequest* internal_default_instance() {
    return reinterpret_cast<const StreamMessageRequest*>(
               &_StreamMessageRequest_default_instance_);
  }

  void Swap(StreamMessageRequest* other);

  // implements Message ----------------------------------------------

  inline StreamMessageRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  StreamMessageRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StreamMessageRequest& from);
  void MergeFrom(const StreamMessageRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StreamMessageRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.v1.MasterArbitrationUpdate arbitration = 1;
  bool has_arbitration() const;
  void clear_arbitration();
  static const int kArbitrationFieldNumber = 1;
  const ::p4::v1::MasterArbitrationUpdate& arbitration() const;
  ::p4::v1::MasterArbitrationUpdate* mutable_arbitration();
  ::p4::v1::MasterArbitrationUpdate* release_arbitration();
  void set_allocated_arbitration(::p4::v1::MasterArbitrationUpdate* arbitration);

  // .p4.v1.PacketOut packet = 2;
  bool has_packet() const;
  void clear_packet();
  static const int kPacketFieldNumber = 2;
  const ::p4::v1::PacketOut& packet() const;
  ::p4::v1::PacketOut* mutable_packet();
  ::p4::v1::PacketOut* release_packet();
  void set_allocated_packet(::p4::v1::PacketOut* packet);

  // .p4.v1.DigestListAck digest_ack = 3;
  bool has_digest_ack() const;
  void clear_digest_ack();
  static const int kDigestAckFieldNumber = 3;
  const ::p4::v1::DigestListAck& digest_ack() const;
  ::p4::v1::DigestListAck* mutable_digest_ack();
  ::p4::v1::DigestListAck* release_digest_ack();
  void set_allocated_digest_ack(::p4::v1::DigestListAck* digest_ack);

  // .google.protobuf.Any other = 4;
  bool has_other() const;
  void clear_other();
  static const int kOtherFieldNumber = 4;
  const ::google::protobuf::Any& other() const;
  ::google::protobuf::Any* mutable_other();
  ::google::protobuf::Any* release_other();
  void set_allocated_other(::google::protobuf::Any* other);

  UpdateCase update_case() const;
  // @@protoc_insertion_point(class_scope:p4.v1.StreamMessageRequest)
 private:
  void set_has_arbitration();
  void set_has_packet();
  void set_has_digest_ack();
  void set_has_other();

  inline bool has_update() const;
  void clear_update();
  inline void clear_has_update();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union UpdateUnion {
    UpdateUnion() {}
    ::p4::v1::MasterArbitrationUpdate* arbitration_;
    ::p4::v1::PacketOut* packet_;
    ::p4::v1::DigestListAck* digest_ack_;
    ::google::protobuf::Any* other_;
  } update_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PacketOut : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.PacketOut) */ {
 public:
  PacketOut();
  virtual ~PacketOut();

  PacketOut(const PacketOut& from);

  inline PacketOut& operator=(const PacketOut& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PacketOut& default_instance();

  static inline const PacketOut* internal_default_instance() {
    return reinterpret_cast<const PacketOut*>(
               &_PacketOut_default_instance_);
  }

  void Swap(PacketOut* other);

  // implements Message ----------------------------------------------

  inline PacketOut* New() const PROTOBUF_FINAL { return New(NULL); }

  PacketOut* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PacketOut& from);
  void MergeFrom(const PacketOut& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PacketOut* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.v1.PacketMetadata metadata = 2;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 2;
  const ::p4::v1::PacketMetadata& metadata(int index) const;
  ::p4::v1::PacketMetadata* mutable_metadata(int index);
  ::p4::v1::PacketMetadata* add_metadata();
  ::google::protobuf::RepeatedPtrField< ::p4::v1::PacketMetadata >*
      mutable_metadata();
  const ::google::protobuf::RepeatedPtrField< ::p4::v1::PacketMetadata >&
      metadata() const;

  // bytes payload = 1;
  void clear_payload();
  static const int kPayloadFieldNumber = 1;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:p4.v1.PacketOut)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::v1::PacketMetadata > metadata_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DigestListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.DigestListAck) */ {
 public:
  DigestListAck();
  virtual ~DigestListAck();

  DigestListAck(const DigestListAck& from);

  inline DigestListAck& operator=(const DigestListAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DigestListAck& default_instance();

  static inline const DigestListAck* internal_default_instance() {
    return reinterpret_cast<const DigestListAck*>(
               &_DigestListAck_default_instance_);
  }

  void Swap(DigestListAck* other);

  // implements Message ----------------------------------------------

  inline DigestListAck* New() const PROTOBUF_FINAL { return New(NULL); }

  DigestListAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DigestListAck& from);
  void MergeFrom(const DigestListAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DigestListAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 list_id = 2;
  void clear_list_id();
  static const int kListIdFieldNumber = 2;
  ::google::protobuf::uint64 list_id() const;
  void set_list_id(::google::protobuf::uint64 value);

  // uint32 digest_id = 1;
  void clear_digest_id();
  static const int kDigestIdFieldNumber = 1;
  ::google::protobuf::uint32 digest_id() const;
  void set_digest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.DigestListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 list_id_;
  ::google::protobuf::uint32 digest_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StreamMessageResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.StreamMessageResponse) */ {
 public:
  StreamMessageResponse();
  virtual ~StreamMessageResponse();

  StreamMessageResponse(const StreamMessageResponse& from);

  inline StreamMessageResponse& operator=(const StreamMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamMessageResponse& default_instance();

  enum UpdateCase {
    kArbitration = 1,
    kPacket = 2,
    kDigest = 3,
    kIdleTimeoutNotification = 4,
    kOther = 5,
    kError = 6,
    UPDATE_NOT_SET = 0,
  };

  static inline const StreamMessageResponse* internal_default_instance() {
    return reinterpret_cast<const StreamMessageResponse*>(
               &_StreamMessageResponse_default_instance_);
  }

  void Swap(StreamMessageResponse* other);

  // implements Message ----------------------------------------------

  inline StreamMessageResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  StreamMessageResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StreamMessageResponse& from);
  void MergeFrom(const StreamMessageResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StreamMessageResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.v1.MasterArbitrationUpdate arbitration = 1;
  bool has_arbitration() const;
  void clear_arbitration();
  static const int kArbitrationFieldNumber = 1;
  const ::p4::v1::MasterArbitrationUpdate& arbitration() const;
  ::p4::v1::MasterArbitrationUpdate* mutable_arbitration();
  ::p4::v1::MasterArbitrationUpdate* release_arbitration();
  void set_allocated_arbitration(::p4::v1::MasterArbitrationUpdate* arbitration);

  // .p4.v1.PacketIn packet = 2;
  bool has_packet() const;
  void clear_packet();
  static const int kPacketFieldNumber = 2;
  const ::p4::v1::PacketIn& packet() const;
  ::p4::v1::PacketIn* mutable_packet();
  ::p4::v1::PacketIn* release_packet();
  void set_allocated_packet(::p4::v1::PacketIn* packet);

  // .p4.v1.DigestList digest = 3;
  bool has_digest() const;
  void clear_digest();
  static const int kDigestFieldNumber = 3;
  const ::p4::v1::DigestList& digest() const;
  ::p4::v1::DigestList* mutable_digest();
  ::p4::v1::DigestList* release_digest();
  void set_allocated_digest(::p4::v1::DigestList* digest);

  // .p4.v1.IdleTimeoutNotification idle_timeout_notification = 4;
  bool has_idle_timeout_notification() const;
  void clear_idle_timeout_notification();
  static const int kIdleTimeoutNotificationFieldNumber = 4;
  const ::p4::v1::IdleTimeoutNotification& idle_timeout_notification() const;
  ::p4::v1::IdleTimeoutNotification* mutable_idle_timeout_notification();
  ::p4::v1::IdleTimeoutNotification* release_idle_timeout_notification();
  void set_allocated_idle_timeout_notification(::p4::v1::IdleTimeoutNotification* idle_timeout_notification);

  // .google.protobuf.Any other = 5;
  bool has_other() const;
  void clear_other();
  static const int kOtherFieldNumber = 5;
  const ::google::protobuf::Any& other() const;
  ::google::protobuf::Any* mutable_other();
  ::google::protobuf::Any* release_other();
  void set_allocated_other(::google::protobuf::Any* other);

  // .p4.v1.StreamError error = 6;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 6;
  const ::p4::v1::StreamError& error() const;
  ::p4::v1::StreamError* mutable_error();
  ::p4::v1::StreamError* release_error();
  void set_allocated_error(::p4::v1::StreamError* error);

  UpdateCase update_case() const;
  // @@protoc_insertion_point(class_scope:p4.v1.StreamMessageResponse)
 private:
  void set_has_arbitration();
  void set_has_packet();
  void set_has_digest();
  void set_has_idle_timeout_notification();
  void set_has_other();
  void set_has_error();

  inline bool has_update() const;
  void clear_update();
  inline void clear_has_update();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union UpdateUnion {
    UpdateUnion() {}
    ::p4::v1::MasterArbitrationUpdate* arbitration_;
    ::p4::v1::PacketIn* packet_;
    ::p4::v1::DigestList* digest_;
    ::p4::v1::IdleTimeoutNotification* idle_timeout_notification_;
    ::google::protobuf::Any* other_;
    ::p4::v1::StreamError* error_;
  } update_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PacketIn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.PacketIn) */ {
 public:
  PacketIn();
  virtual ~PacketIn();

  PacketIn(const PacketIn& from);

  inline PacketIn& operator=(const PacketIn& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PacketIn& default_instance();

  static inline const PacketIn* internal_default_instance() {
    return reinterpret_cast<const PacketIn*>(
               &_PacketIn_default_instance_);
  }

  void Swap(PacketIn* other);

  // implements Message ----------------------------------------------

  inline PacketIn* New() const PROTOBUF_FINAL { return New(NULL); }

  PacketIn* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PacketIn& from);
  void MergeFrom(const PacketIn& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PacketIn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.v1.PacketMetadata metadata = 2;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 2;
  const ::p4::v1::PacketMetadata& metadata(int index) const;
  ::p4::v1::PacketMetadata* mutable_metadata(int index);
  ::p4::v1::PacketMetadata* add_metadata();
  ::google::protobuf::RepeatedPtrField< ::p4::v1::PacketMetadata >*
      mutable_metadata();
  const ::google::protobuf::RepeatedPtrField< ::p4::v1::PacketMetadata >&
      metadata() const;

  // bytes payload = 1;
  void clear_payload();
  static const int kPayloadFieldNumber = 1;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // @@protoc_insertion_point(class_scope:p4.v1.PacketIn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::v1::PacketMetadata > metadata_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DigestList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.DigestList) */ {
 public:
  DigestList();
  virtual ~DigestList();

  DigestList(const DigestList& from);

  inline DigestList& operator=(const DigestList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DigestList& default_instance();

  static inline const DigestList* internal_default_instance() {
    return reinterpret_cast<const DigestList*>(
               &_DigestList_default_instance_);
  }

  void Swap(DigestList* other);

  // implements Message ----------------------------------------------

  inline DigestList* New() const PROTOBUF_FINAL { return New(NULL); }

  DigestList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DigestList& from);
  void MergeFrom(const DigestList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DigestList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.v1.P4Data data = 3;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::p4::v1::P4Data& data(int index) const;
  ::p4::v1::P4Data* mutable_data(int index);
  ::p4::v1::P4Data* add_data();
  ::google::protobuf::RepeatedPtrField< ::p4::v1::P4Data >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::p4::v1::P4Data >&
      data() const;

  // uint64 list_id = 2;
  void clear_list_id();
  static const int kListIdFieldNumber = 2;
  ::google::protobuf::uint64 list_id() const;
  void set_list_id(::google::protobuf::uint64 value);

  // int64 timestamp = 4;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // uint32 digest_id = 1;
  void clear_digest_id();
  static const int kDigestIdFieldNumber = 1;
  ::google::protobuf::uint32 digest_id() const;
  void set_digest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.DigestList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::v1::P4Data > data_;
  ::google::protobuf::uint64 list_id_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::uint32 digest_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PacketMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.PacketMetadata) */ {
 public:
  PacketMetadata();
  virtual ~PacketMetadata();

  PacketMetadata(const PacketMetadata& from);

  inline PacketMetadata& operator=(const PacketMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PacketMetadata& default_instance();

  static inline const PacketMetadata* internal_default_instance() {
    return reinterpret_cast<const PacketMetadata*>(
               &_PacketMetadata_default_instance_);
  }

  void Swap(PacketMetadata* other);

  // implements Message ----------------------------------------------

  inline PacketMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  PacketMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PacketMetadata& from);
  void MergeFrom(const PacketMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PacketMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // uint32 metadata_id = 1;
  void clear_metadata_id();
  static const int kMetadataIdFieldNumber = 1;
  ::google::protobuf::uint32 metadata_id() const;
  void set_metadata_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.PacketMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint32 metadata_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MasterArbitrationUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.MasterArbitrationUpdate) */ {
 public:
  MasterArbitrationUpdate();
  virtual ~MasterArbitrationUpdate();

  MasterArbitrationUpdate(const MasterArbitrationUpdate& from);

  inline MasterArbitrationUpdate& operator=(const MasterArbitrationUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MasterArbitrationUpdate& default_instance();

  static inline const MasterArbitrationUpdate* internal_default_instance() {
    return reinterpret_cast<const MasterArbitrationUpdate*>(
               &_MasterArbitrationUpdate_default_instance_);
  }

  void Swap(MasterArbitrationUpdate* other);

  // implements Message ----------------------------------------------

  inline MasterArbitrationUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  MasterArbitrationUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MasterArbitrationUpdate& from);
  void MergeFrom(const MasterArbitrationUpdate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MasterArbitrationUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.v1.Role role = 2;
  bool has_role() const;
  void clear_role();
  static const int kRoleFieldNumber = 2;
  const ::p4::v1::Role& role() const;
  ::p4::v1::Role* mutable_role();
  ::p4::v1::Role* release_role();
  void set_allocated_role(::p4::v1::Role* role);

  // .p4.v1.Uint128 election_id = 3;
  bool has_election_id() const;
  void clear_election_id();
  static const int kElectionIdFieldNumber = 3;
  const ::p4::v1::Uint128& election_id() const;
  ::p4::v1::Uint128* mutable_election_id();
  ::p4::v1::Uint128* release_election_id();
  void set_allocated_election_id(::p4::v1::Uint128* election_id);

  // .google.rpc.Status status = 4;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  const ::google::rpc::Status& status() const;
  ::google::rpc::Status* mutable_status();
  ::google::rpc::Status* release_status();
  void set_allocated_status(::google::rpc::Status* status);

  // uint64 device_id = 1;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 1;
  ::google::protobuf::uint64 device_id() const;
  void set_device_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:p4.v1.MasterArbitrationUpdate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::v1::Role* role_;
  ::p4::v1::Uint128* election_id_;
  ::google::rpc::Status* status_;
  ::google::protobuf::uint64 device_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Role : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.Role) */ {
 public:
  Role();
  virtual ~Role();

  Role(const Role& from);

  inline Role& operator=(const Role& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Role& default_instance();

  static inline const Role* internal_default_instance() {
    return reinterpret_cast<const Role*>(
               &_Role_default_instance_);
  }

  void Swap(Role* other);

  // implements Message ----------------------------------------------

  inline Role* New() const PROTOBUF_FINAL { return New(NULL); }

  Role* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Role& from);
  void MergeFrom(const Role& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Role* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Any config = 2;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 2;
  const ::google::protobuf::Any& config() const;
  ::google::protobuf::Any* mutable_config();
  ::google::protobuf::Any* release_config();
  void set_allocated_config(::google::protobuf::Any* config);

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:p4.v1.Role)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Any* config_;
  ::google::protobuf::uint64 id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IdleTimeoutNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.IdleTimeoutNotification) */ {
 public:
  IdleTimeoutNotification();
  virtual ~IdleTimeoutNotification();

  IdleTimeoutNotification(const IdleTimeoutNotification& from);

  inline IdleTimeoutNotification& operator=(const IdleTimeoutNotification& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IdleTimeoutNotification& default_instance();

  static inline const IdleTimeoutNotification* internal_default_instance() {
    return reinterpret_cast<const IdleTimeoutNotification*>(
               &_IdleTimeoutNotification_default_instance_);
  }

  void Swap(IdleTimeoutNotification* other);

  // implements Message ----------------------------------------------

  inline IdleTimeoutNotification* New() const PROTOBUF_FINAL { return New(NULL); }

  IdleTimeoutNotification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IdleTimeoutNotification& from);
  void MergeFrom(const IdleTimeoutNotification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IdleTimeoutNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.v1.TableEntry table_entry = 1;
  int table_entry_size() const;
  void clear_table_entry();
  static const int kTableEntryFieldNumber = 1;
  const ::p4::v1::TableEntry& table_entry(int index) const;
  ::p4::v1::TableEntry* mutable_table_entry(int index);
  ::p4::v1::TableEntry* add_table_entry();
  ::google::protobuf::RepeatedPtrField< ::p4::v1::TableEntry >*
      mutable_table_entry();
  const ::google::protobuf::RepeatedPtrField< ::p4::v1::TableEntry >&
      table_entry() const;

  // int64 timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:p4.v1.IdleTimeoutNotification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::v1::TableEntry > table_entry_;
  ::google::protobuf::int64 timestamp_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StreamError : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.StreamError) */ {
 public:
  StreamError();
  virtual ~StreamError();

  StreamError(const StreamError& from);

  inline StreamError& operator=(const StreamError& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamError& default_instance();

  enum DetailsCase {
    kPacketOut = 5,
    kDigestListAck = 6,
    kOther = 7,
    DETAILS_NOT_SET = 0,
  };

  static inline const StreamError* internal_default_instance() {
    return reinterpret_cast<const StreamError*>(
               &_StreamError_default_instance_);
  }

  void Swap(StreamError* other);

  // implements Message ----------------------------------------------

  inline StreamError* New() const PROTOBUF_FINAL { return New(NULL); }

  StreamError* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StreamError& from);
  void MergeFrom(const StreamError& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StreamError* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // string space = 3;
  void clear_space();
  static const int kSpaceFieldNumber = 3;
  const ::std::string& space() const;
  void set_space(const ::std::string& value);
  #if LANG_CXX11
  void set_space(::std::string&& value);
  #endif
  void set_space(const char* value);
  void set_space(const char* value, size_t size);
  ::std::string* mutable_space();
  ::std::string* release_space();
  void set_allocated_space(::std::string* space);

  // int32 canonical_code = 1;
  void clear_canonical_code();
  static const int kCanonicalCodeFieldNumber = 1;
  ::google::protobuf::int32 canonical_code() const;
  void set_canonical_code(::google::protobuf::int32 value);

  // int32 code = 4;
  void clear_code();
  static const int kCodeFieldNumber = 4;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // .p4.v1.PacketOutError packet_out = 5;
  bool has_packet_out() const;
  void clear_packet_out();
  static const int kPacketOutFieldNumber = 5;
  const ::p4::v1::PacketOutError& packet_out() const;
  ::p4::v1::PacketOutError* mutable_packet_out();
  ::p4::v1::PacketOutError* release_packet_out();
  void set_allocated_packet_out(::p4::v1::PacketOutError* packet_out);

  // .p4.v1.DigestListAckError digest_list_ack = 6;
  bool has_digest_list_ack() const;
  void clear_digest_list_ack();
  static const int kDigestListAckFieldNumber = 6;
  const ::p4::v1::DigestListAckError& digest_list_ack() const;
  ::p4::v1::DigestListAckError* mutable_digest_list_ack();
  ::p4::v1::DigestListAckError* release_digest_list_ack();
  void set_allocated_digest_list_ack(::p4::v1::DigestListAckError* digest_list_ack);

  // .p4.v1.StreamOtherError other = 7;
  bool has_other() const;
  void clear_other();
  static const int kOtherFieldNumber = 7;
  const ::p4::v1::StreamOtherError& other() const;
  ::p4::v1::StreamOtherError* mutable_other();
  ::p4::v1::StreamOtherError* release_other();
  void set_allocated_other(::p4::v1::StreamOtherError* other);

  DetailsCase details_case() const;
  // @@protoc_insertion_point(class_scope:p4.v1.StreamError)
 private:
  void set_has_packet_out();
  void set_has_digest_list_ack();
  void set_has_other();

  inline bool has_details() const;
  void clear_details();
  inline void clear_has_details();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::internal::ArenaStringPtr space_;
  ::google::protobuf::int32 canonical_code_;
  ::google::protobuf::int32 code_;
  union DetailsUnion {
    DetailsUnion() {}
    ::p4::v1::PacketOutError* packet_out_;
    ::p4::v1::DigestListAckError* digest_list_ack_;
    ::p4::v1::StreamOtherError* other_;
  } details_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PacketOutError : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.PacketOutError) */ {
 public:
  PacketOutError();
  virtual ~PacketOutError();

  PacketOutError(const PacketOutError& from);

  inline PacketOutError& operator=(const PacketOutError& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PacketOutError& default_instance();

  static inline const PacketOutError* internal_default_instance() {
    return reinterpret_cast<const PacketOutError*>(
               &_PacketOutError_default_instance_);
  }

  void Swap(PacketOutError* other);

  // implements Message ----------------------------------------------

  inline PacketOutError* New() const PROTOBUF_FINAL { return New(NULL); }

  PacketOutError* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PacketOutError& from);
  void MergeFrom(const PacketOutError& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PacketOutError* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.v1.PacketOut packet_out = 1;
  bool has_packet_out() const;
  void clear_packet_out();
  static const int kPacketOutFieldNumber = 1;
  const ::p4::v1::PacketOut& packet_out() const;
  ::p4::v1::PacketOut* mutable_packet_out();
  ::p4::v1::PacketOut* release_packet_out();
  void set_allocated_packet_out(::p4::v1::PacketOut* packet_out);

  // @@protoc_insertion_point(class_scope:p4.v1.PacketOutError)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::v1::PacketOut* packet_out_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DigestListAckError : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.DigestListAckError) */ {
 public:
  DigestListAckError();
  virtual ~DigestListAckError();

  DigestListAckError(const DigestListAckError& from);

  inline DigestListAckError& operator=(const DigestListAckError& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DigestListAckError& default_instance();

  static inline const DigestListAckError* internal_default_instance() {
    return reinterpret_cast<const DigestListAckError*>(
               &_DigestListAckError_default_instance_);
  }

  void Swap(DigestListAckError* other);

  // implements Message ----------------------------------------------

  inline DigestListAckError* New() const PROTOBUF_FINAL { return New(NULL); }

  DigestListAckError* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DigestListAckError& from);
  void MergeFrom(const DigestListAckError& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DigestListAckError* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.v1.DigestListAck digest_list_ack = 1;
  bool has_digest_list_ack() const;
  void clear_digest_list_ack();
  static const int kDigestListAckFieldNumber = 1;
  const ::p4::v1::DigestListAck& digest_list_ack() const;
  ::p4::v1::DigestListAck* mutable_digest_list_ack();
  ::p4::v1::DigestListAck* release_digest_list_ack();
  void set_allocated_digest_list_ack(::p4::v1::DigestListAck* digest_list_ack);

  // @@protoc_insertion_point(class_scope:p4.v1.DigestListAckError)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::v1::DigestListAck* digest_list_ack_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StreamOtherError : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.StreamOtherError) */ {
 public:
  StreamOtherError();
  virtual ~StreamOtherError();

  StreamOtherError(const StreamOtherError& from);

  inline StreamOtherError& operator=(const StreamOtherError& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamOtherError& default_instance();

  static inline const StreamOtherError* internal_default_instance() {
    return reinterpret_cast<const StreamOtherError*>(
               &_StreamOtherError_default_instance_);
  }

  void Swap(StreamOtherError* other);

  // implements Message ----------------------------------------------

  inline StreamOtherError* New() const PROTOBUF_FINAL { return New(NULL); }

  StreamOtherError* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StreamOtherError& from);
  void MergeFrom(const StreamOtherError& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StreamOtherError* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.Any other = 1;
  bool has_other() const;
  void clear_other();
  static const int kOtherFieldNumber = 1;
  const ::google::protobuf::Any& other() const;
  ::google::protobuf::Any* mutable_other();
  ::google::protobuf::Any* release_other();
  void set_allocated_other(::google::protobuf::Any* other);

  // @@protoc_insertion_point(class_scope:p4.v1.StreamOtherError)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::Any* other_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Uint128 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.Uint128) */ {
 public:
  Uint128();
  virtual ~Uint128();

  Uint128(const Uint128& from);

  inline Uint128& operator=(const Uint128& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Uint128& default_instance();

  static inline const Uint128* internal_default_instance() {
    return reinterpret_cast<const Uint128*>(
               &_Uint128_default_instance_);
  }

  void Swap(Uint128* other);

  // implements Message ----------------------------------------------

  inline Uint128* New() const PROTOBUF_FINAL { return New(NULL); }

  Uint128* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Uint128& from);
  void MergeFrom(const Uint128& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Uint128* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 high = 1;
  void clear_high();
  static const int kHighFieldNumber = 1;
  ::google::protobuf::uint64 high() const;
  void set_high(::google::protobuf::uint64 value);

  // uint64 low = 2;
  void clear_low();
  static const int kLowFieldNumber = 2;
  ::google::protobuf::uint64 low() const;
  void set_low(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:p4.v1.Uint128)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 high_;
  ::google::protobuf::uint64 low_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetForwardingPipelineConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.SetForwardingPipelineConfigRequest) */ {
 public:
  SetForwardingPipelineConfigRequest();
  virtual ~SetForwardingPipelineConfigRequest();

  SetForwardingPipelineConfigRequest(const SetForwardingPipelineConfigRequest& from);

  inline SetForwardingPipelineConfigRequest& operator=(const SetForwardingPipelineConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetForwardingPipelineConfigRequest& default_instance();

  static inline const SetForwardingPipelineConfigRequest* internal_default_instance() {
    return reinterpret_cast<const SetForwardingPipelineConfigRequest*>(
               &_SetForwardingPipelineConfigRequest_default_instance_);
  }

  void Swap(SetForwardingPipelineConfigRequest* other);

  // implements Message ----------------------------------------------

  inline SetForwardingPipelineConfigRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetForwardingPipelineConfigRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetForwardingPipelineConfigRequest& from);
  void MergeFrom(const SetForwardingPipelineConfigRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetForwardingPipelineConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetForwardingPipelineConfigRequest_Action Action;
  static const Action UNSPECIFIED =
    SetForwardingPipelineConfigRequest_Action_UNSPECIFIED;
  static const Action VERIFY =
    SetForwardingPipelineConfigRequest_Action_VERIFY;
  static const Action VERIFY_AND_SAVE =
    SetForwardingPipelineConfigRequest_Action_VERIFY_AND_SAVE;
  static const Action VERIFY_AND_COMMIT =
    SetForwardingPipelineConfigRequest_Action_VERIFY_AND_COMMIT;
  static const Action COMMIT =
    SetForwardingPipelineConfigRequest_Action_COMMIT;
  static const Action RECONCILE_AND_COMMIT =
    SetForwardingPipelineConfigRequest_Action_RECONCILE_AND_COMMIT;
  static inline bool Action_IsValid(int value) {
    return SetForwardingPipelineConfigRequest_Action_IsValid(value);
  }
  static const Action Action_MIN =
    SetForwardingPipelineConfigRequest_Action_Action_MIN;
  static const Action Action_MAX =
    SetForwardingPipelineConfigRequest_Action_Action_MAX;
  static const int Action_ARRAYSIZE =
    SetForwardingPipelineConfigRequest_Action_Action_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Action_descriptor() {
    return SetForwardingPipelineConfigRequest_Action_descriptor();
  }
  static inline const ::std::string& Action_Name(Action value) {
    return SetForwardingPipelineConfigRequest_Action_Name(value);
  }
  static inline bool Action_Parse(const ::std::string& name,
      Action* value) {
    return SetForwardingPipelineConfigRequest_Action_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .p4.v1.Uint128 election_id = 3;
  bool has_election_id() const;
  void clear_election_id();
  static const int kElectionIdFieldNumber = 3;
  const ::p4::v1::Uint128& election_id() const;
  ::p4::v1::Uint128* mutable_election_id();
  ::p4::v1::Uint128* release_election_id();
  void set_allocated_election_id(::p4::v1::Uint128* election_id);

  // .p4.v1.ForwardingPipelineConfig config = 5;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 5;
  const ::p4::v1::ForwardingPipelineConfig& config() const;
  ::p4::v1::ForwardingPipelineConfig* mutable_config();
  ::p4::v1::ForwardingPipelineConfig* release_config();
  void set_allocated_config(::p4::v1::ForwardingPipelineConfig* config);

  // uint64 device_id = 1;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 1;
  ::google::protobuf::uint64 device_id() const;
  void set_device_id(::google::protobuf::uint64 value);

  // uint64 role_id = 2;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::uint64 role_id() const;
  void set_role_id(::google::protobuf::uint64 value);

  // .p4.v1.SetForwardingPipelineConfigRequest.Action action = 4;
  void clear_action();
  static const int kActionFieldNumber = 4;
  ::p4::v1::SetForwardingPipelineConfigRequest_Action action() const;
  void set_action(::p4::v1::SetForwardingPipelineConfigRequest_Action value);

  // @@protoc_insertion_point(class_scope:p4.v1.SetForwardingPipelineConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::v1::Uint128* election_id_;
  ::p4::v1::ForwardingPipelineConfig* config_;
  ::google::protobuf::uint64 device_id_;
  ::google::protobuf::uint64 role_id_;
  int action_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetForwardingPipelineConfigResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.SetForwardingPipelineConfigResponse) */ {
 public:
  SetForwardingPipelineConfigResponse();
  virtual ~SetForwardingPipelineConfigResponse();

  SetForwardingPipelineConfigResponse(const SetForwardingPipelineConfigResponse& from);

  inline SetForwardingPipelineConfigResponse& operator=(const SetForwardingPipelineConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetForwardingPipelineConfigResponse& default_instance();

  static inline const SetForwardingPipelineConfigResponse* internal_default_instance() {
    return reinterpret_cast<const SetForwardingPipelineConfigResponse*>(
               &_SetForwardingPipelineConfigResponse_default_instance_);
  }

  void Swap(SetForwardingPipelineConfigResponse* other);

  // implements Message ----------------------------------------------

  inline SetForwardingPipelineConfigResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SetForwardingPipelineConfigResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetForwardingPipelineConfigResponse& from);
  void MergeFrom(const SetForwardingPipelineConfigResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetForwardingPipelineConfigResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:p4.v1.SetForwardingPipelineConfigResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForwardingPipelineConfig_Cookie : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.ForwardingPipelineConfig.Cookie) */ {
 public:
  ForwardingPipelineConfig_Cookie();
  virtual ~ForwardingPipelineConfig_Cookie();

  ForwardingPipelineConfig_Cookie(const ForwardingPipelineConfig_Cookie& from);

  inline ForwardingPipelineConfig_Cookie& operator=(const ForwardingPipelineConfig_Cookie& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardingPipelineConfig_Cookie& default_instance();

  static inline const ForwardingPipelineConfig_Cookie* internal_default_instance() {
    return reinterpret_cast<const ForwardingPipelineConfig_Cookie*>(
               &_ForwardingPipelineConfig_Cookie_default_instance_);
  }

  void Swap(ForwardingPipelineConfig_Cookie* other);

  // implements Message ----------------------------------------------

  inline ForwardingPipelineConfig_Cookie* New() const PROTOBUF_FINAL { return New(NULL); }

  ForwardingPipelineConfig_Cookie* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ForwardingPipelineConfig_Cookie& from);
  void MergeFrom(const ForwardingPipelineConfig_Cookie& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ForwardingPipelineConfig_Cookie* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 cookie = 1;
  void clear_cookie();
  static const int kCookieFieldNumber = 1;
  ::google::protobuf::uint64 cookie() const;
  void set_cookie(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:p4.v1.ForwardingPipelineConfig.Cookie)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 cookie_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForwardingPipelineConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.ForwardingPipelineConfig) */ {
 public:
  ForwardingPipelineConfig();
  virtual ~ForwardingPipelineConfig();

  ForwardingPipelineConfig(const ForwardingPipelineConfig& from);

  inline ForwardingPipelineConfig& operator=(const ForwardingPipelineConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardingPipelineConfig& default_instance();

  static inline const ForwardingPipelineConfig* internal_default_instance() {
    return reinterpret_cast<const ForwardingPipelineConfig*>(
               &_ForwardingPipelineConfig_default_instance_);
  }

  void Swap(ForwardingPipelineConfig* other);

  // implements Message ----------------------------------------------

  inline ForwardingPipelineConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  ForwardingPipelineConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ForwardingPipelineConfig& from);
  void MergeFrom(const ForwardingPipelineConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ForwardingPipelineConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ForwardingPipelineConfig_Cookie Cookie;

  // accessors -------------------------------------------------------

  // bytes p4_device_config = 2;
  void clear_p4_device_config();
  static const int kP4DeviceConfigFieldNumber = 2;
  const ::std::string& p4_device_config() const;
  void set_p4_device_config(const ::std::string& value);
  #if LANG_CXX11
  void set_p4_device_config(::std::string&& value);
  #endif
  void set_p4_device_config(const char* value);
  void set_p4_device_config(const void* value, size_t size);
  ::std::string* mutable_p4_device_config();
  ::std::string* release_p4_device_config();
  void set_allocated_p4_device_config(::std::string* p4_device_config);

  // .p4.config.v1.P4Info p4info = 1;
  bool has_p4info() const;
  void clear_p4info();
  static const int kP4InfoFieldNumber = 1;
  const ::p4::config::v1::P4Info& p4info() const;
  ::p4::config::v1::P4Info* mutable_p4info();
  ::p4::config::v1::P4Info* release_p4info();
  void set_allocated_p4info(::p4::config::v1::P4Info* p4info);

  // .p4.v1.ForwardingPipelineConfig.Cookie cookie = 3;
  bool has_cookie() const;
  void clear_cookie();
  static const int kCookieFieldNumber = 3;
  const ::p4::v1::ForwardingPipelineConfig_Cookie& cookie() const;
  ::p4::v1::ForwardingPipelineConfig_Cookie* mutable_cookie();
  ::p4::v1::ForwardingPipelineConfig_Cookie* release_cookie();
  void set_allocated_cookie(::p4::v1::ForwardingPipelineConfig_Cookie* cookie);

  // @@protoc_insertion_point(class_scope:p4.v1.ForwardingPipelineConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr p4_device_config_;
  ::p4::config::v1::P4Info* p4info_;
  ::p4::v1::ForwardingPipelineConfig_Cookie* cookie_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetForwardingPipelineConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.GetForwardingPipelineConfigRequest) */ {
 public:
  GetForwardingPipelineConfigRequest();
  virtual ~GetForwardingPipelineConfigRequest();

  GetForwardingPipelineConfigRequest(const GetForwardingPipelineConfigRequest& from);

  inline GetForwardingPipelineConfigRequest& operator=(const GetForwardingPipelineConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetForwardingPipelineConfigRequest& default_instance();

  static inline const GetForwardingPipelineConfigRequest* internal_default_instance() {
    return reinterpret_cast<const GetForwardingPipelineConfigRequest*>(
               &_GetForwardingPipelineConfigRequest_default_instance_);
  }

  void Swap(GetForwardingPipelineConfigRequest* other);

  // implements Message ----------------------------------------------

  inline GetForwardingPipelineConfigRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetForwardingPipelineConfigRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetForwardingPipelineConfigRequest& from);
  void MergeFrom(const GetForwardingPipelineConfigRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetForwardingPipelineConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetForwardingPipelineConfigRequest_ResponseType ResponseType;
  static const ResponseType ALL =
    GetForwardingPipelineConfigRequest_ResponseType_ALL;
  static const ResponseType COOKIE_ONLY =
    GetForwardingPipelineConfigRequest_ResponseType_COOKIE_ONLY;
  static const ResponseType P4INFO_AND_COOKIE =
    GetForwardingPipelineConfigRequest_ResponseType_P4INFO_AND_COOKIE;
  static const ResponseType DEVICE_CONFIG_AND_COOKIE =
    GetForwardingPipelineConfigRequest_ResponseType_DEVICE_CONFIG_AND_COOKIE;
  static inline bool ResponseType_IsValid(int value) {
    return GetForwardingPipelineConfigRequest_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    GetForwardingPipelineConfigRequest_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    GetForwardingPipelineConfigRequest_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    GetForwardingPipelineConfigRequest_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return GetForwardingPipelineConfigRequest_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return GetForwardingPipelineConfigRequest_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return GetForwardingPipelineConfigRequest_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 device_id = 1;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 1;
  ::google::protobuf::uint64 device_id() const;
  void set_device_id(::google::protobuf::uint64 value);

  // .p4.v1.GetForwardingPipelineConfigRequest.ResponseType response_type = 2;
  void clear_response_type();
  static const int kResponseTypeFieldNumber = 2;
  ::p4::v1::GetForwardingPipelineConfigRequest_ResponseType response_type() const;
  void set_response_type(::p4::v1::GetForwardingPipelineConfigRequest_ResponseType value);

  // @@protoc_insertion_point(class_scope:p4.v1.GetForwardingPipelineConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 device_id_;
  int response_type_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetForwardingPipelineConfigResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.GetForwardingPipelineConfigResponse) */ {
 public:
  GetForwardingPipelineConfigResponse();
  virtual ~GetForwardingPipelineConfigResponse();

  GetForwardingPipelineConfigResponse(const GetForwardingPipelineConfigResponse& from);

  inline GetForwardingPipelineConfigResponse& operator=(const GetForwardingPipelineConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetForwardingPipelineConfigResponse& default_instance();

  static inline const GetForwardingPipelineConfigResponse* internal_default_instance() {
    return reinterpret_cast<const GetForwardingPipelineConfigResponse*>(
               &_GetForwardingPipelineConfigResponse_default_instance_);
  }

  void Swap(GetForwardingPipelineConfigResponse* other);

  // implements Message ----------------------------------------------

  inline GetForwardingPipelineConfigResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetForwardingPipelineConfigResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetForwardingPipelineConfigResponse& from);
  void MergeFrom(const GetForwardingPipelineConfigResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetForwardingPipelineConfigResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.v1.ForwardingPipelineConfig config = 1;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 1;
  const ::p4::v1::ForwardingPipelineConfig& config() const;
  ::p4::v1::ForwardingPipelineConfig* mutable_config();
  ::p4::v1::ForwardingPipelineConfig* release_config();
  void set_allocated_config(::p4::v1::ForwardingPipelineConfig* config);

  // @@protoc_insertion_point(class_scope:p4.v1.GetForwardingPipelineConfigResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::v1::ForwardingPipelineConfig* config_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Error : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.Error) */ {
 public:
  Error();
  virtual ~Error();

  Error(const Error& from);

  inline Error& operator=(const Error& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Error& default_instance();

  static inline const Error* internal_default_instance() {
    return reinterpret_cast<const Error*>(
               &_Error_default_instance_);
  }

  void Swap(Error* other);

  // implements Message ----------------------------------------------

  inline Error* New() const PROTOBUF_FINAL { return New(NULL); }

  Error* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Error& from);
  void MergeFrom(const Error& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Error* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // string space = 3;
  void clear_space();
  static const int kSpaceFieldNumber = 3;
  const ::std::string& space() const;
  void set_space(const ::std::string& value);
  #if LANG_CXX11
  void set_space(::std::string&& value);
  #endif
  void set_space(const char* value);
  void set_space(const char* value, size_t size);
  ::std::string* mutable_space();
  ::std::string* release_space();
  void set_allocated_space(::std::string* space);

  // .google.protobuf.Any details = 5;
  bool has_details() const;
  void clear_details();
  static const int kDetailsFieldNumber = 5;
  const ::google::protobuf::Any& details() const;
  ::google::protobuf::Any* mutable_details();
  ::google::protobuf::Any* release_details();
  void set_allocated_details(::google::protobuf::Any* details);

  // int32 canonical_code = 1;
  void clear_canonical_code();
  static const int kCanonicalCodeFieldNumber = 1;
  ::google::protobuf::int32 canonical_code() const;
  void set_canonical_code(::google::protobuf::int32 value);

  // int32 code = 4;
  void clear_code();
  static const int kCodeFieldNumber = 4;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:p4.v1.Error)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::internal::ArenaStringPtr space_;
  ::google::protobuf::Any* details_;
  ::google::protobuf::int32 canonical_code_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CapabilitiesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.CapabilitiesRequest) */ {
 public:
  CapabilitiesRequest();
  virtual ~CapabilitiesRequest();

  CapabilitiesRequest(const CapabilitiesRequest& from);

  inline CapabilitiesRequest& operator=(const CapabilitiesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CapabilitiesRequest& default_instance();

  static inline const CapabilitiesRequest* internal_default_instance() {
    return reinterpret_cast<const CapabilitiesRequest*>(
               &_CapabilitiesRequest_default_instance_);
  }

  void Swap(CapabilitiesRequest* other);

  // implements Message ----------------------------------------------

  inline CapabilitiesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CapabilitiesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CapabilitiesRequest& from);
  void MergeFrom(const CapabilitiesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CapabilitiesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:p4.v1.CapabilitiesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CapabilitiesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.v1.CapabilitiesResponse) */ {
 public:
  CapabilitiesResponse();
  virtual ~CapabilitiesResponse();

  CapabilitiesResponse(const CapabilitiesResponse& from);

  inline CapabilitiesResponse& operator=(const CapabilitiesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CapabilitiesResponse& default_instance();

  static inline const CapabilitiesResponse* internal_default_instance() {
    return reinterpret_cast<const CapabilitiesResponse*>(
               &_CapabilitiesResponse_default_instance_);
  }

  void Swap(CapabilitiesResponse* other);

  // implements Message ----------------------------------------------

  inline CapabilitiesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CapabilitiesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CapabilitiesResponse& from);
  void MergeFrom(const CapabilitiesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CapabilitiesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string p4runtime_api_version = 1;
  void clear_p4runtime_api_version();
  static const int kP4RuntimeApiVersionFieldNumber = 1;
  const ::std::string& p4runtime_api_version() const;
  void set_p4runtime_api_version(const ::std::string& value);
  #if LANG_CXX11
  void set_p4runtime_api_version(::std::string&& value);
  #endif
  void set_p4runtime_api_version(const char* value);
  void set_p4runtime_api_version(const char* value, size_t size);
  ::std::string* mutable_p4runtime_api_version();
  ::std::string* release_p4runtime_api_version();
  void set_allocated_p4runtime_api_version(::std::string* p4runtime_api_version);

  // @@protoc_insertion_point(class_scope:p4.v1.CapabilitiesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr p4runtime_api_version_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fv1_2fp4runtime_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// WriteRequest

// uint64 device_id = 1;
inline void WriteRequest::clear_device_id() {
  device_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 WriteRequest::device_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.WriteRequest.device_id)
  return device_id_;
}
inline void WriteRequest::set_device_id(::google::protobuf::uint64 value) {
  
  device_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.WriteRequest.device_id)
}

// uint64 role_id = 2;
inline void WriteRequest::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 WriteRequest::role_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.WriteRequest.role_id)
  return role_id_;
}
inline void WriteRequest::set_role_id(::google::protobuf::uint64 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.WriteRequest.role_id)
}

// .p4.v1.Uint128 election_id = 3;
inline bool WriteRequest::has_election_id() const {
  return this != internal_default_instance() && election_id_ != NULL;
}
inline void WriteRequest::clear_election_id() {
  if (GetArenaNoVirtual() == NULL && election_id_ != NULL) delete election_id_;
  election_id_ = NULL;
}
inline const ::p4::v1::Uint128& WriteRequest::election_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.WriteRequest.election_id)
  return election_id_ != NULL ? *election_id_
                         : *::p4::v1::Uint128::internal_default_instance();
}
inline ::p4::v1::Uint128* WriteRequest::mutable_election_id() {
  
  if (election_id_ == NULL) {
    election_id_ = new ::p4::v1::Uint128;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.WriteRequest.election_id)
  return election_id_;
}
inline ::p4::v1::Uint128* WriteRequest::release_election_id() {
  // @@protoc_insertion_point(field_release:p4.v1.WriteRequest.election_id)
  
  ::p4::v1::Uint128* temp = election_id_;
  election_id_ = NULL;
  return temp;
}
inline void WriteRequest::set_allocated_election_id(::p4::v1::Uint128* election_id) {
  delete election_id_;
  election_id_ = election_id;
  if (election_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.WriteRequest.election_id)
}

// repeated .p4.v1.Update updates = 4;
inline int WriteRequest::updates_size() const {
  return updates_.size();
}
inline void WriteRequest::clear_updates() {
  updates_.Clear();
}
inline const ::p4::v1::Update& WriteRequest::updates(int index) const {
  // @@protoc_insertion_point(field_get:p4.v1.WriteRequest.updates)
  return updates_.Get(index);
}
inline ::p4::v1::Update* WriteRequest::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:p4.v1.WriteRequest.updates)
  return updates_.Mutable(index);
}
inline ::p4::v1::Update* WriteRequest::add_updates() {
  // @@protoc_insertion_point(field_add:p4.v1.WriteRequest.updates)
  return updates_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::v1::Update >*
WriteRequest::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:p4.v1.WriteRequest.updates)
  return &updates_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::v1::Update >&
WriteRequest::updates() const {
  // @@protoc_insertion_point(field_list:p4.v1.WriteRequest.updates)
  return updates_;
}

// .p4.v1.WriteRequest.Atomicity atomicity = 5;
inline void WriteRequest::clear_atomicity() {
  atomicity_ = 0;
}
inline ::p4::v1::WriteRequest_Atomicity WriteRequest::atomicity() const {
  // @@protoc_insertion_point(field_get:p4.v1.WriteRequest.atomicity)
  return static_cast< ::p4::v1::WriteRequest_Atomicity >(atomicity_);
}
inline void WriteRequest::set_atomicity(::p4::v1::WriteRequest_Atomicity value) {
  
  atomicity_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.WriteRequest.atomicity)
}

// -------------------------------------------------------------------

// WriteResponse

// -------------------------------------------------------------------

// ReadRequest

// uint64 device_id = 1;
inline void ReadRequest::clear_device_id() {
  device_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReadRequest::device_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.ReadRequest.device_id)
  return device_id_;
}
inline void ReadRequest::set_device_id(::google::protobuf::uint64 value) {
  
  device_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.ReadRequest.device_id)
}

// repeated .p4.v1.Entity entities = 2;
inline int ReadRequest::entities_size() const {
  return entities_.size();
}
inline void ReadRequest::clear_entities() {
  entities_.Clear();
}
inline const ::p4::v1::Entity& ReadRequest::entities(int index) const {
  // @@protoc_insertion_point(field_get:p4.v1.ReadRequest.entities)
  return entities_.Get(index);
}
inline ::p4::v1::Entity* ReadRequest::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:p4.v1.ReadRequest.entities)
  return entities_.Mutable(index);
}
inline ::p4::v1::Entity* ReadRequest::add_entities() {
  // @@protoc_insertion_point(field_add:p4.v1.ReadRequest.entities)
  return entities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::v1::Entity >*
ReadRequest::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:p4.v1.ReadRequest.entities)
  return &entities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::v1::Entity >&
ReadRequest::entities() const {
  // @@protoc_insertion_point(field_list:p4.v1.ReadRequest.entities)
  return entities_;
}

// -------------------------------------------------------------------

// ReadResponse

// repeated .p4.v1.Entity entities = 1;
inline int ReadResponse::entities_size() const {
  return entities_.size();
}
inline void ReadResponse::clear_entities() {
  entities_.Clear();
}
inline const ::p4::v1::Entity& ReadResponse::entities(int index) const {
  // @@protoc_insertion_point(field_get:p4.v1.ReadResponse.entities)
  return entities_.Get(index);
}
inline ::p4::v1::Entity* ReadResponse::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:p4.v1.ReadResponse.entities)
  return entities_.Mutable(index);
}
inline ::p4::v1::Entity* ReadResponse::add_entities() {
  // @@protoc_insertion_point(field_add:p4.v1.ReadResponse.entities)
  return entities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::v1::Entity >*
ReadResponse::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:p4.v1.ReadResponse.entities)
  return &entities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::v1::Entity >&
ReadResponse::entities() const {
  // @@protoc_insertion_point(field_list:p4.v1.ReadResponse.entities)
  return entities_;
}

// -------------------------------------------------------------------

// Update

// .p4.v1.Update.Type type = 1;
inline void Update::clear_type() {
  type_ = 0;
}
inline ::p4::v1::Update_Type Update::type() const {
  // @@protoc_insertion_point(field_get:p4.v1.Update.type)
  return static_cast< ::p4::v1::Update_Type >(type_);
}
inline void Update::set_type(::p4::v1::Update_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.Update.type)
}

// .p4.v1.Entity entity = 2;
inline bool Update::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
inline void Update::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
inline const ::p4::v1::Entity& Update::entity() const {
  // @@protoc_insertion_point(field_get:p4.v1.Update.entity)
  return entity_ != NULL ? *entity_
                         : *::p4::v1::Entity::internal_default_instance();
}
inline ::p4::v1::Entity* Update::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::p4::v1::Entity;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.Update.entity)
  return entity_;
}
inline ::p4::v1::Entity* Update::release_entity() {
  // @@protoc_insertion_point(field_release:p4.v1.Update.entity)
  
  ::p4::v1::Entity* temp = entity_;
  entity_ = NULL;
  return temp;
}
inline void Update::set_allocated_entity(::p4::v1::Entity* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Update.entity)
}

// -------------------------------------------------------------------

// Entity

// .p4.v1.ExternEntry extern_entry = 1;
inline bool Entity::has_extern_entry() const {
  return entity_case() == kExternEntry;
}
inline void Entity::set_has_extern_entry() {
  _oneof_case_[0] = kExternEntry;
}
inline void Entity::clear_extern_entry() {
  if (has_extern_entry()) {
    delete entity_.extern_entry_;
    clear_has_entity();
  }
}
inline  const ::p4::v1::ExternEntry& Entity::extern_entry() const {
  // @@protoc_insertion_point(field_get:p4.v1.Entity.extern_entry)
  return has_extern_entry()
      ? *entity_.extern_entry_
      : ::p4::v1::ExternEntry::default_instance();
}
inline ::p4::v1::ExternEntry* Entity::mutable_extern_entry() {
  if (!has_extern_entry()) {
    clear_entity();
    set_has_extern_entry();
    entity_.extern_entry_ = new ::p4::v1::ExternEntry;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.Entity.extern_entry)
  return entity_.extern_entry_;
}
inline ::p4::v1::ExternEntry* Entity::release_extern_entry() {
  // @@protoc_insertion_point(field_release:p4.v1.Entity.extern_entry)
  if (has_extern_entry()) {
    clear_has_entity();
    ::p4::v1::ExternEntry* temp = entity_.extern_entry_;
    entity_.extern_entry_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Entity::set_allocated_extern_entry(::p4::v1::ExternEntry* extern_entry) {
  clear_entity();
  if (extern_entry) {
    set_has_extern_entry();
    entity_.extern_entry_ = extern_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.extern_entry)
}

// .p4.v1.TableEntry table_entry = 2;
inline bool Entity::has_table_entry() const {
  return entity_case() == kTableEntry;
}
inline void Entity::set_has_table_entry() {
  _oneof_case_[0] = kTableEntry;
}
inline void Entity::clear_table_entry() {
  if (has_table_entry()) {
    delete entity_.table_entry_;
    clear_has_entity();
  }
}
inline  const ::p4::v1::TableEntry& Entity::table_entry() const {
  // @@protoc_insertion_point(field_get:p4.v1.Entity.table_entry)
  return has_table_entry()
      ? *entity_.table_entry_
      : ::p4::v1::TableEntry::default_instance();
}
inline ::p4::v1::TableEntry* Entity::mutable_table_entry() {
  if (!has_table_entry()) {
    clear_entity();
    set_has_table_entry();
    entity_.table_entry_ = new ::p4::v1::TableEntry;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.Entity.table_entry)
  return entity_.table_entry_;
}
inline ::p4::v1::TableEntry* Entity::release_table_entry() {
  // @@protoc_insertion_point(field_release:p4.v1.Entity.table_entry)
  if (has_table_entry()) {
    clear_has_entity();
    ::p4::v1::TableEntry* temp = entity_.table_entry_;
    entity_.table_entry_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Entity::set_allocated_table_entry(::p4::v1::TableEntry* table_entry) {
  clear_entity();
  if (table_entry) {
    set_has_table_entry();
    entity_.table_entry_ = table_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.table_entry)
}

// .p4.v1.ActionProfileMember action_profile_member = 3;
inline bool Entity::has_action_profile_member() const {
  return entity_case() == kActionProfileMember;
}
inline void Entity::set_has_action_profile_member() {
  _oneof_case_[0] = kActionProfileMember;
}
inline void Entity::clear_action_profile_member() {
  if (has_action_profile_member()) {
    delete entity_.action_profile_member_;
    clear_has_entity();
  }
}
inline  const ::p4::v1::ActionProfileMember& Entity::action_profile_member() const {
  // @@protoc_insertion_point(field_get:p4.v1.Entity.action_profile_member)
  return has_action_profile_member()
      ? *entity_.action_profile_member_
      : ::p4::v1::ActionProfileMember::default_instance();
}
inline ::p4::v1::ActionProfileMember* Entity::mutable_action_profile_member() {
  if (!has_action_profile_member()) {
    clear_entity();
    set_has_action_profile_member();
    entity_.action_profile_member_ = new ::p4::v1::ActionProfileMember;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.Entity.action_profile_member)
  return entity_.action_profile_member_;
}
inline ::p4::v1::ActionProfileMember* Entity::release_action_profile_member() {
  // @@protoc_insertion_point(field_release:p4.v1.Entity.action_profile_member)
  if (has_action_profile_member()) {
    clear_has_entity();
    ::p4::v1::ActionProfileMember* temp = entity_.action_profile_member_;
    entity_.action_profile_member_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Entity::set_allocated_action_profile_member(::p4::v1::ActionProfileMember* action_profile_member) {
  clear_entity();
  if (action_profile_member) {
    set_has_action_profile_member();
    entity_.action_profile_member_ = action_profile_member;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.action_profile_member)
}

// .p4.v1.ActionProfileGroup action_profile_group = 4;
inline bool Entity::has_action_profile_group() const {
  return entity_case() == kActionProfileGroup;
}
inline void Entity::set_has_action_profile_group() {
  _oneof_case_[0] = kActionProfileGroup;
}
inline void Entity::clear_action_profile_group() {
  if (has_action_profile_group()) {
    delete entity_.action_profile_group_;
    clear_has_entity();
  }
}
inline  const ::p4::v1::ActionProfileGroup& Entity::action_profile_group() const {
  // @@protoc_insertion_point(field_get:p4.v1.Entity.action_profile_group)
  return has_action_profile_group()
      ? *entity_.action_profile_group_
      : ::p4::v1::ActionProfileGroup::default_instance();
}
inline ::p4::v1::ActionProfileGroup* Entity::mutable_action_profile_group() {
  if (!has_action_profile_group()) {
    clear_entity();
    set_has_action_profile_group();
    entity_.action_profile_group_ = new ::p4::v1::ActionProfileGroup;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.Entity.action_profile_group)
  return entity_.action_profile_group_;
}
inline ::p4::v1::ActionProfileGroup* Entity::release_action_profile_group() {
  // @@protoc_insertion_point(field_release:p4.v1.Entity.action_profile_group)
  if (has_action_profile_group()) {
    clear_has_entity();
    ::p4::v1::ActionProfileGroup* temp = entity_.action_profile_group_;
    entity_.action_profile_group_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Entity::set_allocated_action_profile_group(::p4::v1::ActionProfileGroup* action_profile_group) {
  clear_entity();
  if (action_profile_group) {
    set_has_action_profile_group();
    entity_.action_profile_group_ = action_profile_group;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.action_profile_group)
}

// .p4.v1.MeterEntry meter_entry = 5;
inline bool Entity::has_meter_entry() const {
  return entity_case() == kMeterEntry;
}
inline void Entity::set_has_meter_entry() {
  _oneof_case_[0] = kMeterEntry;
}
inline void Entity::clear_meter_entry() {
  if (has_meter_entry()) {
    delete entity_.meter_entry_;
    clear_has_entity();
  }
}
inline  const ::p4::v1::MeterEntry& Entity::meter_entry() const {
  // @@protoc_insertion_point(field_get:p4.v1.Entity.meter_entry)
  return has_meter_entry()
      ? *entity_.meter_entry_
      : ::p4::v1::MeterEntry::default_instance();
}
inline ::p4::v1::MeterEntry* Entity::mutable_meter_entry() {
  if (!has_meter_entry()) {
    clear_entity();
    set_has_meter_entry();
    entity_.meter_entry_ = new ::p4::v1::MeterEntry;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.Entity.meter_entry)
  return entity_.meter_entry_;
}
inline ::p4::v1::MeterEntry* Entity::release_meter_entry() {
  // @@protoc_insertion_point(field_release:p4.v1.Entity.meter_entry)
  if (has_meter_entry()) {
    clear_has_entity();
    ::p4::v1::MeterEntry* temp = entity_.meter_entry_;
    entity_.meter_entry_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Entity::set_allocated_meter_entry(::p4::v1::MeterEntry* meter_entry) {
  clear_entity();
  if (meter_entry) {
    set_has_meter_entry();
    entity_.meter_entry_ = meter_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.meter_entry)
}

// .p4.v1.DirectMeterEntry direct_meter_entry = 6;
inline bool Entity::has_direct_meter_entry() const {
  return entity_case() == kDirectMeterEntry;
}
inline void Entity::set_has_direct_meter_entry() {
  _oneof_case_[0] = kDirectMeterEntry;
}
inline void Entity::clear_direct_meter_entry() {
  if (has_direct_meter_entry()) {
    delete entity_.direct_meter_entry_;
    clear_has_entity();
  }
}
inline  const ::p4::v1::DirectMeterEntry& Entity::direct_meter_entry() const {
  // @@protoc_insertion_point(field_get:p4.v1.Entity.direct_meter_entry)
  return has_direct_meter_entry()
      ? *entity_.direct_meter_entry_
      : ::p4::v1::DirectMeterEntry::default_instance();
}
inline ::p4::v1::DirectMeterEntry* Entity::mutable_direct_meter_entry() {
  if (!has_direct_meter_entry()) {
    clear_entity();
    set_has_direct_meter_entry();
    entity_.direct_meter_entry_ = new ::p4::v1::DirectMeterEntry;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.Entity.direct_meter_entry)
  return entity_.direct_meter_entry_;
}
inline ::p4::v1::DirectMeterEntry* Entity::release_direct_meter_entry() {
  // @@protoc_insertion_point(field_release:p4.v1.Entity.direct_meter_entry)
  if (has_direct_meter_entry()) {
    clear_has_entity();
    ::p4::v1::DirectMeterEntry* temp = entity_.direct_meter_entry_;
    entity_.direct_meter_entry_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Entity::set_allocated_direct_meter_entry(::p4::v1::DirectMeterEntry* direct_meter_entry) {
  clear_entity();
  if (direct_meter_entry) {
    set_has_direct_meter_entry();
    entity_.direct_meter_entry_ = direct_meter_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.direct_meter_entry)
}

// .p4.v1.CounterEntry counter_entry = 7;
inline bool Entity::has_counter_entry() const {
  return entity_case() == kCounterEntry;
}
inline void Entity::set_has_counter_entry() {
  _oneof_case_[0] = kCounterEntry;
}
inline void Entity::clear_counter_entry() {
  if (has_counter_entry()) {
    delete entity_.counter_entry_;
    clear_has_entity();
  }
}
inline  const ::p4::v1::CounterEntry& Entity::counter_entry() const {
  // @@protoc_insertion_point(field_get:p4.v1.Entity.counter_entry)
  return has_counter_entry()
      ? *entity_.counter_entry_
      : ::p4::v1::CounterEntry::default_instance();
}
inline ::p4::v1::CounterEntry* Entity::mutable_counter_entry() {
  if (!has_counter_entry()) {
    clear_entity();
    set_has_counter_entry();
    entity_.counter_entry_ = new ::p4::v1::CounterEntry;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.Entity.counter_entry)
  return entity_.counter_entry_;
}
inline ::p4::v1::CounterEntry* Entity::release_counter_entry() {
  // @@protoc_insertion_point(field_release:p4.v1.Entity.counter_entry)
  if (has_counter_entry()) {
    clear_has_entity();
    ::p4::v1::CounterEntry* temp = entity_.counter_entry_;
    entity_.counter_entry_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Entity::set_allocated_counter_entry(::p4::v1::CounterEntry* counter_entry) {
  clear_entity();
  if (counter_entry) {
    set_has_counter_entry();
    entity_.counter_entry_ = counter_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.counter_entry)
}

// .p4.v1.DirectCounterEntry direct_counter_entry = 8;
inline bool Entity::has_direct_counter_entry() const {
  return entity_case() == kDirectCounterEntry;
}
inline void Entity::set_has_direct_counter_entry() {
  _oneof_case_[0] = kDirectCounterEntry;
}
inline void Entity::clear_direct_counter_entry() {
  if (has_direct_counter_entry()) {
    delete entity_.direct_counter_entry_;
    clear_has_entity();
  }
}
inline  const ::p4::v1::DirectCounterEntry& Entity::direct_counter_entry() const {
  // @@protoc_insertion_point(field_get:p4.v1.Entity.direct_counter_entry)
  return has_direct_counter_entry()
      ? *entity_.direct_counter_entry_
      : ::p4::v1::DirectCounterEntry::default_instance();
}
inline ::p4::v1::DirectCounterEntry* Entity::mutable_direct_counter_entry() {
  if (!has_direct_counter_entry()) {
    clear_entity();
    set_has_direct_counter_entry();
    entity_.direct_counter_entry_ = new ::p4::v1::DirectCounterEntry;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.Entity.direct_counter_entry)
  return entity_.direct_counter_entry_;
}
inline ::p4::v1::DirectCounterEntry* Entity::release_direct_counter_entry() {
  // @@protoc_insertion_point(field_release:p4.v1.Entity.direct_counter_entry)
  if (has_direct_counter_entry()) {
    clear_has_entity();
    ::p4::v1::DirectCounterEntry* temp = entity_.direct_counter_entry_;
    entity_.direct_counter_entry_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Entity::set_allocated_direct_counter_entry(::p4::v1::DirectCounterEntry* direct_counter_entry) {
  clear_entity();
  if (direct_counter_entry) {
    set_has_direct_counter_entry();
    entity_.direct_counter_entry_ = direct_counter_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.direct_counter_entry)
}

// .p4.v1.PacketReplicationEngineEntry packet_replication_engine_entry = 9;
inline bool Entity::has_packet_replication_engine_entry() const {
  return entity_case() == kPacketReplicationEngineEntry;
}
inline void Entity::set_has_packet_replication_engine_entry() {
  _oneof_case_[0] = kPacketReplicationEngineEntry;
}
inline void Entity::clear_packet_replication_engine_entry() {
  if (has_packet_replication_engine_entry()) {
    delete entity_.packet_replication_engine_entry_;
    clear_has_entity();
  }
}
inline  const ::p4::v1::PacketReplicationEngineEntry& Entity::packet_replication_engine_entry() const {
  // @@protoc_insertion_point(field_get:p4.v1.Entity.packet_replication_engine_entry)
  return has_packet_replication_engine_entry()
      ? *entity_.packet_replication_engine_entry_
      : ::p4::v1::PacketReplicationEngineEntry::default_instance();
}
inline ::p4::v1::PacketReplicationEngineEntry* Entity::mutable_packet_replication_engine_entry() {
  if (!has_packet_replication_engine_entry()) {
    clear_entity();
    set_has_packet_replication_engine_entry();
    entity_.packet_replication_engine_entry_ = new ::p4::v1::PacketReplicationEngineEntry;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.Entity.packet_replication_engine_entry)
  return entity_.packet_replication_engine_entry_;
}
inline ::p4::v1::PacketReplicationEngineEntry* Entity::release_packet_replication_engine_entry() {
  // @@protoc_insertion_point(field_release:p4.v1.Entity.packet_replication_engine_entry)
  if (has_packet_replication_engine_entry()) {
    clear_has_entity();
    ::p4::v1::PacketReplicationEngineEntry* temp = entity_.packet_replication_engine_entry_;
    entity_.packet_replication_engine_entry_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Entity::set_allocated_packet_replication_engine_entry(::p4::v1::PacketReplicationEngineEntry* packet_replication_engine_entry) {
  clear_entity();
  if (packet_replication_engine_entry) {
    set_has_packet_replication_engine_entry();
    entity_.packet_replication_engine_entry_ = packet_replication_engine_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.packet_replication_engine_entry)
}

// .p4.v1.ValueSetEntry value_set_entry = 10;
inline bool Entity::has_value_set_entry() const {
  return entity_case() == kValueSetEntry;
}
inline void Entity::set_has_value_set_entry() {
  _oneof_case_[0] = kValueSetEntry;
}
inline void Entity::clear_value_set_entry() {
  if (has_value_set_entry()) {
    delete entity_.value_set_entry_;
    clear_has_entity();
  }
}
inline  const ::p4::v1::ValueSetEntry& Entity::value_set_entry() const {
  // @@protoc_insertion_point(field_get:p4.v1.Entity.value_set_entry)
  return has_value_set_entry()
      ? *entity_.value_set_entry_
      : ::p4::v1::ValueSetEntry::default_instance();
}
inline ::p4::v1::ValueSetEntry* Entity::mutable_value_set_entry() {
  if (!has_value_set_entry()) {
    clear_entity();
    set_has_value_set_entry();
    entity_.value_set_entry_ = new ::p4::v1::ValueSetEntry;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.Entity.value_set_entry)
  return entity_.value_set_entry_;
}
inline ::p4::v1::ValueSetEntry* Entity::release_value_set_entry() {
  // @@protoc_insertion_point(field_release:p4.v1.Entity.value_set_entry)
  if (has_value_set_entry()) {
    clear_has_entity();
    ::p4::v1::ValueSetEntry* temp = entity_.value_set_entry_;
    entity_.value_set_entry_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Entity::set_allocated_value_set_entry(::p4::v1::ValueSetEntry* value_set_entry) {
  clear_entity();
  if (value_set_entry) {
    set_has_value_set_entry();
    entity_.value_set_entry_ = value_set_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.value_set_entry)
}

// .p4.v1.RegisterEntry register_entry = 11;
inline bool Entity::has_register_entry() const {
  return entity_case() == kRegisterEntry;
}
inline void Entity::set_has_register_entry() {
  _oneof_case_[0] = kRegisterEntry;
}
inline void Entity::clear_register_entry() {
  if (has_register_entry()) {
    delete entity_.register_entry_;
    clear_has_entity();
  }
}
inline  const ::p4::v1::RegisterEntry& Entity::register_entry() const {
  // @@protoc_insertion_point(field_get:p4.v1.Entity.register_entry)
  return has_register_entry()
      ? *entity_.register_entry_
      : ::p4::v1::RegisterEntry::default_instance();
}
inline ::p4::v1::RegisterEntry* Entity::mutable_register_entry() {
  if (!has_register_entry()) {
    clear_entity();
    set_has_register_entry();
    entity_.register_entry_ = new ::p4::v1::RegisterEntry;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.Entity.register_entry)
  return entity_.register_entry_;
}
inline ::p4::v1::RegisterEntry* Entity::release_register_entry() {
  // @@protoc_insertion_point(field_release:p4.v1.Entity.register_entry)
  if (has_register_entry()) {
    clear_has_entity();
    ::p4::v1::RegisterEntry* temp = entity_.register_entry_;
    entity_.register_entry_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Entity::set_allocated_register_entry(::p4::v1::RegisterEntry* register_entry) {
  clear_entity();
  if (register_entry) {
    set_has_register_entry();
    entity_.register_entry_ = register_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.register_entry)
}

// .p4.v1.DigestEntry digest_entry = 12;
inline bool Entity::has_digest_entry() const {
  return entity_case() == kDigestEntry;
}
inline void Entity::set_has_digest_entry() {
  _oneof_case_[0] = kDigestEntry;
}
inline void Entity::clear_digest_entry() {
  if (has_digest_entry()) {
    delete entity_.digest_entry_;
    clear_has_entity();
  }
}
inline  const ::p4::v1::DigestEntry& Entity::digest_entry() const {
  // @@protoc_insertion_point(field_get:p4.v1.Entity.digest_entry)
  return has_digest_entry()
      ? *entity_.digest_entry_
      : ::p4::v1::DigestEntry::default_instance();
}
inline ::p4::v1::DigestEntry* Entity::mutable_digest_entry() {
  if (!has_digest_entry()) {
    clear_entity();
    set_has_digest_entry();
    entity_.digest_entry_ = new ::p4::v1::DigestEntry;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.Entity.digest_entry)
  return entity_.digest_entry_;
}
inline ::p4::v1::DigestEntry* Entity::release_digest_entry() {
  // @@protoc_insertion_point(field_release:p4.v1.Entity.digest_entry)
  if (has_digest_entry()) {
    clear_has_entity();
    ::p4::v1::DigestEntry* temp = entity_.digest_entry_;
    entity_.digest_entry_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Entity::set_allocated_digest_entry(::p4::v1::DigestEntry* digest_entry) {
  clear_entity();
  if (digest_entry) {
    set_has_digest_entry();
    entity_.digest_entry_ = digest_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Entity.digest_entry)
}

inline bool Entity::has_entity() const {
  return entity_case() != ENTITY_NOT_SET;
}
inline void Entity::clear_has_entity() {
  _oneof_case_[0] = ENTITY_NOT_SET;
}
inline Entity::EntityCase Entity::entity_case() const {
  return Entity::EntityCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ExternEntry

// uint32 extern_type_id = 1;
inline void ExternEntry::clear_extern_type_id() {
  extern_type_id_ = 0u;
}
inline ::google::protobuf::uint32 ExternEntry::extern_type_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.ExternEntry.extern_type_id)
  return extern_type_id_;
}
inline void ExternEntry::set_extern_type_id(::google::protobuf::uint32 value) {
  
  extern_type_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.ExternEntry.extern_type_id)
}

// uint32 extern_id = 2;
inline void ExternEntry::clear_extern_id() {
  extern_id_ = 0u;
}
inline ::google::protobuf::uint32 ExternEntry::extern_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.ExternEntry.extern_id)
  return extern_id_;
}
inline void ExternEntry::set_extern_id(::google::protobuf::uint32 value) {
  
  extern_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.ExternEntry.extern_id)
}

// .google.protobuf.Any entry = 3;
inline bool ExternEntry::has_entry() const {
  return this != internal_default_instance() && entry_ != NULL;
}
inline void ExternEntry::clear_entry() {
  if (GetArenaNoVirtual() == NULL && entry_ != NULL) delete entry_;
  entry_ = NULL;
}
inline const ::google::protobuf::Any& ExternEntry::entry() const {
  // @@protoc_insertion_point(field_get:p4.v1.ExternEntry.entry)
  return entry_ != NULL ? *entry_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* ExternEntry::mutable_entry() {
  
  if (entry_ == NULL) {
    entry_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.ExternEntry.entry)
  return entry_;
}
inline ::google::protobuf::Any* ExternEntry::release_entry() {
  // @@protoc_insertion_point(field_release:p4.v1.ExternEntry.entry)
  
  ::google::protobuf::Any* temp = entry_;
  entry_ = NULL;
  return temp;
}
inline void ExternEntry::set_allocated_entry(::google::protobuf::Any* entry) {
  delete entry_;
  entry_ = entry;
  if (entry) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.ExternEntry.entry)
}

// -------------------------------------------------------------------

// TableEntry_IdleTimeout

// int64 elapsed_ns = 1;
inline void TableEntry_IdleTimeout::clear_elapsed_ns() {
  elapsed_ns_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TableEntry_IdleTimeout::elapsed_ns() const {
  // @@protoc_insertion_point(field_get:p4.v1.TableEntry.IdleTimeout.elapsed_ns)
  return elapsed_ns_;
}
inline void TableEntry_IdleTimeout::set_elapsed_ns(::google::protobuf::int64 value) {
  
  elapsed_ns_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.TableEntry.IdleTimeout.elapsed_ns)
}

// -------------------------------------------------------------------

// TableEntry

// uint32 table_id = 1;
inline void TableEntry::clear_table_id() {
  table_id_ = 0u;
}
inline ::google::protobuf::uint32 TableEntry::table_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.TableEntry.table_id)
  return table_id_;
}
inline void TableEntry::set_table_id(::google::protobuf::uint32 value) {
  
  table_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.TableEntry.table_id)
}

// repeated .p4.v1.FieldMatch match = 2;
inline int TableEntry::match_size() const {
  return match_.size();
}
inline void TableEntry::clear_match() {
  match_.Clear();
}
inline const ::p4::v1::FieldMatch& TableEntry::match(int index) const {
  // @@protoc_insertion_point(field_get:p4.v1.TableEntry.match)
  return match_.Get(index);
}
inline ::p4::v1::FieldMatch* TableEntry::mutable_match(int index) {
  // @@protoc_insertion_point(field_mutable:p4.v1.TableEntry.match)
  return match_.Mutable(index);
}
inline ::p4::v1::FieldMatch* TableEntry::add_match() {
  // @@protoc_insertion_point(field_add:p4.v1.TableEntry.match)
  return match_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::v1::FieldMatch >*
TableEntry::mutable_match() {
  // @@protoc_insertion_point(field_mutable_list:p4.v1.TableEntry.match)
  return &match_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::v1::FieldMatch >&
TableEntry::match() const {
  // @@protoc_insertion_point(field_list:p4.v1.TableEntry.match)
  return match_;
}

// .p4.v1.TableAction action = 3;
inline bool TableEntry::has_action() const {
  return this != internal_default_instance() && action_ != NULL;
}
inline void TableEntry::clear_action() {
  if (GetArenaNoVirtual() == NULL && action_ != NULL) delete action_;
  action_ = NULL;
}
inline const ::p4::v1::TableAction& TableEntry::action() const {
  // @@protoc_insertion_point(field_get:p4.v1.TableEntry.action)
  return action_ != NULL ? *action_
                         : *::p4::v1::TableAction::internal_default_instance();
}
inline ::p4::v1::TableAction* TableEntry::mutable_action() {
  
  if (action_ == NULL) {
    action_ = new ::p4::v1::TableAction;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.TableEntry.action)
  return action_;
}
inline ::p4::v1::TableAction* TableEntry::release_action() {
  // @@protoc_insertion_point(field_release:p4.v1.TableEntry.action)
  
  ::p4::v1::TableAction* temp = action_;
  action_ = NULL;
  return temp;
}
inline void TableEntry::set_allocated_action(::p4::v1::TableAction* action) {
  delete action_;
  action_ = action;
  if (action) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.TableEntry.action)
}

// int32 priority = 4;
inline void TableEntry::clear_priority() {
  priority_ = 0;
}
inline ::google::protobuf::int32 TableEntry::priority() const {
  // @@protoc_insertion_point(field_get:p4.v1.TableEntry.priority)
  return priority_;
}
inline void TableEntry::set_priority(::google::protobuf::int32 value) {
  
  priority_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.TableEntry.priority)
}

// uint64 controller_metadata = 5 [deprecated = true];
inline void TableEntry::clear_controller_metadata() {
  controller_metadata_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TableEntry::controller_metadata() const {
  // @@protoc_insertion_point(field_get:p4.v1.TableEntry.controller_metadata)
  return controller_metadata_;
}
inline void TableEntry::set_controller_metadata(::google::protobuf::uint64 value) {
  
  controller_metadata_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.TableEntry.controller_metadata)
}

// .p4.v1.MeterConfig meter_config = 6;
inline bool TableEntry::has_meter_config() const {
  return this != internal_default_instance() && meter_config_ != NULL;
}
inline void TableEntry::clear_meter_config() {
  if (GetArenaNoVirtual() == NULL && meter_config_ != NULL) delete meter_config_;
  meter_config_ = NULL;
}
inline const ::p4::v1::MeterConfig& TableEntry::meter_config() const {
  // @@protoc_insertion_point(field_get:p4.v1.TableEntry.meter_config)
  return meter_config_ != NULL ? *meter_config_
                         : *::p4::v1::MeterConfig::internal_default_instance();
}
inline ::p4::v1::MeterConfig* TableEntry::mutable_meter_config() {
  
  if (meter_config_ == NULL) {
    meter_config_ = new ::p4::v1::MeterConfig;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.TableEntry.meter_config)
  return meter_config_;
}
inline ::p4::v1::MeterConfig* TableEntry::release_meter_config() {
  // @@protoc_insertion_point(field_release:p4.v1.TableEntry.meter_config)
  
  ::p4::v1::MeterConfig* temp = meter_config_;
  meter_config_ = NULL;
  return temp;
}
inline void TableEntry::set_allocated_meter_config(::p4::v1::MeterConfig* meter_config) {
  delete meter_config_;
  meter_config_ = meter_config;
  if (meter_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.TableEntry.meter_config)
}

// .p4.v1.CounterData counter_data = 7;
inline bool TableEntry::has_counter_data() const {
  return this != internal_default_instance() && counter_data_ != NULL;
}
inline void TableEntry::clear_counter_data() {
  if (GetArenaNoVirtual() == NULL && counter_data_ != NULL) delete counter_data_;
  counter_data_ = NULL;
}
inline const ::p4::v1::CounterData& TableEntry::counter_data() const {
  // @@protoc_insertion_point(field_get:p4.v1.TableEntry.counter_data)
  return counter_data_ != NULL ? *counter_data_
                         : *::p4::v1::CounterData::internal_default_instance();
}
inline ::p4::v1::CounterData* TableEntry::mutable_counter_data() {
  
  if (counter_data_ == NULL) {
    counter_data_ = new ::p4::v1::CounterData;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.TableEntry.counter_data)
  return counter_data_;
}
inline ::p4::v1::CounterData* TableEntry::release_counter_data() {
  // @@protoc_insertion_point(field_release:p4.v1.TableEntry.counter_data)
  
  ::p4::v1::CounterData* temp = counter_data_;
  counter_data_ = NULL;
  return temp;
}
inline void TableEntry::set_allocated_counter_data(::p4::v1::CounterData* counter_data) {
  delete counter_data_;
  counter_data_ = counter_data;
  if (counter_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.TableEntry.counter_data)
}

// bool is_default_action = 8;
inline void TableEntry::clear_is_default_action() {
  is_default_action_ = false;
}
inline bool TableEntry::is_default_action() const {
  // @@protoc_insertion_point(field_get:p4.v1.TableEntry.is_default_action)
  return is_default_action_;
}
inline void TableEntry::set_is_default_action(bool value) {
  
  is_default_action_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.TableEntry.is_default_action)
}

// int64 idle_timeout_ns = 9;
inline void TableEntry::clear_idle_timeout_ns() {
  idle_timeout_ns_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TableEntry::idle_timeout_ns() const {
  // @@protoc_insertion_point(field_get:p4.v1.TableEntry.idle_timeout_ns)
  return idle_timeout_ns_;
}
inline void TableEntry::set_idle_timeout_ns(::google::protobuf::int64 value) {
  
  idle_timeout_ns_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.TableEntry.idle_timeout_ns)
}

// .p4.v1.TableEntry.IdleTimeout time_since_last_hit = 10;
inline bool TableEntry::has_time_since_last_hit() const {
  return this != internal_default_instance() && time_since_last_hit_ != NULL;
}
inline void TableEntry::clear_time_since_last_hit() {
  if (GetArenaNoVirtual() == NULL && time_since_last_hit_ != NULL) delete time_since_last_hit_;
  time_since_last_hit_ = NULL;
}
inline const ::p4::v1::TableEntry_IdleTimeout& TableEntry::time_since_last_hit() const {
  // @@protoc_insertion_point(field_get:p4.v1.TableEntry.time_since_last_hit)
  return time_since_last_hit_ != NULL ? *time_since_last_hit_
                         : *::p4::v1::TableEntry_IdleTimeout::internal_default_instance();
}
inline ::p4::v1::TableEntry_IdleTimeout* TableEntry::mutable_time_since_last_hit() {
  
  if (time_since_last_hit_ == NULL) {
    time_since_last_hit_ = new ::p4::v1::TableEntry_IdleTimeout;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.TableEntry.time_since_last_hit)
  return time_since_last_hit_;
}
inline ::p4::v1::TableEntry_IdleTimeout* TableEntry::release_time_since_last_hit() {
  // @@protoc_insertion_point(field_release:p4.v1.TableEntry.time_since_last_hit)
  
  ::p4::v1::TableEntry_IdleTimeout* temp = time_since_last_hit_;
  time_since_last_hit_ = NULL;
  return temp;
}
inline void TableEntry::set_allocated_time_since_last_hit(::p4::v1::TableEntry_IdleTimeout* time_since_last_hit) {
  delete time_since_last_hit_;
  time_since_last_hit_ = time_since_last_hit;
  if (time_since_last_hit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.TableEntry.time_since_last_hit)
}

// bytes metadata = 11;
inline void TableEntry::clear_metadata() {
  metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TableEntry::metadata() const {
  // @@protoc_insertion_point(field_get:p4.v1.TableEntry.metadata)
  return metadata_.GetNoArena();
}
inline void TableEntry::set_metadata(const ::std::string& value) {
  
  metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.TableEntry.metadata)
}
#if LANG_CXX11
inline void TableEntry::set_metadata(::std::string&& value) {
  
  metadata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.TableEntry.metadata)
}
#endif
inline void TableEntry::set_metadata(const char* value) {
  
  metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.TableEntry.metadata)
}
inline void TableEntry::set_metadata(const void* value, size_t size) {
  
  metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.TableEntry.metadata)
}
inline ::std::string* TableEntry::mutable_metadata() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.TableEntry.metadata)
  return metadata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableEntry::release_metadata() {
  // @@protoc_insertion_point(field_release:p4.v1.TableEntry.metadata)
  
  return metadata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableEntry::set_allocated_metadata(::std::string* metadata) {
  if (metadata != NULL) {
    
  } else {
    
  }
  metadata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metadata);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.TableEntry.metadata)
}

// -------------------------------------------------------------------

// FieldMatch_Exact

// bytes value = 1;
inline void FieldMatch_Exact::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FieldMatch_Exact::value() const {
  // @@protoc_insertion_point(field_get:p4.v1.FieldMatch.Exact.value)
  return value_.GetNoArena();
}
inline void FieldMatch_Exact::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.FieldMatch.Exact.value)
}
#if LANG_CXX11
inline void FieldMatch_Exact::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.FieldMatch.Exact.value)
}
#endif
inline void FieldMatch_Exact::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.FieldMatch.Exact.value)
}
inline void FieldMatch_Exact::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.FieldMatch.Exact.value)
}
inline ::std::string* FieldMatch_Exact::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.FieldMatch.Exact.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FieldMatch_Exact::release_value() {
  // @@protoc_insertion_point(field_release:p4.v1.FieldMatch.Exact.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FieldMatch_Exact::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.Exact.value)
}

// -------------------------------------------------------------------

// FieldMatch_Ternary

// bytes value = 1;
inline void FieldMatch_Ternary::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FieldMatch_Ternary::value() const {
  // @@protoc_insertion_point(field_get:p4.v1.FieldMatch.Ternary.value)
  return value_.GetNoArena();
}
inline void FieldMatch_Ternary::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.FieldMatch.Ternary.value)
}
#if LANG_CXX11
inline void FieldMatch_Ternary::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.FieldMatch.Ternary.value)
}
#endif
inline void FieldMatch_Ternary::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.FieldMatch.Ternary.value)
}
inline void FieldMatch_Ternary::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.FieldMatch.Ternary.value)
}
inline ::std::string* FieldMatch_Ternary::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.FieldMatch.Ternary.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FieldMatch_Ternary::release_value() {
  // @@protoc_insertion_point(field_release:p4.v1.FieldMatch.Ternary.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FieldMatch_Ternary::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.Ternary.value)
}

// bytes mask = 2;
inline void FieldMatch_Ternary::clear_mask() {
  mask_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FieldMatch_Ternary::mask() const {
  // @@protoc_insertion_point(field_get:p4.v1.FieldMatch.Ternary.mask)
  return mask_.GetNoArena();
}
inline void FieldMatch_Ternary::set_mask(const ::std::string& value) {
  
  mask_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.FieldMatch.Ternary.mask)
}
#if LANG_CXX11
inline void FieldMatch_Ternary::set_mask(::std::string&& value) {
  
  mask_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.FieldMatch.Ternary.mask)
}
#endif
inline void FieldMatch_Ternary::set_mask(const char* value) {
  
  mask_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.FieldMatch.Ternary.mask)
}
inline void FieldMatch_Ternary::set_mask(const void* value, size_t size) {
  
  mask_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.FieldMatch.Ternary.mask)
}
inline ::std::string* FieldMatch_Ternary::mutable_mask() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.FieldMatch.Ternary.mask)
  return mask_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FieldMatch_Ternary::release_mask() {
  // @@protoc_insertion_point(field_release:p4.v1.FieldMatch.Ternary.mask)
  
  return mask_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FieldMatch_Ternary::set_allocated_mask(::std::string* mask) {
  if (mask != NULL) {
    
  } else {
    
  }
  mask_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mask);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.Ternary.mask)
}

// -------------------------------------------------------------------

// FieldMatch_LPM

// bytes value = 1;
inline void FieldMatch_LPM::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FieldMatch_LPM::value() const {
  // @@protoc_insertion_point(field_get:p4.v1.FieldMatch.LPM.value)
  return value_.GetNoArena();
}
inline void FieldMatch_LPM::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.FieldMatch.LPM.value)
}
#if LANG_CXX11
inline void FieldMatch_LPM::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.FieldMatch.LPM.value)
}
#endif
inline void FieldMatch_LPM::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.FieldMatch.LPM.value)
}
inline void FieldMatch_LPM::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.FieldMatch.LPM.value)
}
inline ::std::string* FieldMatch_LPM::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.FieldMatch.LPM.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FieldMatch_LPM::release_value() {
  // @@protoc_insertion_point(field_release:p4.v1.FieldMatch.LPM.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FieldMatch_LPM::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.LPM.value)
}

// int32 prefix_len = 2;
inline void FieldMatch_LPM::clear_prefix_len() {
  prefix_len_ = 0;
}
inline ::google::protobuf::int32 FieldMatch_LPM::prefix_len() const {
  // @@protoc_insertion_point(field_get:p4.v1.FieldMatch.LPM.prefix_len)
  return prefix_len_;
}
inline void FieldMatch_LPM::set_prefix_len(::google::protobuf::int32 value) {
  
  prefix_len_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.FieldMatch.LPM.prefix_len)
}

// -------------------------------------------------------------------

// FieldMatch_Range

// bytes low = 1;
inline void FieldMatch_Range::clear_low() {
  low_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FieldMatch_Range::low() const {
  // @@protoc_insertion_point(field_get:p4.v1.FieldMatch.Range.low)
  return low_.GetNoArena();
}
inline void FieldMatch_Range::set_low(const ::std::string& value) {
  
  low_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.FieldMatch.Range.low)
}
#if LANG_CXX11
inline void FieldMatch_Range::set_low(::std::string&& value) {
  
  low_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.FieldMatch.Range.low)
}
#endif
inline void FieldMatch_Range::set_low(const char* value) {
  
  low_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.FieldMatch.Range.low)
}
inline void FieldMatch_Range::set_low(const void* value, size_t size) {
  
  low_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.FieldMatch.Range.low)
}
inline ::std::string* FieldMatch_Range::mutable_low() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.FieldMatch.Range.low)
  return low_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FieldMatch_Range::release_low() {
  // @@protoc_insertion_point(field_release:p4.v1.FieldMatch.Range.low)
  
  return low_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FieldMatch_Range::set_allocated_low(::std::string* low) {
  if (low != NULL) {
    
  } else {
    
  }
  low_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), low);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.Range.low)
}

// bytes high = 2;
inline void FieldMatch_Range::clear_high() {
  high_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FieldMatch_Range::high() const {
  // @@protoc_insertion_point(field_get:p4.v1.FieldMatch.Range.high)
  return high_.GetNoArena();
}
inline void FieldMatch_Range::set_high(const ::std::string& value) {
  
  high_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.FieldMatch.Range.high)
}
#if LANG_CXX11
inline void FieldMatch_Range::set_high(::std::string&& value) {
  
  high_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.FieldMatch.Range.high)
}
#endif
inline void FieldMatch_Range::set_high(const char* value) {
  
  high_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.FieldMatch.Range.high)
}
inline void FieldMatch_Range::set_high(const void* value, size_t size) {
  
  high_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.FieldMatch.Range.high)
}
inline ::std::string* FieldMatch_Range::mutable_high() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.FieldMatch.Range.high)
  return high_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FieldMatch_Range::release_high() {
  // @@protoc_insertion_point(field_release:p4.v1.FieldMatch.Range.high)
  
  return high_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FieldMatch_Range::set_allocated_high(::std::string* high) {
  if (high != NULL) {
    
  } else {
    
  }
  high_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), high);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.Range.high)
}

// -------------------------------------------------------------------

// FieldMatch_Optional

// bytes value = 1;
inline void FieldMatch_Optional::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FieldMatch_Optional::value() const {
  // @@protoc_insertion_point(field_get:p4.v1.FieldMatch.Optional.value)
  return value_.GetNoArena();
}
inline void FieldMatch_Optional::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.FieldMatch.Optional.value)
}
#if LANG_CXX11
inline void FieldMatch_Optional::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.FieldMatch.Optional.value)
}
#endif
inline void FieldMatch_Optional::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.FieldMatch.Optional.value)
}
inline void FieldMatch_Optional::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.FieldMatch.Optional.value)
}
inline ::std::string* FieldMatch_Optional::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.FieldMatch.Optional.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FieldMatch_Optional::release_value() {
  // @@protoc_insertion_point(field_release:p4.v1.FieldMatch.Optional.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FieldMatch_Optional::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.Optional.value)
}

// -------------------------------------------------------------------

// FieldMatch

// uint32 field_id = 1;
inline void FieldMatch::clear_field_id() {
  field_id_ = 0u;
}
inline ::google::protobuf::uint32 FieldMatch::field_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.FieldMatch.field_id)
  return field_id_;
}
inline void FieldMatch::set_field_id(::google::protobuf::uint32 value) {
  
  field_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.FieldMatch.field_id)
}

// .p4.v1.FieldMatch.Exact exact = 2;
inline bool FieldMatch::has_exact() const {
  return field_match_type_case() == kExact;
}
inline void FieldMatch::set_has_exact() {
  _oneof_case_[0] = kExact;
}
inline void FieldMatch::clear_exact() {
  if (has_exact()) {
    delete field_match_type_.exact_;
    clear_has_field_match_type();
  }
}
inline  const ::p4::v1::FieldMatch_Exact& FieldMatch::exact() const {
  // @@protoc_insertion_point(field_get:p4.v1.FieldMatch.exact)
  return has_exact()
      ? *field_match_type_.exact_
      : ::p4::v1::FieldMatch_Exact::default_instance();
}
inline ::p4::v1::FieldMatch_Exact* FieldMatch::mutable_exact() {
  if (!has_exact()) {
    clear_field_match_type();
    set_has_exact();
    field_match_type_.exact_ = new ::p4::v1::FieldMatch_Exact;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.FieldMatch.exact)
  return field_match_type_.exact_;
}
inline ::p4::v1::FieldMatch_Exact* FieldMatch::release_exact() {
  // @@protoc_insertion_point(field_release:p4.v1.FieldMatch.exact)
  if (has_exact()) {
    clear_has_field_match_type();
    ::p4::v1::FieldMatch_Exact* temp = field_match_type_.exact_;
    field_match_type_.exact_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void FieldMatch::set_allocated_exact(::p4::v1::FieldMatch_Exact* exact) {
  clear_field_match_type();
  if (exact) {
    set_has_exact();
    field_match_type_.exact_ = exact;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.exact)
}

// .p4.v1.FieldMatch.Ternary ternary = 3;
inline bool FieldMatch::has_ternary() const {
  return field_match_type_case() == kTernary;
}
inline void FieldMatch::set_has_ternary() {
  _oneof_case_[0] = kTernary;
}
inline void FieldMatch::clear_ternary() {
  if (has_ternary()) {
    delete field_match_type_.ternary_;
    clear_has_field_match_type();
  }
}
inline  const ::p4::v1::FieldMatch_Ternary& FieldMatch::ternary() const {
  // @@protoc_insertion_point(field_get:p4.v1.FieldMatch.ternary)
  return has_ternary()
      ? *field_match_type_.ternary_
      : ::p4::v1::FieldMatch_Ternary::default_instance();
}
inline ::p4::v1::FieldMatch_Ternary* FieldMatch::mutable_ternary() {
  if (!has_ternary()) {
    clear_field_match_type();
    set_has_ternary();
    field_match_type_.ternary_ = new ::p4::v1::FieldMatch_Ternary;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.FieldMatch.ternary)
  return field_match_type_.ternary_;
}
inline ::p4::v1::FieldMatch_Ternary* FieldMatch::release_ternary() {
  // @@protoc_insertion_point(field_release:p4.v1.FieldMatch.ternary)
  if (has_ternary()) {
    clear_has_field_match_type();
    ::p4::v1::FieldMatch_Ternary* temp = field_match_type_.ternary_;
    field_match_type_.ternary_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void FieldMatch::set_allocated_ternary(::p4::v1::FieldMatch_Ternary* ternary) {
  clear_field_match_type();
  if (ternary) {
    set_has_ternary();
    field_match_type_.ternary_ = ternary;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.ternary)
}

// .p4.v1.FieldMatch.LPM lpm = 4;
inline bool FieldMatch::has_lpm() const {
  return field_match_type_case() == kLpm;
}
inline void FieldMatch::set_has_lpm() {
  _oneof_case_[0] = kLpm;
}
inline void FieldMatch::clear_lpm() {
  if (has_lpm()) {
    delete field_match_type_.lpm_;
    clear_has_field_match_type();
  }
}
inline  const ::p4::v1::FieldMatch_LPM& FieldMatch::lpm() const {
  // @@protoc_insertion_point(field_get:p4.v1.FieldMatch.lpm)
  return has_lpm()
      ? *field_match_type_.lpm_
      : ::p4::v1::FieldMatch_LPM::default_instance();
}
inline ::p4::v1::FieldMatch_LPM* FieldMatch::mutable_lpm() {
  if (!has_lpm()) {
    clear_field_match_type();
    set_has_lpm();
    field_match_type_.lpm_ = new ::p4::v1::FieldMatch_LPM;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.FieldMatch.lpm)
  return field_match_type_.lpm_;
}
inline ::p4::v1::FieldMatch_LPM* FieldMatch::release_lpm() {
  // @@protoc_insertion_point(field_release:p4.v1.FieldMatch.lpm)
  if (has_lpm()) {
    clear_has_field_match_type();
    ::p4::v1::FieldMatch_LPM* temp = field_match_type_.lpm_;
    field_match_type_.lpm_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void FieldMatch::set_allocated_lpm(::p4::v1::FieldMatch_LPM* lpm) {
  clear_field_match_type();
  if (lpm) {
    set_has_lpm();
    field_match_type_.lpm_ = lpm;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.lpm)
}

// .p4.v1.FieldMatch.Range range = 6;
inline bool FieldMatch::has_range() const {
  return field_match_type_case() == kRange;
}
inline void FieldMatch::set_has_range() {
  _oneof_case_[0] = kRange;
}
inline void FieldMatch::clear_range() {
  if (has_range()) {
    delete field_match_type_.range_;
    clear_has_field_match_type();
  }
}
inline  const ::p4::v1::FieldMatch_Range& FieldMatch::range() const {
  // @@protoc_insertion_point(field_get:p4.v1.FieldMatch.range)
  return has_range()
      ? *field_match_type_.range_
      : ::p4::v1::FieldMatch_Range::default_instance();
}
inline ::p4::v1::FieldMatch_Range* FieldMatch::mutable_range() {
  if (!has_range()) {
    clear_field_match_type();
    set_has_range();
    field_match_type_.range_ = new ::p4::v1::FieldMatch_Range;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.FieldMatch.range)
  return field_match_type_.range_;
}
inline ::p4::v1::FieldMatch_Range* FieldMatch::release_range() {
  // @@protoc_insertion_point(field_release:p4.v1.FieldMatch.range)
  if (has_range()) {
    clear_has_field_match_type();
    ::p4::v1::FieldMatch_Range* temp = field_match_type_.range_;
    field_match_type_.range_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void FieldMatch::set_allocated_range(::p4::v1::FieldMatch_Range* range) {
  clear_field_match_type();
  if (range) {
    set_has_range();
    field_match_type_.range_ = range;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.range)
}

// .p4.v1.FieldMatch.Optional optional = 7;
inline bool FieldMatch::has_optional() const {
  return field_match_type_case() == kOptional;
}
inline void FieldMatch::set_has_optional() {
  _oneof_case_[0] = kOptional;
}
inline void FieldMatch::clear_optional() {
  if (has_optional()) {
    delete field_match_type_.optional_;
    clear_has_field_match_type();
  }
}
inline  const ::p4::v1::FieldMatch_Optional& FieldMatch::optional() const {
  // @@protoc_insertion_point(field_get:p4.v1.FieldMatch.optional)
  return has_optional()
      ? *field_match_type_.optional_
      : ::p4::v1::FieldMatch_Optional::default_instance();
}
inline ::p4::v1::FieldMatch_Optional* FieldMatch::mutable_optional() {
  if (!has_optional()) {
    clear_field_match_type();
    set_has_optional();
    field_match_type_.optional_ = new ::p4::v1::FieldMatch_Optional;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.FieldMatch.optional)
  return field_match_type_.optional_;
}
inline ::p4::v1::FieldMatch_Optional* FieldMatch::release_optional() {
  // @@protoc_insertion_point(field_release:p4.v1.FieldMatch.optional)
  if (has_optional()) {
    clear_has_field_match_type();
    ::p4::v1::FieldMatch_Optional* temp = field_match_type_.optional_;
    field_match_type_.optional_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void FieldMatch::set_allocated_optional(::p4::v1::FieldMatch_Optional* optional) {
  clear_field_match_type();
  if (optional) {
    set_has_optional();
    field_match_type_.optional_ = optional;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.optional)
}

// .google.protobuf.Any other = 100;
inline bool FieldMatch::has_other() const {
  return field_match_type_case() == kOther;
}
inline void FieldMatch::set_has_other() {
  _oneof_case_[0] = kOther;
}
inline void FieldMatch::clear_other() {
  if (has_other()) {
    delete field_match_type_.other_;
    clear_has_field_match_type();
  }
}
inline  const ::google::protobuf::Any& FieldMatch::other() const {
  // @@protoc_insertion_point(field_get:p4.v1.FieldMatch.other)
  return has_other()
      ? *field_match_type_.other_
      : ::google::protobuf::Any::default_instance();
}
inline ::google::protobuf::Any* FieldMatch::mutable_other() {
  if (!has_other()) {
    clear_field_match_type();
    set_has_other();
    field_match_type_.other_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.FieldMatch.other)
  return field_match_type_.other_;
}
inline ::google::protobuf::Any* FieldMatch::release_other() {
  // @@protoc_insertion_point(field_release:p4.v1.FieldMatch.other)
  if (has_other()) {
    clear_has_field_match_type();
    ::google::protobuf::Any* temp = field_match_type_.other_;
    field_match_type_.other_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void FieldMatch::set_allocated_other(::google::protobuf::Any* other) {
  clear_field_match_type();
  if (other) {
    set_has_other();
    field_match_type_.other_ = other;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.FieldMatch.other)
}

inline bool FieldMatch::has_field_match_type() const {
  return field_match_type_case() != FIELD_MATCH_TYPE_NOT_SET;
}
inline void FieldMatch::clear_has_field_match_type() {
  _oneof_case_[0] = FIELD_MATCH_TYPE_NOT_SET;
}
inline FieldMatch::FieldMatchTypeCase FieldMatch::field_match_type_case() const {
  return FieldMatch::FieldMatchTypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// TableAction

// .p4.v1.Action action = 1;
inline bool TableAction::has_action() const {
  return type_case() == kAction;
}
inline void TableAction::set_has_action() {
  _oneof_case_[0] = kAction;
}
inline void TableAction::clear_action() {
  if (has_action()) {
    delete type_.action_;
    clear_has_type();
  }
}
inline  const ::p4::v1::Action& TableAction::action() const {
  // @@protoc_insertion_point(field_get:p4.v1.TableAction.action)
  return has_action()
      ? *type_.action_
      : ::p4::v1::Action::default_instance();
}
inline ::p4::v1::Action* TableAction::mutable_action() {
  if (!has_action()) {
    clear_type();
    set_has_action();
    type_.action_ = new ::p4::v1::Action;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.TableAction.action)
  return type_.action_;
}
inline ::p4::v1::Action* TableAction::release_action() {
  // @@protoc_insertion_point(field_release:p4.v1.TableAction.action)
  if (has_action()) {
    clear_has_type();
    ::p4::v1::Action* temp = type_.action_;
    type_.action_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TableAction::set_allocated_action(::p4::v1::Action* action) {
  clear_type();
  if (action) {
    set_has_action();
    type_.action_ = action;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.TableAction.action)
}

// uint32 action_profile_member_id = 2;
inline bool TableAction::has_action_profile_member_id() const {
  return type_case() == kActionProfileMemberId;
}
inline void TableAction::set_has_action_profile_member_id() {
  _oneof_case_[0] = kActionProfileMemberId;
}
inline void TableAction::clear_action_profile_member_id() {
  if (has_action_profile_member_id()) {
    type_.action_profile_member_id_ = 0u;
    clear_has_type();
  }
}
inline ::google::protobuf::uint32 TableAction::action_profile_member_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.TableAction.action_profile_member_id)
  if (has_action_profile_member_id()) {
    return type_.action_profile_member_id_;
  }
  return 0u;
}
inline void TableAction::set_action_profile_member_id(::google::protobuf::uint32 value) {
  if (!has_action_profile_member_id()) {
    clear_type();
    set_has_action_profile_member_id();
  }
  type_.action_profile_member_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.TableAction.action_profile_member_id)
}

// uint32 action_profile_group_id = 3;
inline bool TableAction::has_action_profile_group_id() const {
  return type_case() == kActionProfileGroupId;
}
inline void TableAction::set_has_action_profile_group_id() {
  _oneof_case_[0] = kActionProfileGroupId;
}
inline void TableAction::clear_action_profile_group_id() {
  if (has_action_profile_group_id()) {
    type_.action_profile_group_id_ = 0u;
    clear_has_type();
  }
}
inline ::google::protobuf::uint32 TableAction::action_profile_group_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.TableAction.action_profile_group_id)
  if (has_action_profile_group_id()) {
    return type_.action_profile_group_id_;
  }
  return 0u;
}
inline void TableAction::set_action_profile_group_id(::google::protobuf::uint32 value) {
  if (!has_action_profile_group_id()) {
    clear_type();
    set_has_action_profile_group_id();
  }
  type_.action_profile_group_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.TableAction.action_profile_group_id)
}

// .p4.v1.ActionProfileActionSet action_profile_action_set = 4;
inline bool TableAction::has_action_profile_action_set() const {
  return type_case() == kActionProfileActionSet;
}
inline void TableAction::set_has_action_profile_action_set() {
  _oneof_case_[0] = kActionProfileActionSet;
}
inline void TableAction::clear_action_profile_action_set() {
  if (has_action_profile_action_set()) {
    delete type_.action_profile_action_set_;
    clear_has_type();
  }
}
inline  const ::p4::v1::ActionProfileActionSet& TableAction::action_profile_action_set() const {
  // @@protoc_insertion_point(field_get:p4.v1.TableAction.action_profile_action_set)
  return has_action_profile_action_set()
      ? *type_.action_profile_action_set_
      : ::p4::v1::ActionProfileActionSet::default_instance();
}
inline ::p4::v1::ActionProfileActionSet* TableAction::mutable_action_profile_action_set() {
  if (!has_action_profile_action_set()) {
    clear_type();
    set_has_action_profile_action_set();
    type_.action_profile_action_set_ = new ::p4::v1::ActionProfileActionSet;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.TableAction.action_profile_action_set)
  return type_.action_profile_action_set_;
}
inline ::p4::v1::ActionProfileActionSet* TableAction::release_action_profile_action_set() {
  // @@protoc_insertion_point(field_release:p4.v1.TableAction.action_profile_action_set)
  if (has_action_profile_action_set()) {
    clear_has_type();
    ::p4::v1::ActionProfileActionSet* temp = type_.action_profile_action_set_;
    type_.action_profile_action_set_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TableAction::set_allocated_action_profile_action_set(::p4::v1::ActionProfileActionSet* action_profile_action_set) {
  clear_type();
  if (action_profile_action_set) {
    set_has_action_profile_action_set();
    type_.action_profile_action_set_ = action_profile_action_set;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.TableAction.action_profile_action_set)
}

inline bool TableAction::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void TableAction::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
inline TableAction::TypeCase TableAction::type_case() const {
  return TableAction::TypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Action_Param

// uint32 param_id = 2;
inline void Action_Param::clear_param_id() {
  param_id_ = 0u;
}
inline ::google::protobuf::uint32 Action_Param::param_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.Action.Param.param_id)
  return param_id_;
}
inline void Action_Param::set_param_id(::google::protobuf::uint32 value) {
  
  param_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.Action.Param.param_id)
}

// bytes value = 3;
inline void Action_Param::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Action_Param::value() const {
  // @@protoc_insertion_point(field_get:p4.v1.Action.Param.value)
  return value_.GetNoArena();
}
inline void Action_Param::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.Action.Param.value)
}
#if LANG_CXX11
inline void Action_Param::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.Action.Param.value)
}
#endif
inline void Action_Param::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.Action.Param.value)
}
inline void Action_Param::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.Action.Param.value)
}
inline ::std::string* Action_Param::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.Action.Param.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Action_Param::release_value() {
  // @@protoc_insertion_point(field_release:p4.v1.Action.Param.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Action_Param::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Action.Param.value)
}

// -------------------------------------------------------------------

// Action

// uint32 action_id = 1;
inline void Action::clear_action_id() {
  action_id_ = 0u;
}
inline ::google::protobuf::uint32 Action::action_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.Action.action_id)
  return action_id_;
}
inline void Action::set_action_id(::google::protobuf::uint32 value) {
  
  action_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.Action.action_id)
}

// repeated .p4.v1.Action.Param params = 4;
inline int Action::params_size() const {
  return params_.size();
}
inline void Action::clear_params() {
  params_.Clear();
}
inline const ::p4::v1::Action_Param& Action::params(int index) const {
  // @@protoc_insertion_point(field_get:p4.v1.Action.params)
  return params_.Get(index);
}
inline ::p4::v1::Action_Param* Action::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:p4.v1.Action.params)
  return params_.Mutable(index);
}
inline ::p4::v1::Action_Param* Action::add_params() {
  // @@protoc_insertion_point(field_add:p4.v1.Action.params)
  return params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::v1::Action_Param >*
Action::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:p4.v1.Action.params)
  return &params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::v1::Action_Param >&
Action::params() const {
  // @@protoc_insertion_point(field_list:p4.v1.Action.params)
  return params_;
}

// -------------------------------------------------------------------

// ActionProfileActionSet

// repeated .p4.v1.ActionProfileAction action_profile_actions = 1;
inline int ActionProfileActionSet::action_profile_actions_size() const {
  return action_profile_actions_.size();
}
inline void ActionProfileActionSet::clear_action_profile_actions() {
  action_profile_actions_.Clear();
}
inline const ::p4::v1::ActionProfileAction& ActionProfileActionSet::action_profile_actions(int index) const {
  // @@protoc_insertion_point(field_get:p4.v1.ActionProfileActionSet.action_profile_actions)
  return action_profile_actions_.Get(index);
}
inline ::p4::v1::ActionProfileAction* ActionProfileActionSet::mutable_action_profile_actions(int index) {
  // @@protoc_insertion_point(field_mutable:p4.v1.ActionProfileActionSet.action_profile_actions)
  return action_profile_actions_.Mutable(index);
}
inline ::p4::v1::ActionProfileAction* ActionProfileActionSet::add_action_profile_actions() {
  // @@protoc_insertion_point(field_add:p4.v1.ActionProfileActionSet.action_profile_actions)
  return action_profile_actions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::v1::ActionProfileAction >*
ActionProfileActionSet::mutable_action_profile_actions() {
  // @@protoc_insertion_point(field_mutable_list:p4.v1.ActionProfileActionSet.action_profile_actions)
  return &action_profile_actions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::v1::ActionProfileAction >&
ActionProfileActionSet::action_profile_actions() const {
  // @@protoc_insertion_point(field_list:p4.v1.ActionProfileActionSet.action_profile_actions)
  return action_profile_actions_;
}

// -------------------------------------------------------------------

// ActionProfileAction

// .p4.v1.Action action = 1;
inline bool ActionProfileAction::has_action() const {
  return this != internal_default_instance() && action_ != NULL;
}
inline void ActionProfileAction::clear_action() {
  if (GetArenaNoVirtual() == NULL && action_ != NULL) delete action_;
  action_ = NULL;
}
inline const ::p4::v1::Action& ActionProfileAction::action() const {
  // @@protoc_insertion_point(field_get:p4.v1.ActionProfileAction.action)
  return action_ != NULL ? *action_
                         : *::p4::v1::Action::internal_default_instance();
}
inline ::p4::v1::Action* ActionProfileAction::mutable_action() {
  
  if (action_ == NULL) {
    action_ = new ::p4::v1::Action;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.ActionProfileAction.action)
  return action_;
}
inline ::p4::v1::Action* ActionProfileAction::release_action() {
  // @@protoc_insertion_point(field_release:p4.v1.ActionProfileAction.action)
  
  ::p4::v1::Action* temp = action_;
  action_ = NULL;
  return temp;
}
inline void ActionProfileAction::set_allocated_action(::p4::v1::Action* action) {
  delete action_;
  action_ = action;
  if (action) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.ActionProfileAction.action)
}

// int32 weight = 2;
inline void ActionProfileAction::clear_weight() {
  weight_ = 0;
}
inline ::google::protobuf::int32 ActionProfileAction::weight() const {
  // @@protoc_insertion_point(field_get:p4.v1.ActionProfileAction.weight)
  return weight_;
}
inline void ActionProfileAction::set_weight(::google::protobuf::int32 value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.ActionProfileAction.weight)
}

// int32 watch = 3;
inline void ActionProfileAction::clear_watch() {
  watch_ = 0;
}
inline ::google::protobuf::int32 ActionProfileAction::watch() const {
  // @@protoc_insertion_point(field_get:p4.v1.ActionProfileAction.watch)
  return watch_;
}
inline void ActionProfileAction::set_watch(::google::protobuf::int32 value) {
  
  watch_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.ActionProfileAction.watch)
}

// -------------------------------------------------------------------

// ActionProfileMember

// uint32 action_profile_id = 1;
inline void ActionProfileMember::clear_action_profile_id() {
  action_profile_id_ = 0u;
}
inline ::google::protobuf::uint32 ActionProfileMember::action_profile_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.ActionProfileMember.action_profile_id)
  return action_profile_id_;
}
inline void ActionProfileMember::set_action_profile_id(::google::protobuf::uint32 value) {
  
  action_profile_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.ActionProfileMember.action_profile_id)
}

// uint32 member_id = 2;
inline void ActionProfileMember::clear_member_id() {
  member_id_ = 0u;
}
inline ::google::protobuf::uint32 ActionProfileMember::member_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.ActionProfileMember.member_id)
  return member_id_;
}
inline void ActionProfileMember::set_member_id(::google::protobuf::uint32 value) {
  
  member_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.ActionProfileMember.member_id)
}

// .p4.v1.Action action = 3;
inline bool ActionProfileMember::has_action() const {
  return this != internal_default_instance() && action_ != NULL;
}
inline void ActionProfileMember::clear_action() {
  if (GetArenaNoVirtual() == NULL && action_ != NULL) delete action_;
  action_ = NULL;
}
inline const ::p4::v1::Action& ActionProfileMember::action() const {
  // @@protoc_insertion_point(field_get:p4.v1.ActionProfileMember.action)
  return action_ != NULL ? *action_
                         : *::p4::v1::Action::internal_default_instance();
}
inline ::p4::v1::Action* ActionProfileMember::mutable_action() {
  
  if (action_ == NULL) {
    action_ = new ::p4::v1::Action;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.ActionProfileMember.action)
  return action_;
}
inline ::p4::v1::Action* ActionProfileMember::release_action() {
  // @@protoc_insertion_point(field_release:p4.v1.ActionProfileMember.action)
  
  ::p4::v1::Action* temp = action_;
  action_ = NULL;
  return temp;
}
inline void ActionProfileMember::set_allocated_action(::p4::v1::Action* action) {
  delete action_;
  action_ = action;
  if (action) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.ActionProfileMember.action)
}

// -------------------------------------------------------------------

// ActionProfileGroup_Member

// uint32 member_id = 1;
inline void ActionProfileGroup_Member::clear_member_id() {
  member_id_ = 0u;
}
inline ::google::protobuf::uint32 ActionProfileGroup_Member::member_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.ActionProfileGroup.Member.member_id)
  return member_id_;
}
inline void ActionProfileGroup_Member::set_member_id(::google::protobuf::uint32 value) {
  
  member_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.ActionProfileGroup.Member.member_id)
}

// int32 weight = 2;
inline void ActionProfileGroup_Member::clear_weight() {
  weight_ = 0;
}
inline ::google::protobuf::int32 ActionProfileGroup_Member::weight() const {
  // @@protoc_insertion_point(field_get:p4.v1.ActionProfileGroup.Member.weight)
  return weight_;
}
inline void ActionProfileGroup_Member::set_weight(::google::protobuf::int32 value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.ActionProfileGroup.Member.weight)
}

// uint32 watch = 3;
inline void ActionProfileGroup_Member::clear_watch() {
  watch_ = 0u;
}
inline ::google::protobuf::uint32 ActionProfileGroup_Member::watch() const {
  // @@protoc_insertion_point(field_get:p4.v1.ActionProfileGroup.Member.watch)
  return watch_;
}
inline void ActionProfileGroup_Member::set_watch(::google::protobuf::uint32 value) {
  
  watch_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.ActionProfileGroup.Member.watch)
}

// -------------------------------------------------------------------

// ActionProfileGroup

// uint32 action_profile_id = 1;
inline void ActionProfileGroup::clear_action_profile_id() {
  action_profile_id_ = 0u;
}
inline ::google::protobuf::uint32 ActionProfileGroup::action_profile_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.ActionProfileGroup.action_profile_id)
  return action_profile_id_;
}
inline void ActionProfileGroup::set_action_profile_id(::google::protobuf::uint32 value) {
  
  action_profile_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.ActionProfileGroup.action_profile_id)
}

// uint32 group_id = 2;
inline void ActionProfileGroup::clear_group_id() {
  group_id_ = 0u;
}
inline ::google::protobuf::uint32 ActionProfileGroup::group_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.ActionProfileGroup.group_id)
  return group_id_;
}
inline void ActionProfileGroup::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.ActionProfileGroup.group_id)
}

// repeated .p4.v1.ActionProfileGroup.Member members = 3;
inline int ActionProfileGroup::members_size() const {
  return members_.size();
}
inline void ActionProfileGroup::clear_members() {
  members_.Clear();
}
inline const ::p4::v1::ActionProfileGroup_Member& ActionProfileGroup::members(int index) const {
  // @@protoc_insertion_point(field_get:p4.v1.ActionProfileGroup.members)
  return members_.Get(index);
}
inline ::p4::v1::ActionProfileGroup_Member* ActionProfileGroup::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:p4.v1.ActionProfileGroup.members)
  return members_.Mutable(index);
}
inline ::p4::v1::ActionProfileGroup_Member* ActionProfileGroup::add_members() {
  // @@protoc_insertion_point(field_add:p4.v1.ActionProfileGroup.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::v1::ActionProfileGroup_Member >*
ActionProfileGroup::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:p4.v1.ActionProfileGroup.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::v1::ActionProfileGroup_Member >&
ActionProfileGroup::members() const {
  // @@protoc_insertion_point(field_list:p4.v1.ActionProfileGroup.members)
  return members_;
}

// int32 max_size = 4;
inline void ActionProfileGroup::clear_max_size() {
  max_size_ = 0;
}
inline ::google::protobuf::int32 ActionProfileGroup::max_size() const {
  // @@protoc_insertion_point(field_get:p4.v1.ActionProfileGroup.max_size)
  return max_size_;
}
inline void ActionProfileGroup::set_max_size(::google::protobuf::int32 value) {
  
  max_size_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.ActionProfileGroup.max_size)
}

// -------------------------------------------------------------------

// Index

// int64 index = 1;
inline void Index::clear_index() {
  index_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Index::index() const {
  // @@protoc_insertion_point(field_get:p4.v1.Index.index)
  return index_;
}
inline void Index::set_index(::google::protobuf::int64 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.Index.index)
}

// -------------------------------------------------------------------

// MeterEntry

// uint32 meter_id = 1;
inline void MeterEntry::clear_meter_id() {
  meter_id_ = 0u;
}
inline ::google::protobuf::uint32 MeterEntry::meter_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.MeterEntry.meter_id)
  return meter_id_;
}
inline void MeterEntry::set_meter_id(::google::protobuf::uint32 value) {
  
  meter_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.MeterEntry.meter_id)
}

// .p4.v1.Index index = 2;
inline bool MeterEntry::has_index() const {
  return this != internal_default_instance() && index_ != NULL;
}
inline void MeterEntry::clear_index() {
  if (GetArenaNoVirtual() == NULL && index_ != NULL) delete index_;
  index_ = NULL;
}
inline const ::p4::v1::Index& MeterEntry::index() const {
  // @@protoc_insertion_point(field_get:p4.v1.MeterEntry.index)
  return index_ != NULL ? *index_
                         : *::p4::v1::Index::internal_default_instance();
}
inline ::p4::v1::Index* MeterEntry::mutable_index() {
  
  if (index_ == NULL) {
    index_ = new ::p4::v1::Index;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.MeterEntry.index)
  return index_;
}
inline ::p4::v1::Index* MeterEntry::release_index() {
  // @@protoc_insertion_point(field_release:p4.v1.MeterEntry.index)
  
  ::p4::v1::Index* temp = index_;
  index_ = NULL;
  return temp;
}
inline void MeterEntry::set_allocated_index(::p4::v1::Index* index) {
  delete index_;
  index_ = index;
  if (index) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.MeterEntry.index)
}

// .p4.v1.MeterConfig config = 3;
inline bool MeterEntry::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void MeterEntry::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) delete config_;
  config_ = NULL;
}
inline const ::p4::v1::MeterConfig& MeterEntry::config() const {
  // @@protoc_insertion_point(field_get:p4.v1.MeterEntry.config)
  return config_ != NULL ? *config_
                         : *::p4::v1::MeterConfig::internal_default_instance();
}
inline ::p4::v1::MeterConfig* MeterEntry::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::p4::v1::MeterConfig;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.MeterEntry.config)
  return config_;
}
inline ::p4::v1::MeterConfig* MeterEntry::release_config() {
  // @@protoc_insertion_point(field_release:p4.v1.MeterEntry.config)
  
  ::p4::v1::MeterConfig* temp = config_;
  config_ = NULL;
  return temp;
}
inline void MeterEntry::set_allocated_config(::p4::v1::MeterConfig* config) {
  delete config_;
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.MeterEntry.config)
}

// -------------------------------------------------------------------

// DirectMeterEntry

// .p4.v1.TableEntry table_entry = 1;
inline bool DirectMeterEntry::has_table_entry() const {
  return this != internal_default_instance() && table_entry_ != NULL;
}
inline void DirectMeterEntry::clear_table_entry() {
  if (GetArenaNoVirtual() == NULL && table_entry_ != NULL) delete table_entry_;
  table_entry_ = NULL;
}
inline const ::p4::v1::TableEntry& DirectMeterEntry::table_entry() const {
  // @@protoc_insertion_point(field_get:p4.v1.DirectMeterEntry.table_entry)
  return table_entry_ != NULL ? *table_entry_
                         : *::p4::v1::TableEntry::internal_default_instance();
}
inline ::p4::v1::TableEntry* DirectMeterEntry::mutable_table_entry() {
  
  if (table_entry_ == NULL) {
    table_entry_ = new ::p4::v1::TableEntry;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.DirectMeterEntry.table_entry)
  return table_entry_;
}
inline ::p4::v1::TableEntry* DirectMeterEntry::release_table_entry() {
  // @@protoc_insertion_point(field_release:p4.v1.DirectMeterEntry.table_entry)
  
  ::p4::v1::TableEntry* temp = table_entry_;
  table_entry_ = NULL;
  return temp;
}
inline void DirectMeterEntry::set_allocated_table_entry(::p4::v1::TableEntry* table_entry) {
  delete table_entry_;
  table_entry_ = table_entry;
  if (table_entry) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.DirectMeterEntry.table_entry)
}

// .p4.v1.MeterConfig config = 2;
inline bool DirectMeterEntry::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void DirectMeterEntry::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) delete config_;
  config_ = NULL;
}
inline const ::p4::v1::MeterConfig& DirectMeterEntry::config() const {
  // @@protoc_insertion_point(field_get:p4.v1.DirectMeterEntry.config)
  return config_ != NULL ? *config_
                         : *::p4::v1::MeterConfig::internal_default_instance();
}
inline ::p4::v1::MeterConfig* DirectMeterEntry::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::p4::v1::MeterConfig;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.DirectMeterEntry.config)
  return config_;
}
inline ::p4::v1::MeterConfig* DirectMeterEntry::release_config() {
  // @@protoc_insertion_point(field_release:p4.v1.DirectMeterEntry.config)
  
  ::p4::v1::MeterConfig* temp = config_;
  config_ = NULL;
  return temp;
}
inline void DirectMeterEntry::set_allocated_config(::p4::v1::MeterConfig* config) {
  delete config_;
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.DirectMeterEntry.config)
}

// -------------------------------------------------------------------

// MeterConfig

// int64 cir = 1;
inline void MeterConfig::clear_cir() {
  cir_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MeterConfig::cir() const {
  // @@protoc_insertion_point(field_get:p4.v1.MeterConfig.cir)
  return cir_;
}
inline void MeterConfig::set_cir(::google::protobuf::int64 value) {
  
  cir_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.MeterConfig.cir)
}

// int64 cburst = 2;
inline void MeterConfig::clear_cburst() {
  cburst_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MeterConfig::cburst() const {
  // @@protoc_insertion_point(field_get:p4.v1.MeterConfig.cburst)
  return cburst_;
}
inline void MeterConfig::set_cburst(::google::protobuf::int64 value) {
  
  cburst_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.MeterConfig.cburst)
}

// int64 pir = 3;
inline void MeterConfig::clear_pir() {
  pir_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MeterConfig::pir() const {
  // @@protoc_insertion_point(field_get:p4.v1.MeterConfig.pir)
  return pir_;
}
inline void MeterConfig::set_pir(::google::protobuf::int64 value) {
  
  pir_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.MeterConfig.pir)
}

// int64 pburst = 4;
inline void MeterConfig::clear_pburst() {
  pburst_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MeterConfig::pburst() const {
  // @@protoc_insertion_point(field_get:p4.v1.MeterConfig.pburst)
  return pburst_;
}
inline void MeterConfig::set_pburst(::google::protobuf::int64 value) {
  
  pburst_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.MeterConfig.pburst)
}

// -------------------------------------------------------------------

// CounterEntry

// uint32 counter_id = 1;
inline void CounterEntry::clear_counter_id() {
  counter_id_ = 0u;
}
inline ::google::protobuf::uint32 CounterEntry::counter_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.CounterEntry.counter_id)
  return counter_id_;
}
inline void CounterEntry::set_counter_id(::google::protobuf::uint32 value) {
  
  counter_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.CounterEntry.counter_id)
}

// .p4.v1.Index index = 2;
inline bool CounterEntry::has_index() const {
  return this != internal_default_instance() && index_ != NULL;
}
inline void CounterEntry::clear_index() {
  if (GetArenaNoVirtual() == NULL && index_ != NULL) delete index_;
  index_ = NULL;
}
inline const ::p4::v1::Index& CounterEntry::index() const {
  // @@protoc_insertion_point(field_get:p4.v1.CounterEntry.index)
  return index_ != NULL ? *index_
                         : *::p4::v1::Index::internal_default_instance();
}
inline ::p4::v1::Index* CounterEntry::mutable_index() {
  
  if (index_ == NULL) {
    index_ = new ::p4::v1::Index;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.CounterEntry.index)
  return index_;
}
inline ::p4::v1::Index* CounterEntry::release_index() {
  // @@protoc_insertion_point(field_release:p4.v1.CounterEntry.index)
  
  ::p4::v1::Index* temp = index_;
  index_ = NULL;
  return temp;
}
inline void CounterEntry::set_allocated_index(::p4::v1::Index* index) {
  delete index_;
  index_ = index;
  if (index) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.CounterEntry.index)
}

// .p4.v1.CounterData data = 3;
inline bool CounterEntry::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void CounterEntry::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::p4::v1::CounterData& CounterEntry::data() const {
  // @@protoc_insertion_point(field_get:p4.v1.CounterEntry.data)
  return data_ != NULL ? *data_
                         : *::p4::v1::CounterData::internal_default_instance();
}
inline ::p4::v1::CounterData* CounterEntry::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::p4::v1::CounterData;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.CounterEntry.data)
  return data_;
}
inline ::p4::v1::CounterData* CounterEntry::release_data() {
  // @@protoc_insertion_point(field_release:p4.v1.CounterEntry.data)
  
  ::p4::v1::CounterData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CounterEntry::set_allocated_data(::p4::v1::CounterData* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.CounterEntry.data)
}

// -------------------------------------------------------------------

// DirectCounterEntry

// .p4.v1.TableEntry table_entry = 1;
inline bool DirectCounterEntry::has_table_entry() const {
  return this != internal_default_instance() && table_entry_ != NULL;
}
inline void DirectCounterEntry::clear_table_entry() {
  if (GetArenaNoVirtual() == NULL && table_entry_ != NULL) delete table_entry_;
  table_entry_ = NULL;
}
inline const ::p4::v1::TableEntry& DirectCounterEntry::table_entry() const {
  // @@protoc_insertion_point(field_get:p4.v1.DirectCounterEntry.table_entry)
  return table_entry_ != NULL ? *table_entry_
                         : *::p4::v1::TableEntry::internal_default_instance();
}
inline ::p4::v1::TableEntry* DirectCounterEntry::mutable_table_entry() {
  
  if (table_entry_ == NULL) {
    table_entry_ = new ::p4::v1::TableEntry;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.DirectCounterEntry.table_entry)
  return table_entry_;
}
inline ::p4::v1::TableEntry* DirectCounterEntry::release_table_entry() {
  // @@protoc_insertion_point(field_release:p4.v1.DirectCounterEntry.table_entry)
  
  ::p4::v1::TableEntry* temp = table_entry_;
  table_entry_ = NULL;
  return temp;
}
inline void DirectCounterEntry::set_allocated_table_entry(::p4::v1::TableEntry* table_entry) {
  delete table_entry_;
  table_entry_ = table_entry;
  if (table_entry) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.DirectCounterEntry.table_entry)
}

// .p4.v1.CounterData data = 2;
inline bool DirectCounterEntry::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void DirectCounterEntry::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::p4::v1::CounterData& DirectCounterEntry::data() const {
  // @@protoc_insertion_point(field_get:p4.v1.DirectCounterEntry.data)
  return data_ != NULL ? *data_
                         : *::p4::v1::CounterData::internal_default_instance();
}
inline ::p4::v1::CounterData* DirectCounterEntry::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::p4::v1::CounterData;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.DirectCounterEntry.data)
  return data_;
}
inline ::p4::v1::CounterData* DirectCounterEntry::release_data() {
  // @@protoc_insertion_point(field_release:p4.v1.DirectCounterEntry.data)
  
  ::p4::v1::CounterData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void DirectCounterEntry::set_allocated_data(::p4::v1::CounterData* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.DirectCounterEntry.data)
}

// -------------------------------------------------------------------

// CounterData

// int64 byte_count = 1;
inline void CounterData::clear_byte_count() {
  byte_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CounterData::byte_count() const {
  // @@protoc_insertion_point(field_get:p4.v1.CounterData.byte_count)
  return byte_count_;
}
inline void CounterData::set_byte_count(::google::protobuf::int64 value) {
  
  byte_count_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.CounterData.byte_count)
}

// int64 packet_count = 2;
inline void CounterData::clear_packet_count() {
  packet_count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CounterData::packet_count() const {
  // @@protoc_insertion_point(field_get:p4.v1.CounterData.packet_count)
  return packet_count_;
}
inline void CounterData::set_packet_count(::google::protobuf::int64 value) {
  
  packet_count_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.CounterData.packet_count)
}

// -------------------------------------------------------------------

// PacketReplicationEngineEntry

// .p4.v1.MulticastGroupEntry multicast_group_entry = 1;
inline bool PacketReplicationEngineEntry::has_multicast_group_entry() const {
  return type_case() == kMulticastGroupEntry;
}
inline void PacketReplicationEngineEntry::set_has_multicast_group_entry() {
  _oneof_case_[0] = kMulticastGroupEntry;
}
inline void PacketReplicationEngineEntry::clear_multicast_group_entry() {
  if (has_multicast_group_entry()) {
    delete type_.multicast_group_entry_;
    clear_has_type();
  }
}
inline  const ::p4::v1::MulticastGroupEntry& PacketReplicationEngineEntry::multicast_group_entry() const {
  // @@protoc_insertion_point(field_get:p4.v1.PacketReplicationEngineEntry.multicast_group_entry)
  return has_multicast_group_entry()
      ? *type_.multicast_group_entry_
      : ::p4::v1::MulticastGroupEntry::default_instance();
}
inline ::p4::v1::MulticastGroupEntry* PacketReplicationEngineEntry::mutable_multicast_group_entry() {
  if (!has_multicast_group_entry()) {
    clear_type();
    set_has_multicast_group_entry();
    type_.multicast_group_entry_ = new ::p4::v1::MulticastGroupEntry;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.PacketReplicationEngineEntry.multicast_group_entry)
  return type_.multicast_group_entry_;
}
inline ::p4::v1::MulticastGroupEntry* PacketReplicationEngineEntry::release_multicast_group_entry() {
  // @@protoc_insertion_point(field_release:p4.v1.PacketReplicationEngineEntry.multicast_group_entry)
  if (has_multicast_group_entry()) {
    clear_has_type();
    ::p4::v1::MulticastGroupEntry* temp = type_.multicast_group_entry_;
    type_.multicast_group_entry_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PacketReplicationEngineEntry::set_allocated_multicast_group_entry(::p4::v1::MulticastGroupEntry* multicast_group_entry) {
  clear_type();
  if (multicast_group_entry) {
    set_has_multicast_group_entry();
    type_.multicast_group_entry_ = multicast_group_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.PacketReplicationEngineEntry.multicast_group_entry)
}

// .p4.v1.CloneSessionEntry clone_session_entry = 2;
inline bool PacketReplicationEngineEntry::has_clone_session_entry() const {
  return type_case() == kCloneSessionEntry;
}
inline void PacketReplicationEngineEntry::set_has_clone_session_entry() {
  _oneof_case_[0] = kCloneSessionEntry;
}
inline void PacketReplicationEngineEntry::clear_clone_session_entry() {
  if (has_clone_session_entry()) {
    delete type_.clone_session_entry_;
    clear_has_type();
  }
}
inline  const ::p4::v1::CloneSessionEntry& PacketReplicationEngineEntry::clone_session_entry() const {
  // @@protoc_insertion_point(field_get:p4.v1.PacketReplicationEngineEntry.clone_session_entry)
  return has_clone_session_entry()
      ? *type_.clone_session_entry_
      : ::p4::v1::CloneSessionEntry::default_instance();
}
inline ::p4::v1::CloneSessionEntry* PacketReplicationEngineEntry::mutable_clone_session_entry() {
  if (!has_clone_session_entry()) {
    clear_type();
    set_has_clone_session_entry();
    type_.clone_session_entry_ = new ::p4::v1::CloneSessionEntry;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.PacketReplicationEngineEntry.clone_session_entry)
  return type_.clone_session_entry_;
}
inline ::p4::v1::CloneSessionEntry* PacketReplicationEngineEntry::release_clone_session_entry() {
  // @@protoc_insertion_point(field_release:p4.v1.PacketReplicationEngineEntry.clone_session_entry)
  if (has_clone_session_entry()) {
    clear_has_type();
    ::p4::v1::CloneSessionEntry* temp = type_.clone_session_entry_;
    type_.clone_session_entry_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void PacketReplicationEngineEntry::set_allocated_clone_session_entry(::p4::v1::CloneSessionEntry* clone_session_entry) {
  clear_type();
  if (clone_session_entry) {
    set_has_clone_session_entry();
    type_.clone_session_entry_ = clone_session_entry;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.PacketReplicationEngineEntry.clone_session_entry)
}

inline bool PacketReplicationEngineEntry::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void PacketReplicationEngineEntry::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
inline PacketReplicationEngineEntry::TypeCase PacketReplicationEngineEntry::type_case() const {
  return PacketReplicationEngineEntry::TypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Replica

// uint32 egress_port = 1;
inline void Replica::clear_egress_port() {
  egress_port_ = 0u;
}
inline ::google::protobuf::uint32 Replica::egress_port() const {
  // @@protoc_insertion_point(field_get:p4.v1.Replica.egress_port)
  return egress_port_;
}
inline void Replica::set_egress_port(::google::protobuf::uint32 value) {
  
  egress_port_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.Replica.egress_port)
}

// uint32 instance = 2;
inline void Replica::clear_instance() {
  instance_ = 0u;
}
inline ::google::protobuf::uint32 Replica::instance() const {
  // @@protoc_insertion_point(field_get:p4.v1.Replica.instance)
  return instance_;
}
inline void Replica::set_instance(::google::protobuf::uint32 value) {
  
  instance_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.Replica.instance)
}

// -------------------------------------------------------------------

// MulticastGroupEntry

// uint32 multicast_group_id = 1;
inline void MulticastGroupEntry::clear_multicast_group_id() {
  multicast_group_id_ = 0u;
}
inline ::google::protobuf::uint32 MulticastGroupEntry::multicast_group_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.MulticastGroupEntry.multicast_group_id)
  return multicast_group_id_;
}
inline void MulticastGroupEntry::set_multicast_group_id(::google::protobuf::uint32 value) {
  
  multicast_group_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.MulticastGroupEntry.multicast_group_id)
}

// repeated .p4.v1.Replica replicas = 2;
inline int MulticastGroupEntry::replicas_size() const {
  return replicas_.size();
}
inline void MulticastGroupEntry::clear_replicas() {
  replicas_.Clear();
}
inline const ::p4::v1::Replica& MulticastGroupEntry::replicas(int index) const {
  // @@protoc_insertion_point(field_get:p4.v1.MulticastGroupEntry.replicas)
  return replicas_.Get(index);
}
inline ::p4::v1::Replica* MulticastGroupEntry::mutable_replicas(int index) {
  // @@protoc_insertion_point(field_mutable:p4.v1.MulticastGroupEntry.replicas)
  return replicas_.Mutable(index);
}
inline ::p4::v1::Replica* MulticastGroupEntry::add_replicas() {
  // @@protoc_insertion_point(field_add:p4.v1.MulticastGroupEntry.replicas)
  return replicas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::v1::Replica >*
MulticastGroupEntry::mutable_replicas() {
  // @@protoc_insertion_point(field_mutable_list:p4.v1.MulticastGroupEntry.replicas)
  return &replicas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::v1::Replica >&
MulticastGroupEntry::replicas() const {
  // @@protoc_insertion_point(field_list:p4.v1.MulticastGroupEntry.replicas)
  return replicas_;
}

// -------------------------------------------------------------------

// CloneSessionEntry

// uint32 session_id = 1;
inline void CloneSessionEntry::clear_session_id() {
  session_id_ = 0u;
}
inline ::google::protobuf::uint32 CloneSessionEntry::session_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.CloneSessionEntry.session_id)
  return session_id_;
}
inline void CloneSessionEntry::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.CloneSessionEntry.session_id)
}

// repeated .p4.v1.Replica replicas = 2;
inline int CloneSessionEntry::replicas_size() const {
  return replicas_.size();
}
inline void CloneSessionEntry::clear_replicas() {
  replicas_.Clear();
}
inline const ::p4::v1::Replica& CloneSessionEntry::replicas(int index) const {
  // @@protoc_insertion_point(field_get:p4.v1.CloneSessionEntry.replicas)
  return replicas_.Get(index);
}
inline ::p4::v1::Replica* CloneSessionEntry::mutable_replicas(int index) {
  // @@protoc_insertion_point(field_mutable:p4.v1.CloneSessionEntry.replicas)
  return replicas_.Mutable(index);
}
inline ::p4::v1::Replica* CloneSessionEntry::add_replicas() {
  // @@protoc_insertion_point(field_add:p4.v1.CloneSessionEntry.replicas)
  return replicas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::v1::Replica >*
CloneSessionEntry::mutable_replicas() {
  // @@protoc_insertion_point(field_mutable_list:p4.v1.CloneSessionEntry.replicas)
  return &replicas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::v1::Replica >&
CloneSessionEntry::replicas() const {
  // @@protoc_insertion_point(field_list:p4.v1.CloneSessionEntry.replicas)
  return replicas_;
}

// uint32 class_of_service = 3;
inline void CloneSessionEntry::clear_class_of_service() {
  class_of_service_ = 0u;
}
inline ::google::protobuf::uint32 CloneSessionEntry::class_of_service() const {
  // @@protoc_insertion_point(field_get:p4.v1.CloneSessionEntry.class_of_service)
  return class_of_service_;
}
inline void CloneSessionEntry::set_class_of_service(::google::protobuf::uint32 value) {
  
  class_of_service_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.CloneSessionEntry.class_of_service)
}

// int32 packet_length_bytes = 4;
inline void CloneSessionEntry::clear_packet_length_bytes() {
  packet_length_bytes_ = 0;
}
inline ::google::protobuf::int32 CloneSessionEntry::packet_length_bytes() const {
  // @@protoc_insertion_point(field_get:p4.v1.CloneSessionEntry.packet_length_bytes)
  return packet_length_bytes_;
}
inline void CloneSessionEntry::set_packet_length_bytes(::google::protobuf::int32 value) {
  
  packet_length_bytes_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.CloneSessionEntry.packet_length_bytes)
}

// -------------------------------------------------------------------

// ValueSetMember

// repeated .p4.v1.FieldMatch match = 1;
inline int ValueSetMember::match_size() const {
  return match_.size();
}
inline void ValueSetMember::clear_match() {
  match_.Clear();
}
inline const ::p4::v1::FieldMatch& ValueSetMember::match(int index) const {
  // @@protoc_insertion_point(field_get:p4.v1.ValueSetMember.match)
  return match_.Get(index);
}
inline ::p4::v1::FieldMatch* ValueSetMember::mutable_match(int index) {
  // @@protoc_insertion_point(field_mutable:p4.v1.ValueSetMember.match)
  return match_.Mutable(index);
}
inline ::p4::v1::FieldMatch* ValueSetMember::add_match() {
  // @@protoc_insertion_point(field_add:p4.v1.ValueSetMember.match)
  return match_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::v1::FieldMatch >*
ValueSetMember::mutable_match() {
  // @@protoc_insertion_point(field_mutable_list:p4.v1.ValueSetMember.match)
  return &match_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::v1::FieldMatch >&
ValueSetMember::match() const {
  // @@protoc_insertion_point(field_list:p4.v1.ValueSetMember.match)
  return match_;
}

// -------------------------------------------------------------------

// ValueSetEntry

// uint32 value_set_id = 1;
inline void ValueSetEntry::clear_value_set_id() {
  value_set_id_ = 0u;
}
inline ::google::protobuf::uint32 ValueSetEntry::value_set_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.ValueSetEntry.value_set_id)
  return value_set_id_;
}
inline void ValueSetEntry::set_value_set_id(::google::protobuf::uint32 value) {
  
  value_set_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.ValueSetEntry.value_set_id)
}

// repeated .p4.v1.ValueSetMember members = 2;
inline int ValueSetEntry::members_size() const {
  return members_.size();
}
inline void ValueSetEntry::clear_members() {
  members_.Clear();
}
inline const ::p4::v1::ValueSetMember& ValueSetEntry::members(int index) const {
  // @@protoc_insertion_point(field_get:p4.v1.ValueSetEntry.members)
  return members_.Get(index);
}
inline ::p4::v1::ValueSetMember* ValueSetEntry::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:p4.v1.ValueSetEntry.members)
  return members_.Mutable(index);
}
inline ::p4::v1::ValueSetMember* ValueSetEntry::add_members() {
  // @@protoc_insertion_point(field_add:p4.v1.ValueSetEntry.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::v1::ValueSetMember >*
ValueSetEntry::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:p4.v1.ValueSetEntry.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::v1::ValueSetMember >&
ValueSetEntry::members() const {
  // @@protoc_insertion_point(field_list:p4.v1.ValueSetEntry.members)
  return members_;
}

// -------------------------------------------------------------------

// RegisterEntry

// uint32 register_id = 1;
inline void RegisterEntry::clear_register_id() {
  register_id_ = 0u;
}
inline ::google::protobuf::uint32 RegisterEntry::register_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.RegisterEntry.register_id)
  return register_id_;
}
inline void RegisterEntry::set_register_id(::google::protobuf::uint32 value) {
  
  register_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.RegisterEntry.register_id)
}

// .p4.v1.Index index = 2;
inline bool RegisterEntry::has_index() const {
  return this != internal_default_instance() && index_ != NULL;
}
inline void RegisterEntry::clear_index() {
  if (GetArenaNoVirtual() == NULL && index_ != NULL) delete index_;
  index_ = NULL;
}
inline const ::p4::v1::Index& RegisterEntry::index() const {
  // @@protoc_insertion_point(field_get:p4.v1.RegisterEntry.index)
  return index_ != NULL ? *index_
                         : *::p4::v1::Index::internal_default_instance();
}
inline ::p4::v1::Index* RegisterEntry::mutable_index() {
  
  if (index_ == NULL) {
    index_ = new ::p4::v1::Index;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.RegisterEntry.index)
  return index_;
}
inline ::p4::v1::Index* RegisterEntry::release_index() {
  // @@protoc_insertion_point(field_release:p4.v1.RegisterEntry.index)
  
  ::p4::v1::Index* temp = index_;
  index_ = NULL;
  return temp;
}
inline void RegisterEntry::set_allocated_index(::p4::v1::Index* index) {
  delete index_;
  index_ = index;
  if (index) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.RegisterEntry.index)
}

// .p4.v1.P4Data data = 3;
inline bool RegisterEntry::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void RegisterEntry::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::p4::v1::P4Data& RegisterEntry::data() const {
  // @@protoc_insertion_point(field_get:p4.v1.RegisterEntry.data)
  return data_ != NULL ? *data_
                         : *::p4::v1::P4Data::internal_default_instance();
}
inline ::p4::v1::P4Data* RegisterEntry::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::p4::v1::P4Data;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.RegisterEntry.data)
  return data_;
}
inline ::p4::v1::P4Data* RegisterEntry::release_data() {
  // @@protoc_insertion_point(field_release:p4.v1.RegisterEntry.data)
  
  ::p4::v1::P4Data* temp = data_;
  data_ = NULL;
  return temp;
}
inline void RegisterEntry::set_allocated_data(::p4::v1::P4Data* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.RegisterEntry.data)
}

// -------------------------------------------------------------------

// DigestEntry_Config

// int64 max_timeout_ns = 1;
inline void DigestEntry_Config::clear_max_timeout_ns() {
  max_timeout_ns_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DigestEntry_Config::max_timeout_ns() const {
  // @@protoc_insertion_point(field_get:p4.v1.DigestEntry.Config.max_timeout_ns)
  return max_timeout_ns_;
}
inline void DigestEntry_Config::set_max_timeout_ns(::google::protobuf::int64 value) {
  
  max_timeout_ns_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.DigestEntry.Config.max_timeout_ns)
}

// int32 max_list_size = 2;
inline void DigestEntry_Config::clear_max_list_size() {
  max_list_size_ = 0;
}
inline ::google::protobuf::int32 DigestEntry_Config::max_list_size() const {
  // @@protoc_insertion_point(field_get:p4.v1.DigestEntry.Config.max_list_size)
  return max_list_size_;
}
inline void DigestEntry_Config::set_max_list_size(::google::protobuf::int32 value) {
  
  max_list_size_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.DigestEntry.Config.max_list_size)
}

// int64 ack_timeout_ns = 3;
inline void DigestEntry_Config::clear_ack_timeout_ns() {
  ack_timeout_ns_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DigestEntry_Config::ack_timeout_ns() const {
  // @@protoc_insertion_point(field_get:p4.v1.DigestEntry.Config.ack_timeout_ns)
  return ack_timeout_ns_;
}
inline void DigestEntry_Config::set_ack_timeout_ns(::google::protobuf::int64 value) {
  
  ack_timeout_ns_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.DigestEntry.Config.ack_timeout_ns)
}

// -------------------------------------------------------------------

// DigestEntry

// uint32 digest_id = 1;
inline void DigestEntry::clear_digest_id() {
  digest_id_ = 0u;
}
inline ::google::protobuf::uint32 DigestEntry::digest_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.DigestEntry.digest_id)
  return digest_id_;
}
inline void DigestEntry::set_digest_id(::google::protobuf::uint32 value) {
  
  digest_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.DigestEntry.digest_id)
}

// .p4.v1.DigestEntry.Config config = 2;
inline bool DigestEntry::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void DigestEntry::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) delete config_;
  config_ = NULL;
}
inline const ::p4::v1::DigestEntry_Config& DigestEntry::config() const {
  // @@protoc_insertion_point(field_get:p4.v1.DigestEntry.config)
  return config_ != NULL ? *config_
                         : *::p4::v1::DigestEntry_Config::internal_default_instance();
}
inline ::p4::v1::DigestEntry_Config* DigestEntry::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::p4::v1::DigestEntry_Config;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.DigestEntry.config)
  return config_;
}
inline ::p4::v1::DigestEntry_Config* DigestEntry::release_config() {
  // @@protoc_insertion_point(field_release:p4.v1.DigestEntry.config)
  
  ::p4::v1::DigestEntry_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline void DigestEntry::set_allocated_config(::p4::v1::DigestEntry_Config* config) {
  delete config_;
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.DigestEntry.config)
}

// -------------------------------------------------------------------

// StreamMessageRequest

// .p4.v1.MasterArbitrationUpdate arbitration = 1;
inline bool StreamMessageRequest::has_arbitration() const {
  return update_case() == kArbitration;
}
inline void StreamMessageRequest::set_has_arbitration() {
  _oneof_case_[0] = kArbitration;
}
inline void StreamMessageRequest::clear_arbitration() {
  if (has_arbitration()) {
    delete update_.arbitration_;
    clear_has_update();
  }
}
inline  const ::p4::v1::MasterArbitrationUpdate& StreamMessageRequest::arbitration() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamMessageRequest.arbitration)
  return has_arbitration()
      ? *update_.arbitration_
      : ::p4::v1::MasterArbitrationUpdate::default_instance();
}
inline ::p4::v1::MasterArbitrationUpdate* StreamMessageRequest::mutable_arbitration() {
  if (!has_arbitration()) {
    clear_update();
    set_has_arbitration();
    update_.arbitration_ = new ::p4::v1::MasterArbitrationUpdate;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.StreamMessageRequest.arbitration)
  return update_.arbitration_;
}
inline ::p4::v1::MasterArbitrationUpdate* StreamMessageRequest::release_arbitration() {
  // @@protoc_insertion_point(field_release:p4.v1.StreamMessageRequest.arbitration)
  if (has_arbitration()) {
    clear_has_update();
    ::p4::v1::MasterArbitrationUpdate* temp = update_.arbitration_;
    update_.arbitration_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void StreamMessageRequest::set_allocated_arbitration(::p4::v1::MasterArbitrationUpdate* arbitration) {
  clear_update();
  if (arbitration) {
    set_has_arbitration();
    update_.arbitration_ = arbitration;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageRequest.arbitration)
}

// .p4.v1.PacketOut packet = 2;
inline bool StreamMessageRequest::has_packet() const {
  return update_case() == kPacket;
}
inline void StreamMessageRequest::set_has_packet() {
  _oneof_case_[0] = kPacket;
}
inline void StreamMessageRequest::clear_packet() {
  if (has_packet()) {
    delete update_.packet_;
    clear_has_update();
  }
}
inline  const ::p4::v1::PacketOut& StreamMessageRequest::packet() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamMessageRequest.packet)
  return has_packet()
      ? *update_.packet_
      : ::p4::v1::PacketOut::default_instance();
}
inline ::p4::v1::PacketOut* StreamMessageRequest::mutable_packet() {
  if (!has_packet()) {
    clear_update();
    set_has_packet();
    update_.packet_ = new ::p4::v1::PacketOut;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.StreamMessageRequest.packet)
  return update_.packet_;
}
inline ::p4::v1::PacketOut* StreamMessageRequest::release_packet() {
  // @@protoc_insertion_point(field_release:p4.v1.StreamMessageRequest.packet)
  if (has_packet()) {
    clear_has_update();
    ::p4::v1::PacketOut* temp = update_.packet_;
    update_.packet_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void StreamMessageRequest::set_allocated_packet(::p4::v1::PacketOut* packet) {
  clear_update();
  if (packet) {
    set_has_packet();
    update_.packet_ = packet;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageRequest.packet)
}

// .p4.v1.DigestListAck digest_ack = 3;
inline bool StreamMessageRequest::has_digest_ack() const {
  return update_case() == kDigestAck;
}
inline void StreamMessageRequest::set_has_digest_ack() {
  _oneof_case_[0] = kDigestAck;
}
inline void StreamMessageRequest::clear_digest_ack() {
  if (has_digest_ack()) {
    delete update_.digest_ack_;
    clear_has_update();
  }
}
inline  const ::p4::v1::DigestListAck& StreamMessageRequest::digest_ack() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamMessageRequest.digest_ack)
  return has_digest_ack()
      ? *update_.digest_ack_
      : ::p4::v1::DigestListAck::default_instance();
}
inline ::p4::v1::DigestListAck* StreamMessageRequest::mutable_digest_ack() {
  if (!has_digest_ack()) {
    clear_update();
    set_has_digest_ack();
    update_.digest_ack_ = new ::p4::v1::DigestListAck;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.StreamMessageRequest.digest_ack)
  return update_.digest_ack_;
}
inline ::p4::v1::DigestListAck* StreamMessageRequest::release_digest_ack() {
  // @@protoc_insertion_point(field_release:p4.v1.StreamMessageRequest.digest_ack)
  if (has_digest_ack()) {
    clear_has_update();
    ::p4::v1::DigestListAck* temp = update_.digest_ack_;
    update_.digest_ack_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void StreamMessageRequest::set_allocated_digest_ack(::p4::v1::DigestListAck* digest_ack) {
  clear_update();
  if (digest_ack) {
    set_has_digest_ack();
    update_.digest_ack_ = digest_ack;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageRequest.digest_ack)
}

// .google.protobuf.Any other = 4;
inline bool StreamMessageRequest::has_other() const {
  return update_case() == kOther;
}
inline void StreamMessageRequest::set_has_other() {
  _oneof_case_[0] = kOther;
}
inline void StreamMessageRequest::clear_other() {
  if (has_other()) {
    delete update_.other_;
    clear_has_update();
  }
}
inline  const ::google::protobuf::Any& StreamMessageRequest::other() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamMessageRequest.other)
  return has_other()
      ? *update_.other_
      : ::google::protobuf::Any::default_instance();
}
inline ::google::protobuf::Any* StreamMessageRequest::mutable_other() {
  if (!has_other()) {
    clear_update();
    set_has_other();
    update_.other_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.StreamMessageRequest.other)
  return update_.other_;
}
inline ::google::protobuf::Any* StreamMessageRequest::release_other() {
  // @@protoc_insertion_point(field_release:p4.v1.StreamMessageRequest.other)
  if (has_other()) {
    clear_has_update();
    ::google::protobuf::Any* temp = update_.other_;
    update_.other_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void StreamMessageRequest::set_allocated_other(::google::protobuf::Any* other) {
  clear_update();
  if (other) {
    set_has_other();
    update_.other_ = other;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageRequest.other)
}

inline bool StreamMessageRequest::has_update() const {
  return update_case() != UPDATE_NOT_SET;
}
inline void StreamMessageRequest::clear_has_update() {
  _oneof_case_[0] = UPDATE_NOT_SET;
}
inline StreamMessageRequest::UpdateCase StreamMessageRequest::update_case() const {
  return StreamMessageRequest::UpdateCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PacketOut

// bytes payload = 1;
inline void PacketOut::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PacketOut::payload() const {
  // @@protoc_insertion_point(field_get:p4.v1.PacketOut.payload)
  return payload_.GetNoArena();
}
inline void PacketOut::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.PacketOut.payload)
}
#if LANG_CXX11
inline void PacketOut::set_payload(::std::string&& value) {
  
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.PacketOut.payload)
}
#endif
inline void PacketOut::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.PacketOut.payload)
}
inline void PacketOut::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.PacketOut.payload)
}
inline ::std::string* PacketOut::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.PacketOut.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketOut::release_payload() {
  // @@protoc_insertion_point(field_release:p4.v1.PacketOut.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketOut::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.PacketOut.payload)
}

// repeated .p4.v1.PacketMetadata metadata = 2;
inline int PacketOut::metadata_size() const {
  return metadata_.size();
}
inline void PacketOut::clear_metadata() {
  metadata_.Clear();
}
inline const ::p4::v1::PacketMetadata& PacketOut::metadata(int index) const {
  // @@protoc_insertion_point(field_get:p4.v1.PacketOut.metadata)
  return metadata_.Get(index);
}
inline ::p4::v1::PacketMetadata* PacketOut::mutable_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:p4.v1.PacketOut.metadata)
  return metadata_.Mutable(index);
}
inline ::p4::v1::PacketMetadata* PacketOut::add_metadata() {
  // @@protoc_insertion_point(field_add:p4.v1.PacketOut.metadata)
  return metadata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::v1::PacketMetadata >*
PacketOut::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_list:p4.v1.PacketOut.metadata)
  return &metadata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::v1::PacketMetadata >&
PacketOut::metadata() const {
  // @@protoc_insertion_point(field_list:p4.v1.PacketOut.metadata)
  return metadata_;
}

// -------------------------------------------------------------------

// DigestListAck

// uint32 digest_id = 1;
inline void DigestListAck::clear_digest_id() {
  digest_id_ = 0u;
}
inline ::google::protobuf::uint32 DigestListAck::digest_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.DigestListAck.digest_id)
  return digest_id_;
}
inline void DigestListAck::set_digest_id(::google::protobuf::uint32 value) {
  
  digest_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.DigestListAck.digest_id)
}

// uint64 list_id = 2;
inline void DigestListAck::clear_list_id() {
  list_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DigestListAck::list_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.DigestListAck.list_id)
  return list_id_;
}
inline void DigestListAck::set_list_id(::google::protobuf::uint64 value) {
  
  list_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.DigestListAck.list_id)
}

// -------------------------------------------------------------------

// StreamMessageResponse

// .p4.v1.MasterArbitrationUpdate arbitration = 1;
inline bool StreamMessageResponse::has_arbitration() const {
  return update_case() == kArbitration;
}
inline void StreamMessageResponse::set_has_arbitration() {
  _oneof_case_[0] = kArbitration;
}
inline void StreamMessageResponse::clear_arbitration() {
  if (has_arbitration()) {
    delete update_.arbitration_;
    clear_has_update();
  }
}
inline  const ::p4::v1::MasterArbitrationUpdate& StreamMessageResponse::arbitration() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamMessageResponse.arbitration)
  return has_arbitration()
      ? *update_.arbitration_
      : ::p4::v1::MasterArbitrationUpdate::default_instance();
}
inline ::p4::v1::MasterArbitrationUpdate* StreamMessageResponse::mutable_arbitration() {
  if (!has_arbitration()) {
    clear_update();
    set_has_arbitration();
    update_.arbitration_ = new ::p4::v1::MasterArbitrationUpdate;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.StreamMessageResponse.arbitration)
  return update_.arbitration_;
}
inline ::p4::v1::MasterArbitrationUpdate* StreamMessageResponse::release_arbitration() {
  // @@protoc_insertion_point(field_release:p4.v1.StreamMessageResponse.arbitration)
  if (has_arbitration()) {
    clear_has_update();
    ::p4::v1::MasterArbitrationUpdate* temp = update_.arbitration_;
    update_.arbitration_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void StreamMessageResponse::set_allocated_arbitration(::p4::v1::MasterArbitrationUpdate* arbitration) {
  clear_update();
  if (arbitration) {
    set_has_arbitration();
    update_.arbitration_ = arbitration;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageResponse.arbitration)
}

// .p4.v1.PacketIn packet = 2;
inline bool StreamMessageResponse::has_packet() const {
  return update_case() == kPacket;
}
inline void StreamMessageResponse::set_has_packet() {
  _oneof_case_[0] = kPacket;
}
inline void StreamMessageResponse::clear_packet() {
  if (has_packet()) {
    delete update_.packet_;
    clear_has_update();
  }
}
inline  const ::p4::v1::PacketIn& StreamMessageResponse::packet() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamMessageResponse.packet)
  return has_packet()
      ? *update_.packet_
      : ::p4::v1::PacketIn::default_instance();
}
inline ::p4::v1::PacketIn* StreamMessageResponse::mutable_packet() {
  if (!has_packet()) {
    clear_update();
    set_has_packet();
    update_.packet_ = new ::p4::v1::PacketIn;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.StreamMessageResponse.packet)
  return update_.packet_;
}
inline ::p4::v1::PacketIn* StreamMessageResponse::release_packet() {
  // @@protoc_insertion_point(field_release:p4.v1.StreamMessageResponse.packet)
  if (has_packet()) {
    clear_has_update();
    ::p4::v1::PacketIn* temp = update_.packet_;
    update_.packet_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void StreamMessageResponse::set_allocated_packet(::p4::v1::PacketIn* packet) {
  clear_update();
  if (packet) {
    set_has_packet();
    update_.packet_ = packet;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageResponse.packet)
}

// .p4.v1.DigestList digest = 3;
inline bool StreamMessageResponse::has_digest() const {
  return update_case() == kDigest;
}
inline void StreamMessageResponse::set_has_digest() {
  _oneof_case_[0] = kDigest;
}
inline void StreamMessageResponse::clear_digest() {
  if (has_digest()) {
    delete update_.digest_;
    clear_has_update();
  }
}
inline  const ::p4::v1::DigestList& StreamMessageResponse::digest() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamMessageResponse.digest)
  return has_digest()
      ? *update_.digest_
      : ::p4::v1::DigestList::default_instance();
}
inline ::p4::v1::DigestList* StreamMessageResponse::mutable_digest() {
  if (!has_digest()) {
    clear_update();
    set_has_digest();
    update_.digest_ = new ::p4::v1::DigestList;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.StreamMessageResponse.digest)
  return update_.digest_;
}
inline ::p4::v1::DigestList* StreamMessageResponse::release_digest() {
  // @@protoc_insertion_point(field_release:p4.v1.StreamMessageResponse.digest)
  if (has_digest()) {
    clear_has_update();
    ::p4::v1::DigestList* temp = update_.digest_;
    update_.digest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void StreamMessageResponse::set_allocated_digest(::p4::v1::DigestList* digest) {
  clear_update();
  if (digest) {
    set_has_digest();
    update_.digest_ = digest;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageResponse.digest)
}

// .p4.v1.IdleTimeoutNotification idle_timeout_notification = 4;
inline bool StreamMessageResponse::has_idle_timeout_notification() const {
  return update_case() == kIdleTimeoutNotification;
}
inline void StreamMessageResponse::set_has_idle_timeout_notification() {
  _oneof_case_[0] = kIdleTimeoutNotification;
}
inline void StreamMessageResponse::clear_idle_timeout_notification() {
  if (has_idle_timeout_notification()) {
    delete update_.idle_timeout_notification_;
    clear_has_update();
  }
}
inline  const ::p4::v1::IdleTimeoutNotification& StreamMessageResponse::idle_timeout_notification() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamMessageResponse.idle_timeout_notification)
  return has_idle_timeout_notification()
      ? *update_.idle_timeout_notification_
      : ::p4::v1::IdleTimeoutNotification::default_instance();
}
inline ::p4::v1::IdleTimeoutNotification* StreamMessageResponse::mutable_idle_timeout_notification() {
  if (!has_idle_timeout_notification()) {
    clear_update();
    set_has_idle_timeout_notification();
    update_.idle_timeout_notification_ = new ::p4::v1::IdleTimeoutNotification;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.StreamMessageResponse.idle_timeout_notification)
  return update_.idle_timeout_notification_;
}
inline ::p4::v1::IdleTimeoutNotification* StreamMessageResponse::release_idle_timeout_notification() {
  // @@protoc_insertion_point(field_release:p4.v1.StreamMessageResponse.idle_timeout_notification)
  if (has_idle_timeout_notification()) {
    clear_has_update();
    ::p4::v1::IdleTimeoutNotification* temp = update_.idle_timeout_notification_;
    update_.idle_timeout_notification_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void StreamMessageResponse::set_allocated_idle_timeout_notification(::p4::v1::IdleTimeoutNotification* idle_timeout_notification) {
  clear_update();
  if (idle_timeout_notification) {
    set_has_idle_timeout_notification();
    update_.idle_timeout_notification_ = idle_timeout_notification;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageResponse.idle_timeout_notification)
}

// .google.protobuf.Any other = 5;
inline bool StreamMessageResponse::has_other() const {
  return update_case() == kOther;
}
inline void StreamMessageResponse::set_has_other() {
  _oneof_case_[0] = kOther;
}
inline void StreamMessageResponse::clear_other() {
  if (has_other()) {
    delete update_.other_;
    clear_has_update();
  }
}
inline  const ::google::protobuf::Any& StreamMessageResponse::other() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamMessageResponse.other)
  return has_other()
      ? *update_.other_
      : ::google::protobuf::Any::default_instance();
}
inline ::google::protobuf::Any* StreamMessageResponse::mutable_other() {
  if (!has_other()) {
    clear_update();
    set_has_other();
    update_.other_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.StreamMessageResponse.other)
  return update_.other_;
}
inline ::google::protobuf::Any* StreamMessageResponse::release_other() {
  // @@protoc_insertion_point(field_release:p4.v1.StreamMessageResponse.other)
  if (has_other()) {
    clear_has_update();
    ::google::protobuf::Any* temp = update_.other_;
    update_.other_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void StreamMessageResponse::set_allocated_other(::google::protobuf::Any* other) {
  clear_update();
  if (other) {
    set_has_other();
    update_.other_ = other;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageResponse.other)
}

// .p4.v1.StreamError error = 6;
inline bool StreamMessageResponse::has_error() const {
  return update_case() == kError;
}
inline void StreamMessageResponse::set_has_error() {
  _oneof_case_[0] = kError;
}
inline void StreamMessageResponse::clear_error() {
  if (has_error()) {
    delete update_.error_;
    clear_has_update();
  }
}
inline  const ::p4::v1::StreamError& StreamMessageResponse::error() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamMessageResponse.error)
  return has_error()
      ? *update_.error_
      : ::p4::v1::StreamError::default_instance();
}
inline ::p4::v1::StreamError* StreamMessageResponse::mutable_error() {
  if (!has_error()) {
    clear_update();
    set_has_error();
    update_.error_ = new ::p4::v1::StreamError;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.StreamMessageResponse.error)
  return update_.error_;
}
inline ::p4::v1::StreamError* StreamMessageResponse::release_error() {
  // @@protoc_insertion_point(field_release:p4.v1.StreamMessageResponse.error)
  if (has_error()) {
    clear_has_update();
    ::p4::v1::StreamError* temp = update_.error_;
    update_.error_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void StreamMessageResponse::set_allocated_error(::p4::v1::StreamError* error) {
  clear_update();
  if (error) {
    set_has_error();
    update_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamMessageResponse.error)
}

inline bool StreamMessageResponse::has_update() const {
  return update_case() != UPDATE_NOT_SET;
}
inline void StreamMessageResponse::clear_has_update() {
  _oneof_case_[0] = UPDATE_NOT_SET;
}
inline StreamMessageResponse::UpdateCase StreamMessageResponse::update_case() const {
  return StreamMessageResponse::UpdateCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PacketIn

// bytes payload = 1;
inline void PacketIn::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PacketIn::payload() const {
  // @@protoc_insertion_point(field_get:p4.v1.PacketIn.payload)
  return payload_.GetNoArena();
}
inline void PacketIn::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.PacketIn.payload)
}
#if LANG_CXX11
inline void PacketIn::set_payload(::std::string&& value) {
  
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.PacketIn.payload)
}
#endif
inline void PacketIn::set_payload(const char* value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.PacketIn.payload)
}
inline void PacketIn::set_payload(const void* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.PacketIn.payload)
}
inline ::std::string* PacketIn::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.PacketIn.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketIn::release_payload() {
  // @@protoc_insertion_point(field_release:p4.v1.PacketIn.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketIn::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.PacketIn.payload)
}

// repeated .p4.v1.PacketMetadata metadata = 2;
inline int PacketIn::metadata_size() const {
  return metadata_.size();
}
inline void PacketIn::clear_metadata() {
  metadata_.Clear();
}
inline const ::p4::v1::PacketMetadata& PacketIn::metadata(int index) const {
  // @@protoc_insertion_point(field_get:p4.v1.PacketIn.metadata)
  return metadata_.Get(index);
}
inline ::p4::v1::PacketMetadata* PacketIn::mutable_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:p4.v1.PacketIn.metadata)
  return metadata_.Mutable(index);
}
inline ::p4::v1::PacketMetadata* PacketIn::add_metadata() {
  // @@protoc_insertion_point(field_add:p4.v1.PacketIn.metadata)
  return metadata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::v1::PacketMetadata >*
PacketIn::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_list:p4.v1.PacketIn.metadata)
  return &metadata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::v1::PacketMetadata >&
PacketIn::metadata() const {
  // @@protoc_insertion_point(field_list:p4.v1.PacketIn.metadata)
  return metadata_;
}

// -------------------------------------------------------------------

// DigestList

// uint32 digest_id = 1;
inline void DigestList::clear_digest_id() {
  digest_id_ = 0u;
}
inline ::google::protobuf::uint32 DigestList::digest_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.DigestList.digest_id)
  return digest_id_;
}
inline void DigestList::set_digest_id(::google::protobuf::uint32 value) {
  
  digest_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.DigestList.digest_id)
}

// uint64 list_id = 2;
inline void DigestList::clear_list_id() {
  list_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DigestList::list_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.DigestList.list_id)
  return list_id_;
}
inline void DigestList::set_list_id(::google::protobuf::uint64 value) {
  
  list_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.DigestList.list_id)
}

// repeated .p4.v1.P4Data data = 3;
inline int DigestList::data_size() const {
  return data_.size();
}
inline void DigestList::clear_data() {
  data_.Clear();
}
inline const ::p4::v1::P4Data& DigestList::data(int index) const {
  // @@protoc_insertion_point(field_get:p4.v1.DigestList.data)
  return data_.Get(index);
}
inline ::p4::v1::P4Data* DigestList::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:p4.v1.DigestList.data)
  return data_.Mutable(index);
}
inline ::p4::v1::P4Data* DigestList::add_data() {
  // @@protoc_insertion_point(field_add:p4.v1.DigestList.data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::v1::P4Data >*
DigestList::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:p4.v1.DigestList.data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::v1::P4Data >&
DigestList::data() const {
  // @@protoc_insertion_point(field_list:p4.v1.DigestList.data)
  return data_;
}

// int64 timestamp = 4;
inline void DigestList::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DigestList::timestamp() const {
  // @@protoc_insertion_point(field_get:p4.v1.DigestList.timestamp)
  return timestamp_;
}
inline void DigestList::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.DigestList.timestamp)
}

// -------------------------------------------------------------------

// PacketMetadata

// uint32 metadata_id = 1;
inline void PacketMetadata::clear_metadata_id() {
  metadata_id_ = 0u;
}
inline ::google::protobuf::uint32 PacketMetadata::metadata_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.PacketMetadata.metadata_id)
  return metadata_id_;
}
inline void PacketMetadata::set_metadata_id(::google::protobuf::uint32 value) {
  
  metadata_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.PacketMetadata.metadata_id)
}

// bytes value = 2;
inline void PacketMetadata::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PacketMetadata::value() const {
  // @@protoc_insertion_point(field_get:p4.v1.PacketMetadata.value)
  return value_.GetNoArena();
}
inline void PacketMetadata::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.PacketMetadata.value)
}
#if LANG_CXX11
inline void PacketMetadata::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.PacketMetadata.value)
}
#endif
inline void PacketMetadata::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.PacketMetadata.value)
}
inline void PacketMetadata::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.PacketMetadata.value)
}
inline ::std::string* PacketMetadata::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.PacketMetadata.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketMetadata::release_value() {
  // @@protoc_insertion_point(field_release:p4.v1.PacketMetadata.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketMetadata::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.PacketMetadata.value)
}

// -------------------------------------------------------------------

// MasterArbitrationUpdate

// uint64 device_id = 1;
inline void MasterArbitrationUpdate::clear_device_id() {
  device_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MasterArbitrationUpdate::device_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.MasterArbitrationUpdate.device_id)
  return device_id_;
}
inline void MasterArbitrationUpdate::set_device_id(::google::protobuf::uint64 value) {
  
  device_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.MasterArbitrationUpdate.device_id)
}

// .p4.v1.Role role = 2;
inline bool MasterArbitrationUpdate::has_role() const {
  return this != internal_default_instance() && role_ != NULL;
}
inline void MasterArbitrationUpdate::clear_role() {
  if (GetArenaNoVirtual() == NULL && role_ != NULL) delete role_;
  role_ = NULL;
}
inline const ::p4::v1::Role& MasterArbitrationUpdate::role() const {
  // @@protoc_insertion_point(field_get:p4.v1.MasterArbitrationUpdate.role)
  return role_ != NULL ? *role_
                         : *::p4::v1::Role::internal_default_instance();
}
inline ::p4::v1::Role* MasterArbitrationUpdate::mutable_role() {
  
  if (role_ == NULL) {
    role_ = new ::p4::v1::Role;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.MasterArbitrationUpdate.role)
  return role_;
}
inline ::p4::v1::Role* MasterArbitrationUpdate::release_role() {
  // @@protoc_insertion_point(field_release:p4.v1.MasterArbitrationUpdate.role)
  
  ::p4::v1::Role* temp = role_;
  role_ = NULL;
  return temp;
}
inline void MasterArbitrationUpdate::set_allocated_role(::p4::v1::Role* role) {
  delete role_;
  role_ = role;
  if (role) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.MasterArbitrationUpdate.role)
}

// .p4.v1.Uint128 election_id = 3;
inline bool MasterArbitrationUpdate::has_election_id() const {
  return this != internal_default_instance() && election_id_ != NULL;
}
inline void MasterArbitrationUpdate::clear_election_id() {
  if (GetArenaNoVirtual() == NULL && election_id_ != NULL) delete election_id_;
  election_id_ = NULL;
}
inline const ::p4::v1::Uint128& MasterArbitrationUpdate::election_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.MasterArbitrationUpdate.election_id)
  return election_id_ != NULL ? *election_id_
                         : *::p4::v1::Uint128::internal_default_instance();
}
inline ::p4::v1::Uint128* MasterArbitrationUpdate::mutable_election_id() {
  
  if (election_id_ == NULL) {
    election_id_ = new ::p4::v1::Uint128;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.MasterArbitrationUpdate.election_id)
  return election_id_;
}
inline ::p4::v1::Uint128* MasterArbitrationUpdate::release_election_id() {
  // @@protoc_insertion_point(field_release:p4.v1.MasterArbitrationUpdate.election_id)
  
  ::p4::v1::Uint128* temp = election_id_;
  election_id_ = NULL;
  return temp;
}
inline void MasterArbitrationUpdate::set_allocated_election_id(::p4::v1::Uint128* election_id) {
  delete election_id_;
  election_id_ = election_id;
  if (election_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.MasterArbitrationUpdate.election_id)
}

// .google.rpc.Status status = 4;
inline bool MasterArbitrationUpdate::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline void MasterArbitrationUpdate::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) delete status_;
  status_ = NULL;
}
inline const ::google::rpc::Status& MasterArbitrationUpdate::status() const {
  // @@protoc_insertion_point(field_get:p4.v1.MasterArbitrationUpdate.status)
  return status_ != NULL ? *status_
                         : *::google::rpc::Status::internal_default_instance();
}
inline ::google::rpc::Status* MasterArbitrationUpdate::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::google::rpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.MasterArbitrationUpdate.status)
  return status_;
}
inline ::google::rpc::Status* MasterArbitrationUpdate::release_status() {
  // @@protoc_insertion_point(field_release:p4.v1.MasterArbitrationUpdate.status)
  
  ::google::rpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
inline void MasterArbitrationUpdate::set_allocated_status(::google::rpc::Status* status) {
  delete status_;
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.MasterArbitrationUpdate.status)
}

// -------------------------------------------------------------------

// Role

// uint64 id = 1;
inline void Role::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Role::id() const {
  // @@protoc_insertion_point(field_get:p4.v1.Role.id)
  return id_;
}
inline void Role::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.Role.id)
}

// .google.protobuf.Any config = 2;
inline bool Role::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Role::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) delete config_;
  config_ = NULL;
}
inline const ::google::protobuf::Any& Role::config() const {
  // @@protoc_insertion_point(field_get:p4.v1.Role.config)
  return config_ != NULL ? *config_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* Role::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.Role.config)
  return config_;
}
inline ::google::protobuf::Any* Role::release_config() {
  // @@protoc_insertion_point(field_release:p4.v1.Role.config)
  
  ::google::protobuf::Any* temp = config_;
  config_ = NULL;
  return temp;
}
inline void Role::set_allocated_config(::google::protobuf::Any* config) {
  delete config_;
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Role.config)
}

// -------------------------------------------------------------------

// IdleTimeoutNotification

// repeated .p4.v1.TableEntry table_entry = 1;
inline int IdleTimeoutNotification::table_entry_size() const {
  return table_entry_.size();
}
inline void IdleTimeoutNotification::clear_table_entry() {
  table_entry_.Clear();
}
inline const ::p4::v1::TableEntry& IdleTimeoutNotification::table_entry(int index) const {
  // @@protoc_insertion_point(field_get:p4.v1.IdleTimeoutNotification.table_entry)
  return table_entry_.Get(index);
}
inline ::p4::v1::TableEntry* IdleTimeoutNotification::mutable_table_entry(int index) {
  // @@protoc_insertion_point(field_mutable:p4.v1.IdleTimeoutNotification.table_entry)
  return table_entry_.Mutable(index);
}
inline ::p4::v1::TableEntry* IdleTimeoutNotification::add_table_entry() {
  // @@protoc_insertion_point(field_add:p4.v1.IdleTimeoutNotification.table_entry)
  return table_entry_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::v1::TableEntry >*
IdleTimeoutNotification::mutable_table_entry() {
  // @@protoc_insertion_point(field_mutable_list:p4.v1.IdleTimeoutNotification.table_entry)
  return &table_entry_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::v1::TableEntry >&
IdleTimeoutNotification::table_entry() const {
  // @@protoc_insertion_point(field_list:p4.v1.IdleTimeoutNotification.table_entry)
  return table_entry_;
}

// int64 timestamp = 2;
inline void IdleTimeoutNotification::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 IdleTimeoutNotification::timestamp() const {
  // @@protoc_insertion_point(field_get:p4.v1.IdleTimeoutNotification.timestamp)
  return timestamp_;
}
inline void IdleTimeoutNotification::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.IdleTimeoutNotification.timestamp)
}

// -------------------------------------------------------------------

// StreamError

// int32 canonical_code = 1;
inline void StreamError::clear_canonical_code() {
  canonical_code_ = 0;
}
inline ::google::protobuf::int32 StreamError::canonical_code() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamError.canonical_code)
  return canonical_code_;
}
inline void StreamError::set_canonical_code(::google::protobuf::int32 value) {
  
  canonical_code_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.StreamError.canonical_code)
}

// string message = 2;
inline void StreamError::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StreamError::message() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamError.message)
  return message_.GetNoArena();
}
inline void StreamError::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.StreamError.message)
}
#if LANG_CXX11
inline void StreamError::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.StreamError.message)
}
#endif
inline void StreamError::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.StreamError.message)
}
inline void StreamError::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.StreamError.message)
}
inline ::std::string* StreamError::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.StreamError.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StreamError::release_message() {
  // @@protoc_insertion_point(field_release:p4.v1.StreamError.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StreamError::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamError.message)
}

// string space = 3;
inline void StreamError::clear_space() {
  space_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StreamError::space() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamError.space)
  return space_.GetNoArena();
}
inline void StreamError::set_space(const ::std::string& value) {
  
  space_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.StreamError.space)
}
#if LANG_CXX11
inline void StreamError::set_space(::std::string&& value) {
  
  space_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.StreamError.space)
}
#endif
inline void StreamError::set_space(const char* value) {
  
  space_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.StreamError.space)
}
inline void StreamError::set_space(const char* value, size_t size) {
  
  space_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.StreamError.space)
}
inline ::std::string* StreamError::mutable_space() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.StreamError.space)
  return space_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StreamError::release_space() {
  // @@protoc_insertion_point(field_release:p4.v1.StreamError.space)
  
  return space_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StreamError::set_allocated_space(::std::string* space) {
  if (space != NULL) {
    
  } else {
    
  }
  space_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), space);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamError.space)
}

// int32 code = 4;
inline void StreamError::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 StreamError::code() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamError.code)
  return code_;
}
inline void StreamError::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.StreamError.code)
}

// .p4.v1.PacketOutError packet_out = 5;
inline bool StreamError::has_packet_out() const {
  return details_case() == kPacketOut;
}
inline void StreamError::set_has_packet_out() {
  _oneof_case_[0] = kPacketOut;
}
inline void StreamError::clear_packet_out() {
  if (has_packet_out()) {
    delete details_.packet_out_;
    clear_has_details();
  }
}
inline  const ::p4::v1::PacketOutError& StreamError::packet_out() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamError.packet_out)
  return has_packet_out()
      ? *details_.packet_out_
      : ::p4::v1::PacketOutError::default_instance();
}
inline ::p4::v1::PacketOutError* StreamError::mutable_packet_out() {
  if (!has_packet_out()) {
    clear_details();
    set_has_packet_out();
    details_.packet_out_ = new ::p4::v1::PacketOutError;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.StreamError.packet_out)
  return details_.packet_out_;
}
inline ::p4::v1::PacketOutError* StreamError::release_packet_out() {
  // @@protoc_insertion_point(field_release:p4.v1.StreamError.packet_out)
  if (has_packet_out()) {
    clear_has_details();
    ::p4::v1::PacketOutError* temp = details_.packet_out_;
    details_.packet_out_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void StreamError::set_allocated_packet_out(::p4::v1::PacketOutError* packet_out) {
  clear_details();
  if (packet_out) {
    set_has_packet_out();
    details_.packet_out_ = packet_out;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamError.packet_out)
}

// .p4.v1.DigestListAckError digest_list_ack = 6;
inline bool StreamError::has_digest_list_ack() const {
  return details_case() == kDigestListAck;
}
inline void StreamError::set_has_digest_list_ack() {
  _oneof_case_[0] = kDigestListAck;
}
inline void StreamError::clear_digest_list_ack() {
  if (has_digest_list_ack()) {
    delete details_.digest_list_ack_;
    clear_has_details();
  }
}
inline  const ::p4::v1::DigestListAckError& StreamError::digest_list_ack() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamError.digest_list_ack)
  return has_digest_list_ack()
      ? *details_.digest_list_ack_
      : ::p4::v1::DigestListAckError::default_instance();
}
inline ::p4::v1::DigestListAckError* StreamError::mutable_digest_list_ack() {
  if (!has_digest_list_ack()) {
    clear_details();
    set_has_digest_list_ack();
    details_.digest_list_ack_ = new ::p4::v1::DigestListAckError;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.StreamError.digest_list_ack)
  return details_.digest_list_ack_;
}
inline ::p4::v1::DigestListAckError* StreamError::release_digest_list_ack() {
  // @@protoc_insertion_point(field_release:p4.v1.StreamError.digest_list_ack)
  if (has_digest_list_ack()) {
    clear_has_details();
    ::p4::v1::DigestListAckError* temp = details_.digest_list_ack_;
    details_.digest_list_ack_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void StreamError::set_allocated_digest_list_ack(::p4::v1::DigestListAckError* digest_list_ack) {
  clear_details();
  if (digest_list_ack) {
    set_has_digest_list_ack();
    details_.digest_list_ack_ = digest_list_ack;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamError.digest_list_ack)
}

// .p4.v1.StreamOtherError other = 7;
inline bool StreamError::has_other() const {
  return details_case() == kOther;
}
inline void StreamError::set_has_other() {
  _oneof_case_[0] = kOther;
}
inline void StreamError::clear_other() {
  if (has_other()) {
    delete details_.other_;
    clear_has_details();
  }
}
inline  const ::p4::v1::StreamOtherError& StreamError::other() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamError.other)
  return has_other()
      ? *details_.other_
      : ::p4::v1::StreamOtherError::default_instance();
}
inline ::p4::v1::StreamOtherError* StreamError::mutable_other() {
  if (!has_other()) {
    clear_details();
    set_has_other();
    details_.other_ = new ::p4::v1::StreamOtherError;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.StreamError.other)
  return details_.other_;
}
inline ::p4::v1::StreamOtherError* StreamError::release_other() {
  // @@protoc_insertion_point(field_release:p4.v1.StreamError.other)
  if (has_other()) {
    clear_has_details();
    ::p4::v1::StreamOtherError* temp = details_.other_;
    details_.other_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void StreamError::set_allocated_other(::p4::v1::StreamOtherError* other) {
  clear_details();
  if (other) {
    set_has_other();
    details_.other_ = other;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamError.other)
}

inline bool StreamError::has_details() const {
  return details_case() != DETAILS_NOT_SET;
}
inline void StreamError::clear_has_details() {
  _oneof_case_[0] = DETAILS_NOT_SET;
}
inline StreamError::DetailsCase StreamError::details_case() const {
  return StreamError::DetailsCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PacketOutError

// .p4.v1.PacketOut packet_out = 1;
inline bool PacketOutError::has_packet_out() const {
  return this != internal_default_instance() && packet_out_ != NULL;
}
inline void PacketOutError::clear_packet_out() {
  if (GetArenaNoVirtual() == NULL && packet_out_ != NULL) delete packet_out_;
  packet_out_ = NULL;
}
inline const ::p4::v1::PacketOut& PacketOutError::packet_out() const {
  // @@protoc_insertion_point(field_get:p4.v1.PacketOutError.packet_out)
  return packet_out_ != NULL ? *packet_out_
                         : *::p4::v1::PacketOut::internal_default_instance();
}
inline ::p4::v1::PacketOut* PacketOutError::mutable_packet_out() {
  
  if (packet_out_ == NULL) {
    packet_out_ = new ::p4::v1::PacketOut;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.PacketOutError.packet_out)
  return packet_out_;
}
inline ::p4::v1::PacketOut* PacketOutError::release_packet_out() {
  // @@protoc_insertion_point(field_release:p4.v1.PacketOutError.packet_out)
  
  ::p4::v1::PacketOut* temp = packet_out_;
  packet_out_ = NULL;
  return temp;
}
inline void PacketOutError::set_allocated_packet_out(::p4::v1::PacketOut* packet_out) {
  delete packet_out_;
  packet_out_ = packet_out;
  if (packet_out) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.PacketOutError.packet_out)
}

// -------------------------------------------------------------------

// DigestListAckError

// .p4.v1.DigestListAck digest_list_ack = 1;
inline bool DigestListAckError::has_digest_list_ack() const {
  return this != internal_default_instance() && digest_list_ack_ != NULL;
}
inline void DigestListAckError::clear_digest_list_ack() {
  if (GetArenaNoVirtual() == NULL && digest_list_ack_ != NULL) delete digest_list_ack_;
  digest_list_ack_ = NULL;
}
inline const ::p4::v1::DigestListAck& DigestListAckError::digest_list_ack() const {
  // @@protoc_insertion_point(field_get:p4.v1.DigestListAckError.digest_list_ack)
  return digest_list_ack_ != NULL ? *digest_list_ack_
                         : *::p4::v1::DigestListAck::internal_default_instance();
}
inline ::p4::v1::DigestListAck* DigestListAckError::mutable_digest_list_ack() {
  
  if (digest_list_ack_ == NULL) {
    digest_list_ack_ = new ::p4::v1::DigestListAck;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.DigestListAckError.digest_list_ack)
  return digest_list_ack_;
}
inline ::p4::v1::DigestListAck* DigestListAckError::release_digest_list_ack() {
  // @@protoc_insertion_point(field_release:p4.v1.DigestListAckError.digest_list_ack)
  
  ::p4::v1::DigestListAck* temp = digest_list_ack_;
  digest_list_ack_ = NULL;
  return temp;
}
inline void DigestListAckError::set_allocated_digest_list_ack(::p4::v1::DigestListAck* digest_list_ack) {
  delete digest_list_ack_;
  digest_list_ack_ = digest_list_ack;
  if (digest_list_ack) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.DigestListAckError.digest_list_ack)
}

// -------------------------------------------------------------------

// StreamOtherError

// .google.protobuf.Any other = 1;
inline bool StreamOtherError::has_other() const {
  return this != internal_default_instance() && other_ != NULL;
}
inline void StreamOtherError::clear_other() {
  if (GetArenaNoVirtual() == NULL && other_ != NULL) delete other_;
  other_ = NULL;
}
inline const ::google::protobuf::Any& StreamOtherError::other() const {
  // @@protoc_insertion_point(field_get:p4.v1.StreamOtherError.other)
  return other_ != NULL ? *other_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* StreamOtherError::mutable_other() {
  
  if (other_ == NULL) {
    other_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.StreamOtherError.other)
  return other_;
}
inline ::google::protobuf::Any* StreamOtherError::release_other() {
  // @@protoc_insertion_point(field_release:p4.v1.StreamOtherError.other)
  
  ::google::protobuf::Any* temp = other_;
  other_ = NULL;
  return temp;
}
inline void StreamOtherError::set_allocated_other(::google::protobuf::Any* other) {
  delete other_;
  other_ = other;
  if (other) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.StreamOtherError.other)
}

// -------------------------------------------------------------------

// Uint128

// uint64 high = 1;
inline void Uint128::clear_high() {
  high_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Uint128::high() const {
  // @@protoc_insertion_point(field_get:p4.v1.Uint128.high)
  return high_;
}
inline void Uint128::set_high(::google::protobuf::uint64 value) {
  
  high_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.Uint128.high)
}

// uint64 low = 2;
inline void Uint128::clear_low() {
  low_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Uint128::low() const {
  // @@protoc_insertion_point(field_get:p4.v1.Uint128.low)
  return low_;
}
inline void Uint128::set_low(::google::protobuf::uint64 value) {
  
  low_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.Uint128.low)
}

// -------------------------------------------------------------------

// SetForwardingPipelineConfigRequest

// uint64 device_id = 1;
inline void SetForwardingPipelineConfigRequest::clear_device_id() {
  device_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SetForwardingPipelineConfigRequest::device_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.SetForwardingPipelineConfigRequest.device_id)
  return device_id_;
}
inline void SetForwardingPipelineConfigRequest::set_device_id(::google::protobuf::uint64 value) {
  
  device_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.SetForwardingPipelineConfigRequest.device_id)
}

// uint64 role_id = 2;
inline void SetForwardingPipelineConfigRequest::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SetForwardingPipelineConfigRequest::role_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.SetForwardingPipelineConfigRequest.role_id)
  return role_id_;
}
inline void SetForwardingPipelineConfigRequest::set_role_id(::google::protobuf::uint64 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.SetForwardingPipelineConfigRequest.role_id)
}

// .p4.v1.Uint128 election_id = 3;
inline bool SetForwardingPipelineConfigRequest::has_election_id() const {
  return this != internal_default_instance() && election_id_ != NULL;
}
inline void SetForwardingPipelineConfigRequest::clear_election_id() {
  if (GetArenaNoVirtual() == NULL && election_id_ != NULL) delete election_id_;
  election_id_ = NULL;
}
inline const ::p4::v1::Uint128& SetForwardingPipelineConfigRequest::election_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.SetForwardingPipelineConfigRequest.election_id)
  return election_id_ != NULL ? *election_id_
                         : *::p4::v1::Uint128::internal_default_instance();
}
inline ::p4::v1::Uint128* SetForwardingPipelineConfigRequest::mutable_election_id() {
  
  if (election_id_ == NULL) {
    election_id_ = new ::p4::v1::Uint128;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.SetForwardingPipelineConfigRequest.election_id)
  return election_id_;
}
inline ::p4::v1::Uint128* SetForwardingPipelineConfigRequest::release_election_id() {
  // @@protoc_insertion_point(field_release:p4.v1.SetForwardingPipelineConfigRequest.election_id)
  
  ::p4::v1::Uint128* temp = election_id_;
  election_id_ = NULL;
  return temp;
}
inline void SetForwardingPipelineConfigRequest::set_allocated_election_id(::p4::v1::Uint128* election_id) {
  delete election_id_;
  election_id_ = election_id;
  if (election_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.SetForwardingPipelineConfigRequest.election_id)
}

// .p4.v1.SetForwardingPipelineConfigRequest.Action action = 4;
inline void SetForwardingPipelineConfigRequest::clear_action() {
  action_ = 0;
}
inline ::p4::v1::SetForwardingPipelineConfigRequest_Action SetForwardingPipelineConfigRequest::action() const {
  // @@protoc_insertion_point(field_get:p4.v1.SetForwardingPipelineConfigRequest.action)
  return static_cast< ::p4::v1::SetForwardingPipelineConfigRequest_Action >(action_);
}
inline void SetForwardingPipelineConfigRequest::set_action(::p4::v1::SetForwardingPipelineConfigRequest_Action value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.SetForwardingPipelineConfigRequest.action)
}

// .p4.v1.ForwardingPipelineConfig config = 5;
inline bool SetForwardingPipelineConfigRequest::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void SetForwardingPipelineConfigRequest::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) delete config_;
  config_ = NULL;
}
inline const ::p4::v1::ForwardingPipelineConfig& SetForwardingPipelineConfigRequest::config() const {
  // @@protoc_insertion_point(field_get:p4.v1.SetForwardingPipelineConfigRequest.config)
  return config_ != NULL ? *config_
                         : *::p4::v1::ForwardingPipelineConfig::internal_default_instance();
}
inline ::p4::v1::ForwardingPipelineConfig* SetForwardingPipelineConfigRequest::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::p4::v1::ForwardingPipelineConfig;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.SetForwardingPipelineConfigRequest.config)
  return config_;
}
inline ::p4::v1::ForwardingPipelineConfig* SetForwardingPipelineConfigRequest::release_config() {
  // @@protoc_insertion_point(field_release:p4.v1.SetForwardingPipelineConfigRequest.config)
  
  ::p4::v1::ForwardingPipelineConfig* temp = config_;
  config_ = NULL;
  return temp;
}
inline void SetForwardingPipelineConfigRequest::set_allocated_config(::p4::v1::ForwardingPipelineConfig* config) {
  delete config_;
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.SetForwardingPipelineConfigRequest.config)
}

// -------------------------------------------------------------------

// SetForwardingPipelineConfigResponse

// -------------------------------------------------------------------

// ForwardingPipelineConfig_Cookie

// uint64 cookie = 1;
inline void ForwardingPipelineConfig_Cookie::clear_cookie() {
  cookie_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ForwardingPipelineConfig_Cookie::cookie() const {
  // @@protoc_insertion_point(field_get:p4.v1.ForwardingPipelineConfig.Cookie.cookie)
  return cookie_;
}
inline void ForwardingPipelineConfig_Cookie::set_cookie(::google::protobuf::uint64 value) {
  
  cookie_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.ForwardingPipelineConfig.Cookie.cookie)
}

// -------------------------------------------------------------------

// ForwardingPipelineConfig

// .p4.config.v1.P4Info p4info = 1;
inline bool ForwardingPipelineConfig::has_p4info() const {
  return this != internal_default_instance() && p4info_ != NULL;
}
inline void ForwardingPipelineConfig::clear_p4info() {
  if (GetArenaNoVirtual() == NULL && p4info_ != NULL) delete p4info_;
  p4info_ = NULL;
}
inline const ::p4::config::v1::P4Info& ForwardingPipelineConfig::p4info() const {
  // @@protoc_insertion_point(field_get:p4.v1.ForwardingPipelineConfig.p4info)
  return p4info_ != NULL ? *p4info_
                         : *::p4::config::v1::P4Info::internal_default_instance();
}
inline ::p4::config::v1::P4Info* ForwardingPipelineConfig::mutable_p4info() {
  
  if (p4info_ == NULL) {
    p4info_ = new ::p4::config::v1::P4Info;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.ForwardingPipelineConfig.p4info)
  return p4info_;
}
inline ::p4::config::v1::P4Info* ForwardingPipelineConfig::release_p4info() {
  // @@protoc_insertion_point(field_release:p4.v1.ForwardingPipelineConfig.p4info)
  
  ::p4::config::v1::P4Info* temp = p4info_;
  p4info_ = NULL;
  return temp;
}
inline void ForwardingPipelineConfig::set_allocated_p4info(::p4::config::v1::P4Info* p4info) {
  delete p4info_;
  p4info_ = p4info;
  if (p4info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.ForwardingPipelineConfig.p4info)
}

// bytes p4_device_config = 2;
inline void ForwardingPipelineConfig::clear_p4_device_config() {
  p4_device_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ForwardingPipelineConfig::p4_device_config() const {
  // @@protoc_insertion_point(field_get:p4.v1.ForwardingPipelineConfig.p4_device_config)
  return p4_device_config_.GetNoArena();
}
inline void ForwardingPipelineConfig::set_p4_device_config(const ::std::string& value) {
  
  p4_device_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.ForwardingPipelineConfig.p4_device_config)
}
#if LANG_CXX11
inline void ForwardingPipelineConfig::set_p4_device_config(::std::string&& value) {
  
  p4_device_config_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.ForwardingPipelineConfig.p4_device_config)
}
#endif
inline void ForwardingPipelineConfig::set_p4_device_config(const char* value) {
  
  p4_device_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.ForwardingPipelineConfig.p4_device_config)
}
inline void ForwardingPipelineConfig::set_p4_device_config(const void* value, size_t size) {
  
  p4_device_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.ForwardingPipelineConfig.p4_device_config)
}
inline ::std::string* ForwardingPipelineConfig::mutable_p4_device_config() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.ForwardingPipelineConfig.p4_device_config)
  return p4_device_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForwardingPipelineConfig::release_p4_device_config() {
  // @@protoc_insertion_point(field_release:p4.v1.ForwardingPipelineConfig.p4_device_config)
  
  return p4_device_config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForwardingPipelineConfig::set_allocated_p4_device_config(::std::string* p4_device_config) {
  if (p4_device_config != NULL) {
    
  } else {
    
  }
  p4_device_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p4_device_config);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.ForwardingPipelineConfig.p4_device_config)
}

// .p4.v1.ForwardingPipelineConfig.Cookie cookie = 3;
inline bool ForwardingPipelineConfig::has_cookie() const {
  return this != internal_default_instance() && cookie_ != NULL;
}
inline void ForwardingPipelineConfig::clear_cookie() {
  if (GetArenaNoVirtual() == NULL && cookie_ != NULL) delete cookie_;
  cookie_ = NULL;
}
inline const ::p4::v1::ForwardingPipelineConfig_Cookie& ForwardingPipelineConfig::cookie() const {
  // @@protoc_insertion_point(field_get:p4.v1.ForwardingPipelineConfig.cookie)
  return cookie_ != NULL ? *cookie_
                         : *::p4::v1::ForwardingPipelineConfig_Cookie::internal_default_instance();
}
inline ::p4::v1::ForwardingPipelineConfig_Cookie* ForwardingPipelineConfig::mutable_cookie() {
  
  if (cookie_ == NULL) {
    cookie_ = new ::p4::v1::ForwardingPipelineConfig_Cookie;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.ForwardingPipelineConfig.cookie)
  return cookie_;
}
inline ::p4::v1::ForwardingPipelineConfig_Cookie* ForwardingPipelineConfig::release_cookie() {
  // @@protoc_insertion_point(field_release:p4.v1.ForwardingPipelineConfig.cookie)
  
  ::p4::v1::ForwardingPipelineConfig_Cookie* temp = cookie_;
  cookie_ = NULL;
  return temp;
}
inline void ForwardingPipelineConfig::set_allocated_cookie(::p4::v1::ForwardingPipelineConfig_Cookie* cookie) {
  delete cookie_;
  cookie_ = cookie;
  if (cookie) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.ForwardingPipelineConfig.cookie)
}

// -------------------------------------------------------------------

// GetForwardingPipelineConfigRequest

// uint64 device_id = 1;
inline void GetForwardingPipelineConfigRequest::clear_device_id() {
  device_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetForwardingPipelineConfigRequest::device_id() const {
  // @@protoc_insertion_point(field_get:p4.v1.GetForwardingPipelineConfigRequest.device_id)
  return device_id_;
}
inline void GetForwardingPipelineConfigRequest::set_device_id(::google::protobuf::uint64 value) {
  
  device_id_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.GetForwardingPipelineConfigRequest.device_id)
}

// .p4.v1.GetForwardingPipelineConfigRequest.ResponseType response_type = 2;
inline void GetForwardingPipelineConfigRequest::clear_response_type() {
  response_type_ = 0;
}
inline ::p4::v1::GetForwardingPipelineConfigRequest_ResponseType GetForwardingPipelineConfigRequest::response_type() const {
  // @@protoc_insertion_point(field_get:p4.v1.GetForwardingPipelineConfigRequest.response_type)
  return static_cast< ::p4::v1::GetForwardingPipelineConfigRequest_ResponseType >(response_type_);
}
inline void GetForwardingPipelineConfigRequest::set_response_type(::p4::v1::GetForwardingPipelineConfigRequest_ResponseType value) {
  
  response_type_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.GetForwardingPipelineConfigRequest.response_type)
}

// -------------------------------------------------------------------

// GetForwardingPipelineConfigResponse

// .p4.v1.ForwardingPipelineConfig config = 1;
inline bool GetForwardingPipelineConfigResponse::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void GetForwardingPipelineConfigResponse::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) delete config_;
  config_ = NULL;
}
inline const ::p4::v1::ForwardingPipelineConfig& GetForwardingPipelineConfigResponse::config() const {
  // @@protoc_insertion_point(field_get:p4.v1.GetForwardingPipelineConfigResponse.config)
  return config_ != NULL ? *config_
                         : *::p4::v1::ForwardingPipelineConfig::internal_default_instance();
}
inline ::p4::v1::ForwardingPipelineConfig* GetForwardingPipelineConfigResponse::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::p4::v1::ForwardingPipelineConfig;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.GetForwardingPipelineConfigResponse.config)
  return config_;
}
inline ::p4::v1::ForwardingPipelineConfig* GetForwardingPipelineConfigResponse::release_config() {
  // @@protoc_insertion_point(field_release:p4.v1.GetForwardingPipelineConfigResponse.config)
  
  ::p4::v1::ForwardingPipelineConfig* temp = config_;
  config_ = NULL;
  return temp;
}
inline void GetForwardingPipelineConfigResponse::set_allocated_config(::p4::v1::ForwardingPipelineConfig* config) {
  delete config_;
  config_ = config;
  if (config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.GetForwardingPipelineConfigResponse.config)
}

// -------------------------------------------------------------------

// Error

// int32 canonical_code = 1;
inline void Error::clear_canonical_code() {
  canonical_code_ = 0;
}
inline ::google::protobuf::int32 Error::canonical_code() const {
  // @@protoc_insertion_point(field_get:p4.v1.Error.canonical_code)
  return canonical_code_;
}
inline void Error::set_canonical_code(::google::protobuf::int32 value) {
  
  canonical_code_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.Error.canonical_code)
}

// string message = 2;
inline void Error::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Error::message() const {
  // @@protoc_insertion_point(field_get:p4.v1.Error.message)
  return message_.GetNoArena();
}
inline void Error::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.Error.message)
}
#if LANG_CXX11
inline void Error::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.Error.message)
}
#endif
inline void Error::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.Error.message)
}
inline void Error::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.Error.message)
}
inline ::std::string* Error::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.Error.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Error::release_message() {
  // @@protoc_insertion_point(field_release:p4.v1.Error.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Error::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Error.message)
}

// string space = 3;
inline void Error::clear_space() {
  space_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Error::space() const {
  // @@protoc_insertion_point(field_get:p4.v1.Error.space)
  return space_.GetNoArena();
}
inline void Error::set_space(const ::std::string& value) {
  
  space_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.Error.space)
}
#if LANG_CXX11
inline void Error::set_space(::std::string&& value) {
  
  space_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.Error.space)
}
#endif
inline void Error::set_space(const char* value) {
  
  space_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.Error.space)
}
inline void Error::set_space(const char* value, size_t size) {
  
  space_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.Error.space)
}
inline ::std::string* Error::mutable_space() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.Error.space)
  return space_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Error::release_space() {
  // @@protoc_insertion_point(field_release:p4.v1.Error.space)
  
  return space_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Error::set_allocated_space(::std::string* space) {
  if (space != NULL) {
    
  } else {
    
  }
  space_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), space);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Error.space)
}

// int32 code = 4;
inline void Error::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 Error::code() const {
  // @@protoc_insertion_point(field_get:p4.v1.Error.code)
  return code_;
}
inline void Error::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:p4.v1.Error.code)
}

// .google.protobuf.Any details = 5;
inline bool Error::has_details() const {
  return this != internal_default_instance() && details_ != NULL;
}
inline void Error::clear_details() {
  if (GetArenaNoVirtual() == NULL && details_ != NULL) delete details_;
  details_ = NULL;
}
inline const ::google::protobuf::Any& Error::details() const {
  // @@protoc_insertion_point(field_get:p4.v1.Error.details)
  return details_ != NULL ? *details_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* Error::mutable_details() {
  
  if (details_ == NULL) {
    details_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:p4.v1.Error.details)
  return details_;
}
inline ::google::protobuf::Any* Error::release_details() {
  // @@protoc_insertion_point(field_release:p4.v1.Error.details)
  
  ::google::protobuf::Any* temp = details_;
  details_ = NULL;
  return temp;
}
inline void Error::set_allocated_details(::google::protobuf::Any* details) {
  delete details_;
  details_ = details;
  if (details) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.v1.Error.details)
}

// -------------------------------------------------------------------

// CapabilitiesRequest

// -------------------------------------------------------------------

// CapabilitiesResponse

// string p4runtime_api_version = 1;
inline void CapabilitiesResponse::clear_p4runtime_api_version() {
  p4runtime_api_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CapabilitiesResponse::p4runtime_api_version() const {
  // @@protoc_insertion_point(field_get:p4.v1.CapabilitiesResponse.p4runtime_api_version)
  return p4runtime_api_version_.GetNoArena();
}
inline void CapabilitiesResponse::set_p4runtime_api_version(const ::std::string& value) {
  
  p4runtime_api_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.v1.CapabilitiesResponse.p4runtime_api_version)
}
#if LANG_CXX11
inline void CapabilitiesResponse::set_p4runtime_api_version(::std::string&& value) {
  
  p4runtime_api_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.v1.CapabilitiesResponse.p4runtime_api_version)
}
#endif
inline void CapabilitiesResponse::set_p4runtime_api_version(const char* value) {
  
  p4runtime_api_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.v1.CapabilitiesResponse.p4runtime_api_version)
}
inline void CapabilitiesResponse::set_p4runtime_api_version(const char* value, size_t size) {
  
  p4runtime_api_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.v1.CapabilitiesResponse.p4runtime_api_version)
}
inline ::std::string* CapabilitiesResponse::mutable_p4runtime_api_version() {
  
  // @@protoc_insertion_point(field_mutable:p4.v1.CapabilitiesResponse.p4runtime_api_version)
  return p4runtime_api_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CapabilitiesResponse::release_p4runtime_api_version() {
  // @@protoc_insertion_point(field_release:p4.v1.CapabilitiesResponse.p4runtime_api_version)
  
  return p4runtime_api_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CapabilitiesResponse::set_allocated_p4runtime_api_version(::std::string* p4runtime_api_version) {
  if (p4runtime_api_version != NULL) {
    
  } else {
    
  }
  p4runtime_api_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p4runtime_api_version);
  // @@protoc_insertion_point(field_set_allocated:p4.v1.CapabilitiesResponse.p4runtime_api_version)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v1
}  // namespace p4

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::p4::v1::WriteRequest_Atomicity> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::p4::v1::WriteRequest_Atomicity>() {
  return ::p4::v1::WriteRequest_Atomicity_descriptor();
}
template <> struct is_proto_enum< ::p4::v1::Update_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::p4::v1::Update_Type>() {
  return ::p4::v1::Update_Type_descriptor();
}
template <> struct is_proto_enum< ::p4::v1::SetForwardingPipelineConfigRequest_Action> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::p4::v1::SetForwardingPipelineConfigRequest_Action>() {
  return ::p4::v1::SetForwardingPipelineConfigRequest_Action_descriptor();
}
template <> struct is_proto_enum< ::p4::v1::GetForwardingPipelineConfigRequest_ResponseType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::p4::v1::GetForwardingPipelineConfigRequest_ResponseType>() {
  return ::p4::v1::GetForwardingPipelineConfigRequest_ResponseType_descriptor();
}
template <> struct is_proto_enum< ::p4::v1::SdnPort> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::p4::v1::SdnPort>() {
  return ::p4::v1::SdnPort_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_p4_2fv1_2fp4runtime_2eproto__INCLUDED
