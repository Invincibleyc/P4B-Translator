// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: p4/config/v1/p4info.proto

#ifndef PROTOBUF_p4_2fconfig_2fv1_2fp4info_2eproto__INCLUDED
#define PROTOBUF_p4_2fconfig_2fv1_2fp4info_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include "p4/config/v1/p4types.pb.h"
// @@protoc_insertion_point(includes)
namespace google {
namespace protobuf {
class Any;
class AnyDefaultTypeInternal;
extern AnyDefaultTypeInternal _Any_default_instance_;
}  // namespace protobuf
}  // namespace google
namespace p4 {
namespace config {
namespace v1 {
class Action;
class ActionDefaultTypeInternal;
extern ActionDefaultTypeInternal _Action_default_instance_;
class ActionProfile;
class ActionProfileDefaultTypeInternal;
extern ActionProfileDefaultTypeInternal _ActionProfile_default_instance_;
class ActionRef;
class ActionRefDefaultTypeInternal;
extern ActionRefDefaultTypeInternal _ActionRef_default_instance_;
class Action_Param;
class Action_ParamDefaultTypeInternal;
extern Action_ParamDefaultTypeInternal _Action_Param_default_instance_;
class ControllerPacketMetadata;
class ControllerPacketMetadataDefaultTypeInternal;
extern ControllerPacketMetadataDefaultTypeInternal _ControllerPacketMetadata_default_instance_;
class ControllerPacketMetadata_Metadata;
class ControllerPacketMetadata_MetadataDefaultTypeInternal;
extern ControllerPacketMetadata_MetadataDefaultTypeInternal _ControllerPacketMetadata_Metadata_default_instance_;
class Counter;
class CounterDefaultTypeInternal;
extern CounterDefaultTypeInternal _Counter_default_instance_;
class CounterSpec;
class CounterSpecDefaultTypeInternal;
extern CounterSpecDefaultTypeInternal _CounterSpec_default_instance_;
class Digest;
class DigestDefaultTypeInternal;
extern DigestDefaultTypeInternal _Digest_default_instance_;
class DirectCounter;
class DirectCounterDefaultTypeInternal;
extern DirectCounterDefaultTypeInternal _DirectCounter_default_instance_;
class DirectMeter;
class DirectMeterDefaultTypeInternal;
extern DirectMeterDefaultTypeInternal _DirectMeter_default_instance_;
class Documentation;
class DocumentationDefaultTypeInternal;
extern DocumentationDefaultTypeInternal _Documentation_default_instance_;
class Expression;
class ExpressionDefaultTypeInternal;
extern ExpressionDefaultTypeInternal _Expression_default_instance_;
class ExpressionList;
class ExpressionListDefaultTypeInternal;
extern ExpressionListDefaultTypeInternal _ExpressionList_default_instance_;
class Extern;
class ExternDefaultTypeInternal;
extern ExternDefaultTypeInternal _Extern_default_instance_;
class ExternInstance;
class ExternInstanceDefaultTypeInternal;
extern ExternInstanceDefaultTypeInternal _ExternInstance_default_instance_;
class KeyValuePair;
class KeyValuePairDefaultTypeInternal;
extern KeyValuePairDefaultTypeInternal _KeyValuePair_default_instance_;
class KeyValuePairList;
class KeyValuePairListDefaultTypeInternal;
extern KeyValuePairListDefaultTypeInternal _KeyValuePairList_default_instance_;
class MatchField;
class MatchFieldDefaultTypeInternal;
extern MatchFieldDefaultTypeInternal _MatchField_default_instance_;
class Meter;
class MeterDefaultTypeInternal;
extern MeterDefaultTypeInternal _Meter_default_instance_;
class MeterSpec;
class MeterSpecDefaultTypeInternal;
extern MeterSpecDefaultTypeInternal _MeterSpec_default_instance_;
class P4BitTypeSpec;
class P4BitTypeSpecDefaultTypeInternal;
extern P4BitTypeSpecDefaultTypeInternal _P4BitTypeSpec_default_instance_;
class P4BitstringLikeTypeSpec;
class P4BitstringLikeTypeSpecDefaultTypeInternal;
extern P4BitstringLikeTypeSpecDefaultTypeInternal _P4BitstringLikeTypeSpec_default_instance_;
class P4BoolType;
class P4BoolTypeDefaultTypeInternal;
extern P4BoolTypeDefaultTypeInternal _P4BoolType_default_instance_;
class P4DataTypeSpec;
class P4DataTypeSpecDefaultTypeInternal;
extern P4DataTypeSpecDefaultTypeInternal _P4DataTypeSpec_default_instance_;
class P4EnumTypeSpec;
class P4EnumTypeSpecDefaultTypeInternal;
extern P4EnumTypeSpecDefaultTypeInternal _P4EnumTypeSpec_default_instance_;
class P4EnumTypeSpec_Member;
class P4EnumTypeSpec_MemberDefaultTypeInternal;
extern P4EnumTypeSpec_MemberDefaultTypeInternal _P4EnumTypeSpec_Member_default_instance_;
class P4ErrorType;
class P4ErrorTypeDefaultTypeInternal;
extern P4ErrorTypeDefaultTypeInternal _P4ErrorType_default_instance_;
class P4ErrorTypeSpec;
class P4ErrorTypeSpecDefaultTypeInternal;
extern P4ErrorTypeSpecDefaultTypeInternal _P4ErrorTypeSpec_default_instance_;
class P4HeaderStackTypeSpec;
class P4HeaderStackTypeSpecDefaultTypeInternal;
extern P4HeaderStackTypeSpecDefaultTypeInternal _P4HeaderStackTypeSpec_default_instance_;
class P4HeaderTypeSpec;
class P4HeaderTypeSpecDefaultTypeInternal;
extern P4HeaderTypeSpecDefaultTypeInternal _P4HeaderTypeSpec_default_instance_;
class P4HeaderTypeSpec_Member;
class P4HeaderTypeSpec_MemberDefaultTypeInternal;
extern P4HeaderTypeSpec_MemberDefaultTypeInternal _P4HeaderTypeSpec_Member_default_instance_;
class P4HeaderUnionStackTypeSpec;
class P4HeaderUnionStackTypeSpecDefaultTypeInternal;
extern P4HeaderUnionStackTypeSpecDefaultTypeInternal _P4HeaderUnionStackTypeSpec_default_instance_;
class P4HeaderUnionTypeSpec;
class P4HeaderUnionTypeSpecDefaultTypeInternal;
extern P4HeaderUnionTypeSpecDefaultTypeInternal _P4HeaderUnionTypeSpec_default_instance_;
class P4HeaderUnionTypeSpec_Member;
class P4HeaderUnionTypeSpec_MemberDefaultTypeInternal;
extern P4HeaderUnionTypeSpec_MemberDefaultTypeInternal _P4HeaderUnionTypeSpec_Member_default_instance_;
class P4Ids;
class P4IdsDefaultTypeInternal;
extern P4IdsDefaultTypeInternal _P4Ids_default_instance_;
class P4Info;
class P4InfoDefaultTypeInternal;
extern P4InfoDefaultTypeInternal _P4Info_default_instance_;
class P4IntTypeSpec;
class P4IntTypeSpecDefaultTypeInternal;
extern P4IntTypeSpecDefaultTypeInternal _P4IntTypeSpec_default_instance_;
class P4NamedType;
class P4NamedTypeDefaultTypeInternal;
extern P4NamedTypeDefaultTypeInternal _P4NamedType_default_instance_;
class P4NewTypeSpec;
class P4NewTypeSpecDefaultTypeInternal;
extern P4NewTypeSpecDefaultTypeInternal _P4NewTypeSpec_default_instance_;
class P4NewTypeTranslation;
class P4NewTypeTranslationDefaultTypeInternal;
extern P4NewTypeTranslationDefaultTypeInternal _P4NewTypeTranslation_default_instance_;
class P4NewTypeTranslation_SdnString;
class P4NewTypeTranslation_SdnStringDefaultTypeInternal;
extern P4NewTypeTranslation_SdnStringDefaultTypeInternal _P4NewTypeTranslation_SdnString_default_instance_;
class P4SerializableEnumTypeSpec;
class P4SerializableEnumTypeSpecDefaultTypeInternal;
extern P4SerializableEnumTypeSpecDefaultTypeInternal _P4SerializableEnumTypeSpec_default_instance_;
class P4SerializableEnumTypeSpec_Member;
class P4SerializableEnumTypeSpec_MemberDefaultTypeInternal;
extern P4SerializableEnumTypeSpec_MemberDefaultTypeInternal _P4SerializableEnumTypeSpec_Member_default_instance_;
class P4StructTypeSpec;
class P4StructTypeSpecDefaultTypeInternal;
extern P4StructTypeSpecDefaultTypeInternal _P4StructTypeSpec_default_instance_;
class P4StructTypeSpec_Member;
class P4StructTypeSpec_MemberDefaultTypeInternal;
extern P4StructTypeSpec_MemberDefaultTypeInternal _P4StructTypeSpec_Member_default_instance_;
class P4TupleTypeSpec;
class P4TupleTypeSpecDefaultTypeInternal;
extern P4TupleTypeSpecDefaultTypeInternal _P4TupleTypeSpec_default_instance_;
class P4TypeInfo;
class P4TypeInfoDefaultTypeInternal;
extern P4TypeInfoDefaultTypeInternal _P4TypeInfo_default_instance_;
class P4VarbitTypeSpec;
class P4VarbitTypeSpecDefaultTypeInternal;
extern P4VarbitTypeSpecDefaultTypeInternal _P4VarbitTypeSpec_default_instance_;
class PkgInfo;
class PkgInfoDefaultTypeInternal;
extern PkgInfoDefaultTypeInternal _PkgInfo_default_instance_;
class Preamble;
class PreambleDefaultTypeInternal;
extern PreambleDefaultTypeInternal _Preamble_default_instance_;
class Register;
class RegisterDefaultTypeInternal;
extern RegisterDefaultTypeInternal _Register_default_instance_;
class StructuredAnnotation;
class StructuredAnnotationDefaultTypeInternal;
extern StructuredAnnotationDefaultTypeInternal _StructuredAnnotation_default_instance_;
class Table;
class TableDefaultTypeInternal;
extern TableDefaultTypeInternal _Table_default_instance_;
class ValueSet;
class ValueSetDefaultTypeInternal;
extern ValueSetDefaultTypeInternal _ValueSet_default_instance_;
}  // namespace v1
}  // namespace config
}  // namespace p4

namespace p4 {
namespace config {
namespace v1 {

namespace protobuf_p4_2fconfig_2fv1_2fp4info_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_p4_2fconfig_2fv1_2fp4info_2eproto

enum P4Ids_Prefix {
  P4Ids_Prefix_UNSPECIFIED = 0,
  P4Ids_Prefix_ACTION = 1,
  P4Ids_Prefix_TABLE = 2,
  P4Ids_Prefix_VALUE_SET = 3,
  P4Ids_Prefix_CONTROLLER_HEADER = 4,
  P4Ids_Prefix_PSA_EXTERNS_START = 16,
  P4Ids_Prefix_ACTION_PROFILE = 17,
  P4Ids_Prefix_COUNTER = 18,
  P4Ids_Prefix_DIRECT_COUNTER = 19,
  P4Ids_Prefix_METER = 20,
  P4Ids_Prefix_DIRECT_METER = 21,
  P4Ids_Prefix_REGISTER = 22,
  P4Ids_Prefix_DIGEST = 23,
  P4Ids_Prefix_OTHER_EXTERNS_START = 128,
  P4Ids_Prefix_MAX = 255,
  P4Ids_Prefix_P4Ids_Prefix_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  P4Ids_Prefix_P4Ids_Prefix_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool P4Ids_Prefix_IsValid(int value);
const P4Ids_Prefix P4Ids_Prefix_Prefix_MIN = P4Ids_Prefix_UNSPECIFIED;
const P4Ids_Prefix P4Ids_Prefix_Prefix_MAX = P4Ids_Prefix_MAX;
const int P4Ids_Prefix_Prefix_ARRAYSIZE = P4Ids_Prefix_Prefix_MAX + 1;

const ::google::protobuf::EnumDescriptor* P4Ids_Prefix_descriptor();
inline const ::std::string& P4Ids_Prefix_Name(P4Ids_Prefix value) {
  return ::google::protobuf::internal::NameOfEnum(
    P4Ids_Prefix_descriptor(), value);
}
inline bool P4Ids_Prefix_Parse(
    const ::std::string& name, P4Ids_Prefix* value) {
  return ::google::protobuf::internal::ParseNamedEnum<P4Ids_Prefix>(
    P4Ids_Prefix_descriptor(), name, value);
}
enum MatchField_MatchType {
  MatchField_MatchType_UNSPECIFIED = 0,
  MatchField_MatchType_EXACT = 2,
  MatchField_MatchType_LPM = 3,
  MatchField_MatchType_TERNARY = 4,
  MatchField_MatchType_RANGE = 5,
  MatchField_MatchType_OPTIONAL = 6,
  MatchField_MatchType_MatchField_MatchType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MatchField_MatchType_MatchField_MatchType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MatchField_MatchType_IsValid(int value);
const MatchField_MatchType MatchField_MatchType_MatchType_MIN = MatchField_MatchType_UNSPECIFIED;
const MatchField_MatchType MatchField_MatchType_MatchType_MAX = MatchField_MatchType_OPTIONAL;
const int MatchField_MatchType_MatchType_ARRAYSIZE = MatchField_MatchType_MatchType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MatchField_MatchType_descriptor();
inline const ::std::string& MatchField_MatchType_Name(MatchField_MatchType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MatchField_MatchType_descriptor(), value);
}
inline bool MatchField_MatchType_Parse(
    const ::std::string& name, MatchField_MatchType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatchField_MatchType>(
    MatchField_MatchType_descriptor(), name, value);
}
enum Table_IdleTimeoutBehavior {
  Table_IdleTimeoutBehavior_NO_TIMEOUT = 0,
  Table_IdleTimeoutBehavior_NOTIFY_CONTROL = 1,
  Table_IdleTimeoutBehavior_Table_IdleTimeoutBehavior_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Table_IdleTimeoutBehavior_Table_IdleTimeoutBehavior_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Table_IdleTimeoutBehavior_IsValid(int value);
const Table_IdleTimeoutBehavior Table_IdleTimeoutBehavior_IdleTimeoutBehavior_MIN = Table_IdleTimeoutBehavior_NO_TIMEOUT;
const Table_IdleTimeoutBehavior Table_IdleTimeoutBehavior_IdleTimeoutBehavior_MAX = Table_IdleTimeoutBehavior_NOTIFY_CONTROL;
const int Table_IdleTimeoutBehavior_IdleTimeoutBehavior_ARRAYSIZE = Table_IdleTimeoutBehavior_IdleTimeoutBehavior_MAX + 1;

const ::google::protobuf::EnumDescriptor* Table_IdleTimeoutBehavior_descriptor();
inline const ::std::string& Table_IdleTimeoutBehavior_Name(Table_IdleTimeoutBehavior value) {
  return ::google::protobuf::internal::NameOfEnum(
    Table_IdleTimeoutBehavior_descriptor(), value);
}
inline bool Table_IdleTimeoutBehavior_Parse(
    const ::std::string& name, Table_IdleTimeoutBehavior* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Table_IdleTimeoutBehavior>(
    Table_IdleTimeoutBehavior_descriptor(), name, value);
}
enum ActionRef_Scope {
  ActionRef_Scope_TABLE_AND_DEFAULT = 0,
  ActionRef_Scope_TABLE_ONLY = 1,
  ActionRef_Scope_DEFAULT_ONLY = 2,
  ActionRef_Scope_ActionRef_Scope_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionRef_Scope_ActionRef_Scope_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionRef_Scope_IsValid(int value);
const ActionRef_Scope ActionRef_Scope_Scope_MIN = ActionRef_Scope_TABLE_AND_DEFAULT;
const ActionRef_Scope ActionRef_Scope_Scope_MAX = ActionRef_Scope_DEFAULT_ONLY;
const int ActionRef_Scope_Scope_ARRAYSIZE = ActionRef_Scope_Scope_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionRef_Scope_descriptor();
inline const ::std::string& ActionRef_Scope_Name(ActionRef_Scope value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionRef_Scope_descriptor(), value);
}
inline bool ActionRef_Scope_Parse(
    const ::std::string& name, ActionRef_Scope* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionRef_Scope>(
    ActionRef_Scope_descriptor(), name, value);
}
enum CounterSpec_Unit {
  CounterSpec_Unit_UNSPECIFIED = 0,
  CounterSpec_Unit_BYTES = 1,
  CounterSpec_Unit_PACKETS = 2,
  CounterSpec_Unit_BOTH = 3,
  CounterSpec_Unit_CounterSpec_Unit_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CounterSpec_Unit_CounterSpec_Unit_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CounterSpec_Unit_IsValid(int value);
const CounterSpec_Unit CounterSpec_Unit_Unit_MIN = CounterSpec_Unit_UNSPECIFIED;
const CounterSpec_Unit CounterSpec_Unit_Unit_MAX = CounterSpec_Unit_BOTH;
const int CounterSpec_Unit_Unit_ARRAYSIZE = CounterSpec_Unit_Unit_MAX + 1;

const ::google::protobuf::EnumDescriptor* CounterSpec_Unit_descriptor();
inline const ::std::string& CounterSpec_Unit_Name(CounterSpec_Unit value) {
  return ::google::protobuf::internal::NameOfEnum(
    CounterSpec_Unit_descriptor(), value);
}
inline bool CounterSpec_Unit_Parse(
    const ::std::string& name, CounterSpec_Unit* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CounterSpec_Unit>(
    CounterSpec_Unit_descriptor(), name, value);
}
enum MeterSpec_Unit {
  MeterSpec_Unit_UNSPECIFIED = 0,
  MeterSpec_Unit_BYTES = 1,
  MeterSpec_Unit_PACKETS = 2,
  MeterSpec_Unit_MeterSpec_Unit_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MeterSpec_Unit_MeterSpec_Unit_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MeterSpec_Unit_IsValid(int value);
const MeterSpec_Unit MeterSpec_Unit_Unit_MIN = MeterSpec_Unit_UNSPECIFIED;
const MeterSpec_Unit MeterSpec_Unit_Unit_MAX = MeterSpec_Unit_PACKETS;
const int MeterSpec_Unit_Unit_ARRAYSIZE = MeterSpec_Unit_Unit_MAX + 1;

const ::google::protobuf::EnumDescriptor* MeterSpec_Unit_descriptor();
inline const ::std::string& MeterSpec_Unit_Name(MeterSpec_Unit value) {
  return ::google::protobuf::internal::NameOfEnum(
    MeterSpec_Unit_descriptor(), value);
}
inline bool MeterSpec_Unit_Parse(
    const ::std::string& name, MeterSpec_Unit* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MeterSpec_Unit>(
    MeterSpec_Unit_descriptor(), name, value);
}
// ===================================================================

class P4Info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4Info) */ {
 public:
  P4Info();
  virtual ~P4Info();

  P4Info(const P4Info& from);

  inline P4Info& operator=(const P4Info& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4Info& default_instance();

  static inline const P4Info* internal_default_instance() {
    return reinterpret_cast<const P4Info*>(
               &_P4Info_default_instance_);
  }

  void Swap(P4Info* other);

  // implements Message ----------------------------------------------

  inline P4Info* New() const PROTOBUF_FINAL { return New(NULL); }

  P4Info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4Info& from);
  void MergeFrom(const P4Info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4Info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.config.v1.Table tables = 2;
  int tables_size() const;
  void clear_tables();
  static const int kTablesFieldNumber = 2;
  const ::p4::config::v1::Table& tables(int index) const;
  ::p4::config::v1::Table* mutable_tables(int index);
  ::p4::config::v1::Table* add_tables();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Table >*
      mutable_tables();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Table >&
      tables() const;

  // repeated .p4.config.v1.Action actions = 3;
  int actions_size() const;
  void clear_actions();
  static const int kActionsFieldNumber = 3;
  const ::p4::config::v1::Action& actions(int index) const;
  ::p4::config::v1::Action* mutable_actions(int index);
  ::p4::config::v1::Action* add_actions();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Action >*
      mutable_actions();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Action >&
      actions() const;

  // repeated .p4.config.v1.ActionProfile action_profiles = 4;
  int action_profiles_size() const;
  void clear_action_profiles();
  static const int kActionProfilesFieldNumber = 4;
  const ::p4::config::v1::ActionProfile& action_profiles(int index) const;
  ::p4::config::v1::ActionProfile* mutable_action_profiles(int index);
  ::p4::config::v1::ActionProfile* add_action_profiles();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ActionProfile >*
      mutable_action_profiles();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ActionProfile >&
      action_profiles() const;

  // repeated .p4.config.v1.Counter counters = 5;
  int counters_size() const;
  void clear_counters();
  static const int kCountersFieldNumber = 5;
  const ::p4::config::v1::Counter& counters(int index) const;
  ::p4::config::v1::Counter* mutable_counters(int index);
  ::p4::config::v1::Counter* add_counters();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Counter >*
      mutable_counters();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Counter >&
      counters() const;

  // repeated .p4.config.v1.DirectCounter direct_counters = 6;
  int direct_counters_size() const;
  void clear_direct_counters();
  static const int kDirectCountersFieldNumber = 6;
  const ::p4::config::v1::DirectCounter& direct_counters(int index) const;
  ::p4::config::v1::DirectCounter* mutable_direct_counters(int index);
  ::p4::config::v1::DirectCounter* add_direct_counters();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::DirectCounter >*
      mutable_direct_counters();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::DirectCounter >&
      direct_counters() const;

  // repeated .p4.config.v1.Meter meters = 7;
  int meters_size() const;
  void clear_meters();
  static const int kMetersFieldNumber = 7;
  const ::p4::config::v1::Meter& meters(int index) const;
  ::p4::config::v1::Meter* mutable_meters(int index);
  ::p4::config::v1::Meter* add_meters();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Meter >*
      mutable_meters();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Meter >&
      meters() const;

  // repeated .p4.config.v1.DirectMeter direct_meters = 8;
  int direct_meters_size() const;
  void clear_direct_meters();
  static const int kDirectMetersFieldNumber = 8;
  const ::p4::config::v1::DirectMeter& direct_meters(int index) const;
  ::p4::config::v1::DirectMeter* mutable_direct_meters(int index);
  ::p4::config::v1::DirectMeter* add_direct_meters();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::DirectMeter >*
      mutable_direct_meters();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::DirectMeter >&
      direct_meters() const;

  // repeated .p4.config.v1.ControllerPacketMetadata controller_packet_metadata = 9;
  int controller_packet_metadata_size() const;
  void clear_controller_packet_metadata();
  static const int kControllerPacketMetadataFieldNumber = 9;
  const ::p4::config::v1::ControllerPacketMetadata& controller_packet_metadata(int index) const;
  ::p4::config::v1::ControllerPacketMetadata* mutable_controller_packet_metadata(int index);
  ::p4::config::v1::ControllerPacketMetadata* add_controller_packet_metadata();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ControllerPacketMetadata >*
      mutable_controller_packet_metadata();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ControllerPacketMetadata >&
      controller_packet_metadata() const;

  // repeated .p4.config.v1.ValueSet value_sets = 10;
  int value_sets_size() const;
  void clear_value_sets();
  static const int kValueSetsFieldNumber = 10;
  const ::p4::config::v1::ValueSet& value_sets(int index) const;
  ::p4::config::v1::ValueSet* mutable_value_sets(int index);
  ::p4::config::v1::ValueSet* add_value_sets();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ValueSet >*
      mutable_value_sets();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ValueSet >&
      value_sets() const;

  // repeated .p4.config.v1.Register registers = 11;
  int registers_size() const;
  void clear_registers();
  static const int kRegistersFieldNumber = 11;
  const ::p4::config::v1::Register& registers(int index) const;
  ::p4::config::v1::Register* mutable_registers(int index);
  ::p4::config::v1::Register* add_registers();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Register >*
      mutable_registers();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Register >&
      registers() const;

  // repeated .p4.config.v1.Digest digests = 12;
  int digests_size() const;
  void clear_digests();
  static const int kDigestsFieldNumber = 12;
  const ::p4::config::v1::Digest& digests(int index) const;
  ::p4::config::v1::Digest* mutable_digests(int index);
  ::p4::config::v1::Digest* add_digests();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Digest >*
      mutable_digests();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Digest >&
      digests() const;

  // repeated .p4.config.v1.Extern externs = 100;
  int externs_size() const;
  void clear_externs();
  static const int kExternsFieldNumber = 100;
  const ::p4::config::v1::Extern& externs(int index) const;
  ::p4::config::v1::Extern* mutable_externs(int index);
  ::p4::config::v1::Extern* add_externs();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Extern >*
      mutable_externs();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Extern >&
      externs() const;

  // .p4.config.v1.PkgInfo pkg_info = 1;
  bool has_pkg_info() const;
  void clear_pkg_info();
  static const int kPkgInfoFieldNumber = 1;
  const ::p4::config::v1::PkgInfo& pkg_info() const;
  ::p4::config::v1::PkgInfo* mutable_pkg_info();
  ::p4::config::v1::PkgInfo* release_pkg_info();
  void set_allocated_pkg_info(::p4::config::v1::PkgInfo* pkg_info);

  // .p4.config.v1.P4TypeInfo type_info = 200;
  bool has_type_info() const;
  void clear_type_info();
  static const int kTypeInfoFieldNumber = 200;
  const ::p4::config::v1::P4TypeInfo& type_info() const;
  ::p4::config::v1::P4TypeInfo* mutable_type_info();
  ::p4::config::v1::P4TypeInfo* release_type_info();
  void set_allocated_type_info(::p4::config::v1::P4TypeInfo* type_info);

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4Info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Table > tables_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Action > actions_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ActionProfile > action_profiles_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Counter > counters_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::DirectCounter > direct_counters_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Meter > meters_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::DirectMeter > direct_meters_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ControllerPacketMetadata > controller_packet_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ValueSet > value_sets_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Register > registers_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Digest > digests_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Extern > externs_;
  ::p4::config::v1::PkgInfo* pkg_info_;
  ::p4::config::v1::P4TypeInfo* type_info_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Documentation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.Documentation) */ {
 public:
  Documentation();
  virtual ~Documentation();

  Documentation(const Documentation& from);

  inline Documentation& operator=(const Documentation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Documentation& default_instance();

  static inline const Documentation* internal_default_instance() {
    return reinterpret_cast<const Documentation*>(
               &_Documentation_default_instance_);
  }

  void Swap(Documentation* other);

  // implements Message ----------------------------------------------

  inline Documentation* New() const PROTOBUF_FINAL { return New(NULL); }

  Documentation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Documentation& from);
  void MergeFrom(const Documentation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Documentation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string brief = 1;
  void clear_brief();
  static const int kBriefFieldNumber = 1;
  const ::std::string& brief() const;
  void set_brief(const ::std::string& value);
  #if LANG_CXX11
  void set_brief(::std::string&& value);
  #endif
  void set_brief(const char* value);
  void set_brief(const char* value, size_t size);
  ::std::string* mutable_brief();
  ::std::string* release_brief();
  void set_allocated_brief(::std::string* brief);

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:p4.config.v1.Documentation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr brief_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PkgInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.PkgInfo) */ {
 public:
  PkgInfo();
  virtual ~PkgInfo();

  PkgInfo(const PkgInfo& from);

  inline PkgInfo& operator=(const PkgInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgInfo& default_instance();

  static inline const PkgInfo* internal_default_instance() {
    return reinterpret_cast<const PkgInfo*>(
               &_PkgInfo_default_instance_);
  }

  void Swap(PkgInfo* other);

  // implements Message ----------------------------------------------

  inline PkgInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PkgInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PkgInfo& from);
  void MergeFrom(const PkgInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PkgInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string annotations = 4;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 4;
  const ::std::string& annotations(int index) const;
  ::std::string* mutable_annotations(int index);
  void set_annotations(int index, const ::std::string& value);
  void set_annotations(int index, const char* value);
  void set_annotations(int index, const char* value, size_t size);
  ::std::string* add_annotations();
  void add_annotations(const ::std::string& value);
  void add_annotations(const char* value);
  void add_annotations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& annotations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_annotations();

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 9;
  int structured_annotations_size() const;
  void clear_structured_annotations();
  static const int kStructuredAnnotationsFieldNumber = 9;
  const ::p4::config::v1::StructuredAnnotation& structured_annotations(int index) const;
  ::p4::config::v1::StructuredAnnotation* mutable_structured_annotations(int index);
  ::p4::config::v1::StructuredAnnotation* add_structured_annotations();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
      mutable_structured_annotations();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
      structured_annotations() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // string arch = 5;
  void clear_arch();
  static const int kArchFieldNumber = 5;
  const ::std::string& arch() const;
  void set_arch(const ::std::string& value);
  #if LANG_CXX11
  void set_arch(::std::string&& value);
  #endif
  void set_arch(const char* value);
  void set_arch(const char* value, size_t size);
  ::std::string* mutable_arch();
  ::std::string* release_arch();
  void set_allocated_arch(::std::string* arch);

  // string organization = 6;
  void clear_organization();
  static const int kOrganizationFieldNumber = 6;
  const ::std::string& organization() const;
  void set_organization(const ::std::string& value);
  #if LANG_CXX11
  void set_organization(::std::string&& value);
  #endif
  void set_organization(const char* value);
  void set_organization(const char* value, size_t size);
  ::std::string* mutable_organization();
  ::std::string* release_organization();
  void set_allocated_organization(::std::string* organization);

  // string contact = 7;
  void clear_contact();
  static const int kContactFieldNumber = 7;
  const ::std::string& contact() const;
  void set_contact(const ::std::string& value);
  #if LANG_CXX11
  void set_contact(::std::string&& value);
  #endif
  void set_contact(const char* value);
  void set_contact(const char* value, size_t size);
  ::std::string* mutable_contact();
  ::std::string* release_contact();
  void set_allocated_contact(::std::string* contact);

  // string url = 8;
  void clear_url();
  static const int kUrlFieldNumber = 8;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // .p4.config.v1.Documentation doc = 3;
  bool has_doc() const;
  void clear_doc();
  static const int kDocFieldNumber = 3;
  const ::p4::config::v1::Documentation& doc() const;
  ::p4::config::v1::Documentation* mutable_doc();
  ::p4::config::v1::Documentation* release_doc();
  void set_allocated_doc(::p4::config::v1::Documentation* doc);

  // @@protoc_insertion_point(class_scope:p4.config.v1.PkgInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> annotations_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation > structured_annotations_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr arch_;
  ::google::protobuf::internal::ArenaStringPtr organization_;
  ::google::protobuf::internal::ArenaStringPtr contact_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::p4::config::v1::Documentation* doc_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4Ids : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4Ids) */ {
 public:
  P4Ids();
  virtual ~P4Ids();

  P4Ids(const P4Ids& from);

  inline P4Ids& operator=(const P4Ids& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4Ids& default_instance();

  static inline const P4Ids* internal_default_instance() {
    return reinterpret_cast<const P4Ids*>(
               &_P4Ids_default_instance_);
  }

  void Swap(P4Ids* other);

  // implements Message ----------------------------------------------

  inline P4Ids* New() const PROTOBUF_FINAL { return New(NULL); }

  P4Ids* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4Ids& from);
  void MergeFrom(const P4Ids& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4Ids* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef P4Ids_Prefix Prefix;
  static const Prefix UNSPECIFIED =
    P4Ids_Prefix_UNSPECIFIED;
  static const Prefix ACTION =
    P4Ids_Prefix_ACTION;
  static const Prefix TABLE =
    P4Ids_Prefix_TABLE;
  static const Prefix VALUE_SET =
    P4Ids_Prefix_VALUE_SET;
  static const Prefix CONTROLLER_HEADER =
    P4Ids_Prefix_CONTROLLER_HEADER;
  static const Prefix PSA_EXTERNS_START =
    P4Ids_Prefix_PSA_EXTERNS_START;
  static const Prefix ACTION_PROFILE =
    P4Ids_Prefix_ACTION_PROFILE;
  static const Prefix COUNTER =
    P4Ids_Prefix_COUNTER;
  static const Prefix DIRECT_COUNTER =
    P4Ids_Prefix_DIRECT_COUNTER;
  static const Prefix METER =
    P4Ids_Prefix_METER;
  static const Prefix DIRECT_METER =
    P4Ids_Prefix_DIRECT_METER;
  static const Prefix REGISTER =
    P4Ids_Prefix_REGISTER;
  static const Prefix DIGEST =
    P4Ids_Prefix_DIGEST;
  static const Prefix OTHER_EXTERNS_START =
    P4Ids_Prefix_OTHER_EXTERNS_START;
  static const Prefix MAX =
    P4Ids_Prefix_MAX;
  static inline bool Prefix_IsValid(int value) {
    return P4Ids_Prefix_IsValid(value);
  }
  static const Prefix Prefix_MIN =
    P4Ids_Prefix_Prefix_MIN;
  static const Prefix Prefix_MAX =
    P4Ids_Prefix_Prefix_MAX;
  static const int Prefix_ARRAYSIZE =
    P4Ids_Prefix_Prefix_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Prefix_descriptor() {
    return P4Ids_Prefix_descriptor();
  }
  static inline const ::std::string& Prefix_Name(Prefix value) {
    return P4Ids_Prefix_Name(value);
  }
  static inline bool Prefix_Parse(const ::std::string& name,
      Prefix* value) {
    return P4Ids_Prefix_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4Ids)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Preamble : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.Preamble) */ {
 public:
  Preamble();
  virtual ~Preamble();

  Preamble(const Preamble& from);

  inline Preamble& operator=(const Preamble& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Preamble& default_instance();

  static inline const Preamble* internal_default_instance() {
    return reinterpret_cast<const Preamble*>(
               &_Preamble_default_instance_);
  }

  void Swap(Preamble* other);

  // implements Message ----------------------------------------------

  inline Preamble* New() const PROTOBUF_FINAL { return New(NULL); }

  Preamble* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Preamble& from);
  void MergeFrom(const Preamble& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Preamble* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string annotations = 4;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 4;
  const ::std::string& annotations(int index) const;
  ::std::string* mutable_annotations(int index);
  void set_annotations(int index, const ::std::string& value);
  void set_annotations(int index, const char* value);
  void set_annotations(int index, const char* value, size_t size);
  ::std::string* add_annotations();
  void add_annotations(const ::std::string& value);
  void add_annotations(const char* value);
  void add_annotations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& annotations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_annotations();

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 6;
  int structured_annotations_size() const;
  void clear_structured_annotations();
  static const int kStructuredAnnotationsFieldNumber = 6;
  const ::p4::config::v1::StructuredAnnotation& structured_annotations(int index) const;
  ::p4::config::v1::StructuredAnnotation* mutable_structured_annotations(int index);
  ::p4::config::v1::StructuredAnnotation* add_structured_annotations();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
      mutable_structured_annotations();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
      structured_annotations() const;

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string alias = 3;
  void clear_alias();
  static const int kAliasFieldNumber = 3;
  const ::std::string& alias() const;
  void set_alias(const ::std::string& value);
  #if LANG_CXX11
  void set_alias(::std::string&& value);
  #endif
  void set_alias(const char* value);
  void set_alias(const char* value, size_t size);
  ::std::string* mutable_alias();
  ::std::string* release_alias();
  void set_allocated_alias(::std::string* alias);

  // .p4.config.v1.Documentation doc = 5;
  bool has_doc() const;
  void clear_doc();
  static const int kDocFieldNumber = 5;
  const ::p4::config::v1::Documentation& doc() const;
  ::p4::config::v1::Documentation* mutable_doc();
  ::p4::config::v1::Documentation* release_doc();
  void set_allocated_doc(::p4::config::v1::Documentation* doc);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.Preamble)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> annotations_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation > structured_annotations_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr alias_;
  ::p4::config::v1::Documentation* doc_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Extern : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.Extern) */ {
 public:
  Extern();
  virtual ~Extern();

  Extern(const Extern& from);

  inline Extern& operator=(const Extern& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Extern& default_instance();

  static inline const Extern* internal_default_instance() {
    return reinterpret_cast<const Extern*>(
               &_Extern_default_instance_);
  }

  void Swap(Extern* other);

  // implements Message ----------------------------------------------

  inline Extern* New() const PROTOBUF_FINAL { return New(NULL); }

  Extern* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Extern& from);
  void MergeFrom(const Extern& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Extern* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.config.v1.ExternInstance instances = 3;
  int instances_size() const;
  void clear_instances();
  static const int kInstancesFieldNumber = 3;
  const ::p4::config::v1::ExternInstance& instances(int index) const;
  ::p4::config::v1::ExternInstance* mutable_instances(int index);
  ::p4::config::v1::ExternInstance* add_instances();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ExternInstance >*
      mutable_instances();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ExternInstance >&
      instances() const;

  // string extern_type_name = 2;
  void clear_extern_type_name();
  static const int kExternTypeNameFieldNumber = 2;
  const ::std::string& extern_type_name() const;
  void set_extern_type_name(const ::std::string& value);
  #if LANG_CXX11
  void set_extern_type_name(::std::string&& value);
  #endif
  void set_extern_type_name(const char* value);
  void set_extern_type_name(const char* value, size_t size);
  ::std::string* mutable_extern_type_name();
  ::std::string* release_extern_type_name();
  void set_allocated_extern_type_name(::std::string* extern_type_name);

  // uint32 extern_type_id = 1;
  void clear_extern_type_id();
  static const int kExternTypeIdFieldNumber = 1;
  ::google::protobuf::uint32 extern_type_id() const;
  void set_extern_type_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.Extern)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ExternInstance > instances_;
  ::google::protobuf::internal::ArenaStringPtr extern_type_name_;
  ::google::protobuf::uint32 extern_type_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExternInstance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.ExternInstance) */ {
 public:
  ExternInstance();
  virtual ~ExternInstance();

  ExternInstance(const ExternInstance& from);

  inline ExternInstance& operator=(const ExternInstance& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExternInstance& default_instance();

  static inline const ExternInstance* internal_default_instance() {
    return reinterpret_cast<const ExternInstance*>(
               &_ExternInstance_default_instance_);
  }

  void Swap(ExternInstance* other);

  // implements Message ----------------------------------------------

  inline ExternInstance* New() const PROTOBUF_FINAL { return New(NULL); }

  ExternInstance* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExternInstance& from);
  void MergeFrom(const ExternInstance& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExternInstance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.config.v1.Preamble preamble = 1;
  bool has_preamble() const;
  void clear_preamble();
  static const int kPreambleFieldNumber = 1;
  const ::p4::config::v1::Preamble& preamble() const;
  ::p4::config::v1::Preamble* mutable_preamble();
  ::p4::config::v1::Preamble* release_preamble();
  void set_allocated_preamble(::p4::config::v1::Preamble* preamble);

  // .google.protobuf.Any info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::google::protobuf::Any& info() const;
  ::google::protobuf::Any* mutable_info();
  ::google::protobuf::Any* release_info();
  void set_allocated_info(::google::protobuf::Any* info);

  // @@protoc_insertion_point(class_scope:p4.config.v1.ExternInstance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::config::v1::Preamble* preamble_;
  ::google::protobuf::Any* info_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchField : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.MatchField) */ {
 public:
  MatchField();
  virtual ~MatchField();

  MatchField(const MatchField& from);

  inline MatchField& operator=(const MatchField& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchField& default_instance();

  enum MatchCase {
    kMatchType = 5,
    kOtherMatchType = 7,
    MATCH_NOT_SET = 0,
  };

  static inline const MatchField* internal_default_instance() {
    return reinterpret_cast<const MatchField*>(
               &_MatchField_default_instance_);
  }

  void Swap(MatchField* other);

  // implements Message ----------------------------------------------

  inline MatchField* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchField* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchField& from);
  void MergeFrom(const MatchField& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchField* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MatchField_MatchType MatchType;
  static const MatchType UNSPECIFIED =
    MatchField_MatchType_UNSPECIFIED;
  static const MatchType EXACT =
    MatchField_MatchType_EXACT;
  static const MatchType LPM =
    MatchField_MatchType_LPM;
  static const MatchType TERNARY =
    MatchField_MatchType_TERNARY;
  static const MatchType RANGE =
    MatchField_MatchType_RANGE;
  static const MatchType OPTIONAL =
    MatchField_MatchType_OPTIONAL;
  static inline bool MatchType_IsValid(int value) {
    return MatchField_MatchType_IsValid(value);
  }
  static const MatchType MatchType_MIN =
    MatchField_MatchType_MatchType_MIN;
  static const MatchType MatchType_MAX =
    MatchField_MatchType_MatchType_MAX;
  static const int MatchType_ARRAYSIZE =
    MatchField_MatchType_MatchType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MatchType_descriptor() {
    return MatchField_MatchType_descriptor();
  }
  static inline const ::std::string& MatchType_Name(MatchType value) {
    return MatchField_MatchType_Name(value);
  }
  static inline bool MatchType_Parse(const ::std::string& name,
      MatchType* value) {
    return MatchField_MatchType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string annotations = 3;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 3;
  const ::std::string& annotations(int index) const;
  ::std::string* mutable_annotations(int index);
  void set_annotations(int index, const ::std::string& value);
  void set_annotations(int index, const char* value);
  void set_annotations(int index, const char* value, size_t size);
  ::std::string* add_annotations();
  void add_annotations(const ::std::string& value);
  void add_annotations(const char* value);
  void add_annotations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& annotations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_annotations();

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 9;
  int structured_annotations_size() const;
  void clear_structured_annotations();
  static const int kStructuredAnnotationsFieldNumber = 9;
  const ::p4::config::v1::StructuredAnnotation& structured_annotations(int index) const;
  ::p4::config::v1::StructuredAnnotation* mutable_structured_annotations(int index);
  ::p4::config::v1::StructuredAnnotation* add_structured_annotations();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
      mutable_structured_annotations();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
      structured_annotations() const;

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .p4.config.v1.Documentation doc = 6;
  bool has_doc() const;
  void clear_doc();
  static const int kDocFieldNumber = 6;
  const ::p4::config::v1::Documentation& doc() const;
  ::p4::config::v1::Documentation* mutable_doc();
  ::p4::config::v1::Documentation* release_doc();
  void set_allocated_doc(::p4::config::v1::Documentation* doc);

  // .p4.config.v1.P4NamedType type_name = 8;
  bool has_type_name() const;
  void clear_type_name();
  static const int kTypeNameFieldNumber = 8;
  const ::p4::config::v1::P4NamedType& type_name() const;
  ::p4::config::v1::P4NamedType* mutable_type_name();
  ::p4::config::v1::P4NamedType* release_type_name();
  void set_allocated_type_name(::p4::config::v1::P4NamedType* type_name);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // int32 bitwidth = 4;
  void clear_bitwidth();
  static const int kBitwidthFieldNumber = 4;
  ::google::protobuf::int32 bitwidth() const;
  void set_bitwidth(::google::protobuf::int32 value);

  // .p4.config.v1.MatchField.MatchType match_type = 5;
  private:
  bool has_match_type() const;
  public:
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 5;
  ::p4::config::v1::MatchField_MatchType match_type() const;
  void set_match_type(::p4::config::v1::MatchField_MatchType value);

  // string other_match_type = 7;
  private:
  bool has_other_match_type() const;
  public:
  void clear_other_match_type();
  static const int kOtherMatchTypeFieldNumber = 7;
  const ::std::string& other_match_type() const;
  void set_other_match_type(const ::std::string& value);
  #if LANG_CXX11
  void set_other_match_type(::std::string&& value);
  #endif
  void set_other_match_type(const char* value);
  void set_other_match_type(const char* value, size_t size);
  ::std::string* mutable_other_match_type();
  ::std::string* release_other_match_type();
  void set_allocated_other_match_type(::std::string* other_match_type);

  MatchCase match_case() const;
  // @@protoc_insertion_point(class_scope:p4.config.v1.MatchField)
 private:
  void set_has_match_type();
  void set_has_other_match_type();

  inline bool has_match() const;
  void clear_match();
  inline void clear_has_match();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> annotations_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation > structured_annotations_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::p4::config::v1::Documentation* doc_;
  ::p4::config::v1::P4NamedType* type_name_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 bitwidth_;
  union MatchUnion {
    MatchUnion() {}
    int match_type_;
    ::google::protobuf::internal::ArenaStringPtr other_match_type_;
  } match_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Table : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.Table) */ {
 public:
  Table();
  virtual ~Table();

  Table(const Table& from);

  inline Table& operator=(const Table& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Table& default_instance();

  static inline const Table* internal_default_instance() {
    return reinterpret_cast<const Table*>(
               &_Table_default_instance_);
  }

  void Swap(Table* other);

  // implements Message ----------------------------------------------

  inline Table* New() const PROTOBUF_FINAL { return New(NULL); }

  Table* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Table& from);
  void MergeFrom(const Table& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Table* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Table_IdleTimeoutBehavior IdleTimeoutBehavior;
  static const IdleTimeoutBehavior NO_TIMEOUT =
    Table_IdleTimeoutBehavior_NO_TIMEOUT;
  static const IdleTimeoutBehavior NOTIFY_CONTROL =
    Table_IdleTimeoutBehavior_NOTIFY_CONTROL;
  static inline bool IdleTimeoutBehavior_IsValid(int value) {
    return Table_IdleTimeoutBehavior_IsValid(value);
  }
  static const IdleTimeoutBehavior IdleTimeoutBehavior_MIN =
    Table_IdleTimeoutBehavior_IdleTimeoutBehavior_MIN;
  static const IdleTimeoutBehavior IdleTimeoutBehavior_MAX =
    Table_IdleTimeoutBehavior_IdleTimeoutBehavior_MAX;
  static const int IdleTimeoutBehavior_ARRAYSIZE =
    Table_IdleTimeoutBehavior_IdleTimeoutBehavior_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  IdleTimeoutBehavior_descriptor() {
    return Table_IdleTimeoutBehavior_descriptor();
  }
  static inline const ::std::string& IdleTimeoutBehavior_Name(IdleTimeoutBehavior value) {
    return Table_IdleTimeoutBehavior_Name(value);
  }
  static inline bool IdleTimeoutBehavior_Parse(const ::std::string& name,
      IdleTimeoutBehavior* value) {
    return Table_IdleTimeoutBehavior_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .p4.config.v1.MatchField match_fields = 2;
  int match_fields_size() const;
  void clear_match_fields();
  static const int kMatchFieldsFieldNumber = 2;
  const ::p4::config::v1::MatchField& match_fields(int index) const;
  ::p4::config::v1::MatchField* mutable_match_fields(int index);
  ::p4::config::v1::MatchField* add_match_fields();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::MatchField >*
      mutable_match_fields();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::MatchField >&
      match_fields() const;

  // repeated .p4.config.v1.ActionRef action_refs = 3;
  int action_refs_size() const;
  void clear_action_refs();
  static const int kActionRefsFieldNumber = 3;
  const ::p4::config::v1::ActionRef& action_refs(int index) const;
  ::p4::config::v1::ActionRef* mutable_action_refs(int index);
  ::p4::config::v1::ActionRef* add_action_refs();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ActionRef >*
      mutable_action_refs();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ActionRef >&
      action_refs() const;

  // repeated uint32 direct_resource_ids = 7;
  int direct_resource_ids_size() const;
  void clear_direct_resource_ids();
  static const int kDirectResourceIdsFieldNumber = 7;
  ::google::protobuf::uint32 direct_resource_ids(int index) const;
  void set_direct_resource_ids(int index, ::google::protobuf::uint32 value);
  void add_direct_resource_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      direct_resource_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_direct_resource_ids();

  // .p4.config.v1.Preamble preamble = 1;
  bool has_preamble() const;
  void clear_preamble();
  static const int kPreambleFieldNumber = 1;
  const ::p4::config::v1::Preamble& preamble() const;
  ::p4::config::v1::Preamble* mutable_preamble();
  ::p4::config::v1::Preamble* release_preamble();
  void set_allocated_preamble(::p4::config::v1::Preamble* preamble);

  // .google.protobuf.Any other_properties = 100;
  bool has_other_properties() const;
  void clear_other_properties();
  static const int kOtherPropertiesFieldNumber = 100;
  const ::google::protobuf::Any& other_properties() const;
  ::google::protobuf::Any* mutable_other_properties();
  ::google::protobuf::Any* release_other_properties();
  void set_allocated_other_properties(::google::protobuf::Any* other_properties);

  // uint32 const_default_action_id = 4;
  void clear_const_default_action_id();
  static const int kConstDefaultActionIdFieldNumber = 4;
  ::google::protobuf::uint32 const_default_action_id() const;
  void set_const_default_action_id(::google::protobuf::uint32 value);

  // uint32 implementation_id = 6;
  void clear_implementation_id();
  static const int kImplementationIdFieldNumber = 6;
  ::google::protobuf::uint32 implementation_id() const;
  void set_implementation_id(::google::protobuf::uint32 value);

  // int64 size = 8;
  void clear_size();
  static const int kSizeFieldNumber = 8;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // .p4.config.v1.Table.IdleTimeoutBehavior idle_timeout_behavior = 9;
  void clear_idle_timeout_behavior();
  static const int kIdleTimeoutBehaviorFieldNumber = 9;
  ::p4::config::v1::Table_IdleTimeoutBehavior idle_timeout_behavior() const;
  void set_idle_timeout_behavior(::p4::config::v1::Table_IdleTimeoutBehavior value);

  // bool is_const_table = 10;
  void clear_is_const_table();
  static const int kIsConstTableFieldNumber = 10;
  bool is_const_table() const;
  void set_is_const_table(bool value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.Table)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::MatchField > match_fields_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ActionRef > action_refs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > direct_resource_ids_;
  mutable int _direct_resource_ids_cached_byte_size_;
  ::p4::config::v1::Preamble* preamble_;
  ::google::protobuf::Any* other_properties_;
  ::google::protobuf::uint32 const_default_action_id_;
  ::google::protobuf::uint32 implementation_id_;
  ::google::protobuf::int64 size_;
  int idle_timeout_behavior_;
  bool is_const_table_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionRef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.ActionRef) */ {
 public:
  ActionRef();
  virtual ~ActionRef();

  ActionRef(const ActionRef& from);

  inline ActionRef& operator=(const ActionRef& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionRef& default_instance();

  static inline const ActionRef* internal_default_instance() {
    return reinterpret_cast<const ActionRef*>(
               &_ActionRef_default_instance_);
  }

  void Swap(ActionRef* other);

  // implements Message ----------------------------------------------

  inline ActionRef* New() const PROTOBUF_FINAL { return New(NULL); }

  ActionRef* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActionRef& from);
  void MergeFrom(const ActionRef& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActionRef* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ActionRef_Scope Scope;
  static const Scope TABLE_AND_DEFAULT =
    ActionRef_Scope_TABLE_AND_DEFAULT;
  static const Scope TABLE_ONLY =
    ActionRef_Scope_TABLE_ONLY;
  static const Scope DEFAULT_ONLY =
    ActionRef_Scope_DEFAULT_ONLY;
  static inline bool Scope_IsValid(int value) {
    return ActionRef_Scope_IsValid(value);
  }
  static const Scope Scope_MIN =
    ActionRef_Scope_Scope_MIN;
  static const Scope Scope_MAX =
    ActionRef_Scope_Scope_MAX;
  static const int Scope_ARRAYSIZE =
    ActionRef_Scope_Scope_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Scope_descriptor() {
    return ActionRef_Scope_descriptor();
  }
  static inline const ::std::string& Scope_Name(Scope value) {
    return ActionRef_Scope_Name(value);
  }
  static inline bool Scope_Parse(const ::std::string& name,
      Scope* value) {
    return ActionRef_Scope_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string annotations = 2;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 2;
  const ::std::string& annotations(int index) const;
  ::std::string* mutable_annotations(int index);
  void set_annotations(int index, const ::std::string& value);
  void set_annotations(int index, const char* value);
  void set_annotations(int index, const char* value, size_t size);
  ::std::string* add_annotations();
  void add_annotations(const ::std::string& value);
  void add_annotations(const char* value);
  void add_annotations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& annotations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_annotations();

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
  int structured_annotations_size() const;
  void clear_structured_annotations();
  static const int kStructuredAnnotationsFieldNumber = 4;
  const ::p4::config::v1::StructuredAnnotation& structured_annotations(int index) const;
  ::p4::config::v1::StructuredAnnotation* mutable_structured_annotations(int index);
  ::p4::config::v1::StructuredAnnotation* add_structured_annotations();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
      mutable_structured_annotations();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
      structured_annotations() const;

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // .p4.config.v1.ActionRef.Scope scope = 3;
  void clear_scope();
  static const int kScopeFieldNumber = 3;
  ::p4::config::v1::ActionRef_Scope scope() const;
  void set_scope(::p4::config::v1::ActionRef_Scope value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.ActionRef)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> annotations_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation > structured_annotations_;
  ::google::protobuf::uint32 id_;
  int scope_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Action_Param : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.Action.Param) */ {
 public:
  Action_Param();
  virtual ~Action_Param();

  Action_Param(const Action_Param& from);

  inline Action_Param& operator=(const Action_Param& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Action_Param& default_instance();

  static inline const Action_Param* internal_default_instance() {
    return reinterpret_cast<const Action_Param*>(
               &_Action_Param_default_instance_);
  }

  void Swap(Action_Param* other);

  // implements Message ----------------------------------------------

  inline Action_Param* New() const PROTOBUF_FINAL { return New(NULL); }

  Action_Param* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Action_Param& from);
  void MergeFrom(const Action_Param& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Action_Param* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string annotations = 3;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 3;
  const ::std::string& annotations(int index) const;
  ::std::string* mutable_annotations(int index);
  void set_annotations(int index, const ::std::string& value);
  void set_annotations(int index, const char* value);
  void set_annotations(int index, const char* value, size_t size);
  ::std::string* add_annotations();
  void add_annotations(const ::std::string& value);
  void add_annotations(const char* value);
  void add_annotations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& annotations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_annotations();

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 7;
  int structured_annotations_size() const;
  void clear_structured_annotations();
  static const int kStructuredAnnotationsFieldNumber = 7;
  const ::p4::config::v1::StructuredAnnotation& structured_annotations(int index) const;
  ::p4::config::v1::StructuredAnnotation* mutable_structured_annotations(int index);
  ::p4::config::v1::StructuredAnnotation* add_structured_annotations();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
      mutable_structured_annotations();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
      structured_annotations() const;

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .p4.config.v1.Documentation doc = 5;
  bool has_doc() const;
  void clear_doc();
  static const int kDocFieldNumber = 5;
  const ::p4::config::v1::Documentation& doc() const;
  ::p4::config::v1::Documentation* mutable_doc();
  ::p4::config::v1::Documentation* release_doc();
  void set_allocated_doc(::p4::config::v1::Documentation* doc);

  // .p4.config.v1.P4NamedType type_name = 6;
  bool has_type_name() const;
  void clear_type_name();
  static const int kTypeNameFieldNumber = 6;
  const ::p4::config::v1::P4NamedType& type_name() const;
  ::p4::config::v1::P4NamedType* mutable_type_name();
  ::p4::config::v1::P4NamedType* release_type_name();
  void set_allocated_type_name(::p4::config::v1::P4NamedType* type_name);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // int32 bitwidth = 4;
  void clear_bitwidth();
  static const int kBitwidthFieldNumber = 4;
  ::google::protobuf::int32 bitwidth() const;
  void set_bitwidth(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.Action.Param)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> annotations_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation > structured_annotations_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::p4::config::v1::Documentation* doc_;
  ::p4::config::v1::P4NamedType* type_name_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 bitwidth_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Action : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.Action) */ {
 public:
  Action();
  virtual ~Action();

  Action(const Action& from);

  inline Action& operator=(const Action& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Action& default_instance();

  static inline const Action* internal_default_instance() {
    return reinterpret_cast<const Action*>(
               &_Action_default_instance_);
  }

  void Swap(Action* other);

  // implements Message ----------------------------------------------

  inline Action* New() const PROTOBUF_FINAL { return New(NULL); }

  Action* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Action& from);
  void MergeFrom(const Action& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Action* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Action_Param Param;

  // accessors -------------------------------------------------------

  // repeated .p4.config.v1.Action.Param params = 2;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 2;
  const ::p4::config::v1::Action_Param& params(int index) const;
  ::p4::config::v1::Action_Param* mutable_params(int index);
  ::p4::config::v1::Action_Param* add_params();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Action_Param >*
      mutable_params();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Action_Param >&
      params() const;

  // .p4.config.v1.Preamble preamble = 1;
  bool has_preamble() const;
  void clear_preamble();
  static const int kPreambleFieldNumber = 1;
  const ::p4::config::v1::Preamble& preamble() const;
  ::p4::config::v1::Preamble* mutable_preamble();
  ::p4::config::v1::Preamble* release_preamble();
  void set_allocated_preamble(::p4::config::v1::Preamble* preamble);

  // @@protoc_insertion_point(class_scope:p4.config.v1.Action)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Action_Param > params_;
  ::p4::config::v1::Preamble* preamble_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionProfile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.ActionProfile) */ {
 public:
  ActionProfile();
  virtual ~ActionProfile();

  ActionProfile(const ActionProfile& from);

  inline ActionProfile& operator=(const ActionProfile& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionProfile& default_instance();

  static inline const ActionProfile* internal_default_instance() {
    return reinterpret_cast<const ActionProfile*>(
               &_ActionProfile_default_instance_);
  }

  void Swap(ActionProfile* other);

  // implements Message ----------------------------------------------

  inline ActionProfile* New() const PROTOBUF_FINAL { return New(NULL); }

  ActionProfile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActionProfile& from);
  void MergeFrom(const ActionProfile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActionProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 table_ids = 2;
  int table_ids_size() const;
  void clear_table_ids();
  static const int kTableIdsFieldNumber = 2;
  ::google::protobuf::uint32 table_ids(int index) const;
  void set_table_ids(int index, ::google::protobuf::uint32 value);
  void add_table_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      table_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_table_ids();

  // .p4.config.v1.Preamble preamble = 1;
  bool has_preamble() const;
  void clear_preamble();
  static const int kPreambleFieldNumber = 1;
  const ::p4::config::v1::Preamble& preamble() const;
  ::p4::config::v1::Preamble* mutable_preamble();
  ::p4::config::v1::Preamble* release_preamble();
  void set_allocated_preamble(::p4::config::v1::Preamble* preamble);

  // int64 size = 4;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // bool with_selector = 3;
  void clear_with_selector();
  static const int kWithSelectorFieldNumber = 3;
  bool with_selector() const;
  void set_with_selector(bool value);

  // int32 max_group_size = 5;
  void clear_max_group_size();
  static const int kMaxGroupSizeFieldNumber = 5;
  ::google::protobuf::int32 max_group_size() const;
  void set_max_group_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.ActionProfile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > table_ids_;
  mutable int _table_ids_cached_byte_size_;
  ::p4::config::v1::Preamble* preamble_;
  ::google::protobuf::int64 size_;
  bool with_selector_;
  ::google::protobuf::int32 max_group_size_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CounterSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.CounterSpec) */ {
 public:
  CounterSpec();
  virtual ~CounterSpec();

  CounterSpec(const CounterSpec& from);

  inline CounterSpec& operator=(const CounterSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CounterSpec& default_instance();

  static inline const CounterSpec* internal_default_instance() {
    return reinterpret_cast<const CounterSpec*>(
               &_CounterSpec_default_instance_);
  }

  void Swap(CounterSpec* other);

  // implements Message ----------------------------------------------

  inline CounterSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  CounterSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CounterSpec& from);
  void MergeFrom(const CounterSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CounterSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CounterSpec_Unit Unit;
  static const Unit UNSPECIFIED =
    CounterSpec_Unit_UNSPECIFIED;
  static const Unit BYTES =
    CounterSpec_Unit_BYTES;
  static const Unit PACKETS =
    CounterSpec_Unit_PACKETS;
  static const Unit BOTH =
    CounterSpec_Unit_BOTH;
  static inline bool Unit_IsValid(int value) {
    return CounterSpec_Unit_IsValid(value);
  }
  static const Unit Unit_MIN =
    CounterSpec_Unit_Unit_MIN;
  static const Unit Unit_MAX =
    CounterSpec_Unit_Unit_MAX;
  static const int Unit_ARRAYSIZE =
    CounterSpec_Unit_Unit_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Unit_descriptor() {
    return CounterSpec_Unit_descriptor();
  }
  static inline const ::std::string& Unit_Name(Unit value) {
    return CounterSpec_Unit_Name(value);
  }
  static inline bool Unit_Parse(const ::std::string& name,
      Unit* value) {
    return CounterSpec_Unit_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .p4.config.v1.CounterSpec.Unit unit = 1;
  void clear_unit();
  static const int kUnitFieldNumber = 1;
  ::p4::config::v1::CounterSpec_Unit unit() const;
  void set_unit(::p4::config::v1::CounterSpec_Unit value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.CounterSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int unit_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Counter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.Counter) */ {
 public:
  Counter();
  virtual ~Counter();

  Counter(const Counter& from);

  inline Counter& operator=(const Counter& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Counter& default_instance();

  static inline const Counter* internal_default_instance() {
    return reinterpret_cast<const Counter*>(
               &_Counter_default_instance_);
  }

  void Swap(Counter* other);

  // implements Message ----------------------------------------------

  inline Counter* New() const PROTOBUF_FINAL { return New(NULL); }

  Counter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Counter& from);
  void MergeFrom(const Counter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Counter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.config.v1.Preamble preamble = 1;
  bool has_preamble() const;
  void clear_preamble();
  static const int kPreambleFieldNumber = 1;
  const ::p4::config::v1::Preamble& preamble() const;
  ::p4::config::v1::Preamble* mutable_preamble();
  ::p4::config::v1::Preamble* release_preamble();
  void set_allocated_preamble(::p4::config::v1::Preamble* preamble);

  // .p4.config.v1.CounterSpec spec = 2;
  bool has_spec() const;
  void clear_spec();
  static const int kSpecFieldNumber = 2;
  const ::p4::config::v1::CounterSpec& spec() const;
  ::p4::config::v1::CounterSpec* mutable_spec();
  ::p4::config::v1::CounterSpec* release_spec();
  void set_allocated_spec(::p4::config::v1::CounterSpec* spec);

  // .p4.config.v1.P4NamedType index_type_name = 4;
  bool has_index_type_name() const;
  void clear_index_type_name();
  static const int kIndexTypeNameFieldNumber = 4;
  const ::p4::config::v1::P4NamedType& index_type_name() const;
  ::p4::config::v1::P4NamedType* mutable_index_type_name();
  ::p4::config::v1::P4NamedType* release_index_type_name();
  void set_allocated_index_type_name(::p4::config::v1::P4NamedType* index_type_name);

  // int64 size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.Counter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::config::v1::Preamble* preamble_;
  ::p4::config::v1::CounterSpec* spec_;
  ::p4::config::v1::P4NamedType* index_type_name_;
  ::google::protobuf::int64 size_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DirectCounter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.DirectCounter) */ {
 public:
  DirectCounter();
  virtual ~DirectCounter();

  DirectCounter(const DirectCounter& from);

  inline DirectCounter& operator=(const DirectCounter& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DirectCounter& default_instance();

  static inline const DirectCounter* internal_default_instance() {
    return reinterpret_cast<const DirectCounter*>(
               &_DirectCounter_default_instance_);
  }

  void Swap(DirectCounter* other);

  // implements Message ----------------------------------------------

  inline DirectCounter* New() const PROTOBUF_FINAL { return New(NULL); }

  DirectCounter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DirectCounter& from);
  void MergeFrom(const DirectCounter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DirectCounter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.config.v1.Preamble preamble = 1;
  bool has_preamble() const;
  void clear_preamble();
  static const int kPreambleFieldNumber = 1;
  const ::p4::config::v1::Preamble& preamble() const;
  ::p4::config::v1::Preamble* mutable_preamble();
  ::p4::config::v1::Preamble* release_preamble();
  void set_allocated_preamble(::p4::config::v1::Preamble* preamble);

  // .p4.config.v1.CounterSpec spec = 2;
  bool has_spec() const;
  void clear_spec();
  static const int kSpecFieldNumber = 2;
  const ::p4::config::v1::CounterSpec& spec() const;
  ::p4::config::v1::CounterSpec* mutable_spec();
  ::p4::config::v1::CounterSpec* release_spec();
  void set_allocated_spec(::p4::config::v1::CounterSpec* spec);

  // uint32 direct_table_id = 3;
  void clear_direct_table_id();
  static const int kDirectTableIdFieldNumber = 3;
  ::google::protobuf::uint32 direct_table_id() const;
  void set_direct_table_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.DirectCounter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::config::v1::Preamble* preamble_;
  ::p4::config::v1::CounterSpec* spec_;
  ::google::protobuf::uint32 direct_table_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MeterSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.MeterSpec) */ {
 public:
  MeterSpec();
  virtual ~MeterSpec();

  MeterSpec(const MeterSpec& from);

  inline MeterSpec& operator=(const MeterSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MeterSpec& default_instance();

  static inline const MeterSpec* internal_default_instance() {
    return reinterpret_cast<const MeterSpec*>(
               &_MeterSpec_default_instance_);
  }

  void Swap(MeterSpec* other);

  // implements Message ----------------------------------------------

  inline MeterSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  MeterSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MeterSpec& from);
  void MergeFrom(const MeterSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MeterSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MeterSpec_Unit Unit;
  static const Unit UNSPECIFIED =
    MeterSpec_Unit_UNSPECIFIED;
  static const Unit BYTES =
    MeterSpec_Unit_BYTES;
  static const Unit PACKETS =
    MeterSpec_Unit_PACKETS;
  static inline bool Unit_IsValid(int value) {
    return MeterSpec_Unit_IsValid(value);
  }
  static const Unit Unit_MIN =
    MeterSpec_Unit_Unit_MIN;
  static const Unit Unit_MAX =
    MeterSpec_Unit_Unit_MAX;
  static const int Unit_ARRAYSIZE =
    MeterSpec_Unit_Unit_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Unit_descriptor() {
    return MeterSpec_Unit_descriptor();
  }
  static inline const ::std::string& Unit_Name(Unit value) {
    return MeterSpec_Unit_Name(value);
  }
  static inline bool Unit_Parse(const ::std::string& name,
      Unit* value) {
    return MeterSpec_Unit_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .p4.config.v1.MeterSpec.Unit unit = 1;
  void clear_unit();
  static const int kUnitFieldNumber = 1;
  ::p4::config::v1::MeterSpec_Unit unit() const;
  void set_unit(::p4::config::v1::MeterSpec_Unit value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.MeterSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int unit_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Meter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.Meter) */ {
 public:
  Meter();
  virtual ~Meter();

  Meter(const Meter& from);

  inline Meter& operator=(const Meter& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Meter& default_instance();

  static inline const Meter* internal_default_instance() {
    return reinterpret_cast<const Meter*>(
               &_Meter_default_instance_);
  }

  void Swap(Meter* other);

  // implements Message ----------------------------------------------

  inline Meter* New() const PROTOBUF_FINAL { return New(NULL); }

  Meter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Meter& from);
  void MergeFrom(const Meter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Meter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.config.v1.Preamble preamble = 1;
  bool has_preamble() const;
  void clear_preamble();
  static const int kPreambleFieldNumber = 1;
  const ::p4::config::v1::Preamble& preamble() const;
  ::p4::config::v1::Preamble* mutable_preamble();
  ::p4::config::v1::Preamble* release_preamble();
  void set_allocated_preamble(::p4::config::v1::Preamble* preamble);

  // .p4.config.v1.MeterSpec spec = 2;
  bool has_spec() const;
  void clear_spec();
  static const int kSpecFieldNumber = 2;
  const ::p4::config::v1::MeterSpec& spec() const;
  ::p4::config::v1::MeterSpec* mutable_spec();
  ::p4::config::v1::MeterSpec* release_spec();
  void set_allocated_spec(::p4::config::v1::MeterSpec* spec);

  // .p4.config.v1.P4NamedType index_type_name = 4;
  bool has_index_type_name() const;
  void clear_index_type_name();
  static const int kIndexTypeNameFieldNumber = 4;
  const ::p4::config::v1::P4NamedType& index_type_name() const;
  ::p4::config::v1::P4NamedType* mutable_index_type_name();
  ::p4::config::v1::P4NamedType* release_index_type_name();
  void set_allocated_index_type_name(::p4::config::v1::P4NamedType* index_type_name);

  // int64 size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.Meter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::config::v1::Preamble* preamble_;
  ::p4::config::v1::MeterSpec* spec_;
  ::p4::config::v1::P4NamedType* index_type_name_;
  ::google::protobuf::int64 size_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DirectMeter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.DirectMeter) */ {
 public:
  DirectMeter();
  virtual ~DirectMeter();

  DirectMeter(const DirectMeter& from);

  inline DirectMeter& operator=(const DirectMeter& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DirectMeter& default_instance();

  static inline const DirectMeter* internal_default_instance() {
    return reinterpret_cast<const DirectMeter*>(
               &_DirectMeter_default_instance_);
  }

  void Swap(DirectMeter* other);

  // implements Message ----------------------------------------------

  inline DirectMeter* New() const PROTOBUF_FINAL { return New(NULL); }

  DirectMeter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DirectMeter& from);
  void MergeFrom(const DirectMeter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DirectMeter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.config.v1.Preamble preamble = 1;
  bool has_preamble() const;
  void clear_preamble();
  static const int kPreambleFieldNumber = 1;
  const ::p4::config::v1::Preamble& preamble() const;
  ::p4::config::v1::Preamble* mutable_preamble();
  ::p4::config::v1::Preamble* release_preamble();
  void set_allocated_preamble(::p4::config::v1::Preamble* preamble);

  // .p4.config.v1.MeterSpec spec = 2;
  bool has_spec() const;
  void clear_spec();
  static const int kSpecFieldNumber = 2;
  const ::p4::config::v1::MeterSpec& spec() const;
  ::p4::config::v1::MeterSpec* mutable_spec();
  ::p4::config::v1::MeterSpec* release_spec();
  void set_allocated_spec(::p4::config::v1::MeterSpec* spec);

  // uint32 direct_table_id = 3;
  void clear_direct_table_id();
  static const int kDirectTableIdFieldNumber = 3;
  ::google::protobuf::uint32 direct_table_id() const;
  void set_direct_table_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.DirectMeter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::config::v1::Preamble* preamble_;
  ::p4::config::v1::MeterSpec* spec_;
  ::google::protobuf::uint32 direct_table_id_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ControllerPacketMetadata_Metadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.ControllerPacketMetadata.Metadata) */ {
 public:
  ControllerPacketMetadata_Metadata();
  virtual ~ControllerPacketMetadata_Metadata();

  ControllerPacketMetadata_Metadata(const ControllerPacketMetadata_Metadata& from);

  inline ControllerPacketMetadata_Metadata& operator=(const ControllerPacketMetadata_Metadata& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ControllerPacketMetadata_Metadata& default_instance();

  static inline const ControllerPacketMetadata_Metadata* internal_default_instance() {
    return reinterpret_cast<const ControllerPacketMetadata_Metadata*>(
               &_ControllerPacketMetadata_Metadata_default_instance_);
  }

  void Swap(ControllerPacketMetadata_Metadata* other);

  // implements Message ----------------------------------------------

  inline ControllerPacketMetadata_Metadata* New() const PROTOBUF_FINAL { return New(NULL); }

  ControllerPacketMetadata_Metadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ControllerPacketMetadata_Metadata& from);
  void MergeFrom(const ControllerPacketMetadata_Metadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ControllerPacketMetadata_Metadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string annotations = 3;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 3;
  const ::std::string& annotations(int index) const;
  ::std::string* mutable_annotations(int index);
  void set_annotations(int index, const ::std::string& value);
  void set_annotations(int index, const char* value);
  void set_annotations(int index, const char* value, size_t size);
  ::std::string* add_annotations();
  void add_annotations(const ::std::string& value);
  void add_annotations(const char* value);
  void add_annotations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& annotations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_annotations();

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 6;
  int structured_annotations_size() const;
  void clear_structured_annotations();
  static const int kStructuredAnnotationsFieldNumber = 6;
  const ::p4::config::v1::StructuredAnnotation& structured_annotations(int index) const;
  ::p4::config::v1::StructuredAnnotation* mutable_structured_annotations(int index);
  ::p4::config::v1::StructuredAnnotation* add_structured_annotations();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
      mutable_structured_annotations();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
      structured_annotations() const;

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .p4.config.v1.P4NamedType type_name = 5;
  bool has_type_name() const;
  void clear_type_name();
  static const int kTypeNameFieldNumber = 5;
  const ::p4::config::v1::P4NamedType& type_name() const;
  ::p4::config::v1::P4NamedType* mutable_type_name();
  ::p4::config::v1::P4NamedType* release_type_name();
  void set_allocated_type_name(::p4::config::v1::P4NamedType* type_name);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // int32 bitwidth = 4;
  void clear_bitwidth();
  static const int kBitwidthFieldNumber = 4;
  ::google::protobuf::int32 bitwidth() const;
  void set_bitwidth(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.ControllerPacketMetadata.Metadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> annotations_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation > structured_annotations_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::p4::config::v1::P4NamedType* type_name_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 bitwidth_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ControllerPacketMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.ControllerPacketMetadata) */ {
 public:
  ControllerPacketMetadata();
  virtual ~ControllerPacketMetadata();

  ControllerPacketMetadata(const ControllerPacketMetadata& from);

  inline ControllerPacketMetadata& operator=(const ControllerPacketMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ControllerPacketMetadata& default_instance();

  static inline const ControllerPacketMetadata* internal_default_instance() {
    return reinterpret_cast<const ControllerPacketMetadata*>(
               &_ControllerPacketMetadata_default_instance_);
  }

  void Swap(ControllerPacketMetadata* other);

  // implements Message ----------------------------------------------

  inline ControllerPacketMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  ControllerPacketMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ControllerPacketMetadata& from);
  void MergeFrom(const ControllerPacketMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ControllerPacketMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ControllerPacketMetadata_Metadata Metadata;

  // accessors -------------------------------------------------------

  // repeated .p4.config.v1.ControllerPacketMetadata.Metadata metadata = 2;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 2;
  const ::p4::config::v1::ControllerPacketMetadata_Metadata& metadata(int index) const;
  ::p4::config::v1::ControllerPacketMetadata_Metadata* mutable_metadata(int index);
  ::p4::config::v1::ControllerPacketMetadata_Metadata* add_metadata();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ControllerPacketMetadata_Metadata >*
      mutable_metadata();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ControllerPacketMetadata_Metadata >&
      metadata() const;

  // .p4.config.v1.Preamble preamble = 1;
  bool has_preamble() const;
  void clear_preamble();
  static const int kPreambleFieldNumber = 1;
  const ::p4::config::v1::Preamble& preamble() const;
  ::p4::config::v1::Preamble* mutable_preamble();
  ::p4::config::v1::Preamble* release_preamble();
  void set_allocated_preamble(::p4::config::v1::Preamble* preamble);

  // @@protoc_insertion_point(class_scope:p4.config.v1.ControllerPacketMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ControllerPacketMetadata_Metadata > metadata_;
  ::p4::config::v1::Preamble* preamble_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ValueSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.ValueSet) */ {
 public:
  ValueSet();
  virtual ~ValueSet();

  ValueSet(const ValueSet& from);

  inline ValueSet& operator=(const ValueSet& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ValueSet& default_instance();

  static inline const ValueSet* internal_default_instance() {
    return reinterpret_cast<const ValueSet*>(
               &_ValueSet_default_instance_);
  }

  void Swap(ValueSet* other);

  // implements Message ----------------------------------------------

  inline ValueSet* New() const PROTOBUF_FINAL { return New(NULL); }

  ValueSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ValueSet& from);
  void MergeFrom(const ValueSet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ValueSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.config.v1.MatchField match = 2;
  int match_size() const;
  void clear_match();
  static const int kMatchFieldNumber = 2;
  const ::p4::config::v1::MatchField& match(int index) const;
  ::p4::config::v1::MatchField* mutable_match(int index);
  ::p4::config::v1::MatchField* add_match();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::MatchField >*
      mutable_match();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::MatchField >&
      match() const;

  // .p4.config.v1.Preamble preamble = 1;
  bool has_preamble() const;
  void clear_preamble();
  static const int kPreambleFieldNumber = 1;
  const ::p4::config::v1::Preamble& preamble() const;
  ::p4::config::v1::Preamble* mutable_preamble();
  ::p4::config::v1::Preamble* release_preamble();
  void set_allocated_preamble(::p4::config::v1::Preamble* preamble);

  // int32 size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.ValueSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::MatchField > match_;
  ::p4::config::v1::Preamble* preamble_;
  ::google::protobuf::int32 size_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Register : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.Register) */ {
 public:
  Register();
  virtual ~Register();

  Register(const Register& from);

  inline Register& operator=(const Register& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Register& default_instance();

  static inline const Register* internal_default_instance() {
    return reinterpret_cast<const Register*>(
               &_Register_default_instance_);
  }

  void Swap(Register* other);

  // implements Message ----------------------------------------------

  inline Register* New() const PROTOBUF_FINAL { return New(NULL); }

  Register* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Register& from);
  void MergeFrom(const Register& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Register* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.config.v1.Preamble preamble = 1;
  bool has_preamble() const;
  void clear_preamble();
  static const int kPreambleFieldNumber = 1;
  const ::p4::config::v1::Preamble& preamble() const;
  ::p4::config::v1::Preamble* mutable_preamble();
  ::p4::config::v1::Preamble* release_preamble();
  void set_allocated_preamble(::p4::config::v1::Preamble* preamble);

  // .p4.config.v1.P4DataTypeSpec type_spec = 2;
  bool has_type_spec() const;
  void clear_type_spec();
  static const int kTypeSpecFieldNumber = 2;
  const ::p4::config::v1::P4DataTypeSpec& type_spec() const;
  ::p4::config::v1::P4DataTypeSpec* mutable_type_spec();
  ::p4::config::v1::P4DataTypeSpec* release_type_spec();
  void set_allocated_type_spec(::p4::config::v1::P4DataTypeSpec* type_spec);

  // .p4.config.v1.P4NamedType index_type_name = 4;
  bool has_index_type_name() const;
  void clear_index_type_name();
  static const int kIndexTypeNameFieldNumber = 4;
  const ::p4::config::v1::P4NamedType& index_type_name() const;
  ::p4::config::v1::P4NamedType* mutable_index_type_name();
  ::p4::config::v1::P4NamedType* release_index_type_name();
  void set_allocated_index_type_name(::p4::config::v1::P4NamedType* index_type_name);

  // int32 size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.Register)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::config::v1::Preamble* preamble_;
  ::p4::config::v1::P4DataTypeSpec* type_spec_;
  ::p4::config::v1::P4NamedType* index_type_name_;
  ::google::protobuf::int32 size_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Digest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.Digest) */ {
 public:
  Digest();
  virtual ~Digest();

  Digest(const Digest& from);

  inline Digest& operator=(const Digest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Digest& default_instance();

  static inline const Digest* internal_default_instance() {
    return reinterpret_cast<const Digest*>(
               &_Digest_default_instance_);
  }

  void Swap(Digest* other);

  // implements Message ----------------------------------------------

  inline Digest* New() const PROTOBUF_FINAL { return New(NULL); }

  Digest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Digest& from);
  void MergeFrom(const Digest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Digest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.config.v1.Preamble preamble = 1;
  bool has_preamble() const;
  void clear_preamble();
  static const int kPreambleFieldNumber = 1;
  const ::p4::config::v1::Preamble& preamble() const;
  ::p4::config::v1::Preamble* mutable_preamble();
  ::p4::config::v1::Preamble* release_preamble();
  void set_allocated_preamble(::p4::config::v1::Preamble* preamble);

  // .p4.config.v1.P4DataTypeSpec type_spec = 2;
  bool has_type_spec() const;
  void clear_type_spec();
  static const int kTypeSpecFieldNumber = 2;
  const ::p4::config::v1::P4DataTypeSpec& type_spec() const;
  ::p4::config::v1::P4DataTypeSpec* mutable_type_spec();
  ::p4::config::v1::P4DataTypeSpec* release_type_spec();
  void set_allocated_type_spec(::p4::config::v1::P4DataTypeSpec* type_spec);

  // @@protoc_insertion_point(class_scope:p4.config.v1.Digest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::config::v1::Preamble* preamble_;
  ::p4::config::v1::P4DataTypeSpec* type_spec_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// P4Info

// .p4.config.v1.PkgInfo pkg_info = 1;
inline bool P4Info::has_pkg_info() const {
  return this != internal_default_instance() && pkg_info_ != NULL;
}
inline void P4Info::clear_pkg_info() {
  if (GetArenaNoVirtual() == NULL && pkg_info_ != NULL) delete pkg_info_;
  pkg_info_ = NULL;
}
inline const ::p4::config::v1::PkgInfo& P4Info::pkg_info() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.pkg_info)
  return pkg_info_ != NULL ? *pkg_info_
                         : *::p4::config::v1::PkgInfo::internal_default_instance();
}
inline ::p4::config::v1::PkgInfo* P4Info::mutable_pkg_info() {
  
  if (pkg_info_ == NULL) {
    pkg_info_ = new ::p4::config::v1::PkgInfo;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.pkg_info)
  return pkg_info_;
}
inline ::p4::config::v1::PkgInfo* P4Info::release_pkg_info() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4Info.pkg_info)
  
  ::p4::config::v1::PkgInfo* temp = pkg_info_;
  pkg_info_ = NULL;
  return temp;
}
inline void P4Info::set_allocated_pkg_info(::p4::config::v1::PkgInfo* pkg_info) {
  delete pkg_info_;
  pkg_info_ = pkg_info;
  if (pkg_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4Info.pkg_info)
}

// repeated .p4.config.v1.Table tables = 2;
inline int P4Info::tables_size() const {
  return tables_.size();
}
inline void P4Info::clear_tables() {
  tables_.Clear();
}
inline const ::p4::config::v1::Table& P4Info::tables(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.tables)
  return tables_.Get(index);
}
inline ::p4::config::v1::Table* P4Info::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.tables)
  return tables_.Mutable(index);
}
inline ::p4::config::v1::Table* P4Info::add_tables() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.tables)
  return tables_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Table >*
P4Info::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.tables)
  return &tables_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Table >&
P4Info::tables() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.tables)
  return tables_;
}

// repeated .p4.config.v1.Action actions = 3;
inline int P4Info::actions_size() const {
  return actions_.size();
}
inline void P4Info::clear_actions() {
  actions_.Clear();
}
inline const ::p4::config::v1::Action& P4Info::actions(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.actions)
  return actions_.Get(index);
}
inline ::p4::config::v1::Action* P4Info::mutable_actions(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.actions)
  return actions_.Mutable(index);
}
inline ::p4::config::v1::Action* P4Info::add_actions() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.actions)
  return actions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Action >*
P4Info::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.actions)
  return &actions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Action >&
P4Info::actions() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.actions)
  return actions_;
}

// repeated .p4.config.v1.ActionProfile action_profiles = 4;
inline int P4Info::action_profiles_size() const {
  return action_profiles_.size();
}
inline void P4Info::clear_action_profiles() {
  action_profiles_.Clear();
}
inline const ::p4::config::v1::ActionProfile& P4Info::action_profiles(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.action_profiles)
  return action_profiles_.Get(index);
}
inline ::p4::config::v1::ActionProfile* P4Info::mutable_action_profiles(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.action_profiles)
  return action_profiles_.Mutable(index);
}
inline ::p4::config::v1::ActionProfile* P4Info::add_action_profiles() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.action_profiles)
  return action_profiles_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ActionProfile >*
P4Info::mutable_action_profiles() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.action_profiles)
  return &action_profiles_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ActionProfile >&
P4Info::action_profiles() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.action_profiles)
  return action_profiles_;
}

// repeated .p4.config.v1.Counter counters = 5;
inline int P4Info::counters_size() const {
  return counters_.size();
}
inline void P4Info::clear_counters() {
  counters_.Clear();
}
inline const ::p4::config::v1::Counter& P4Info::counters(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.counters)
  return counters_.Get(index);
}
inline ::p4::config::v1::Counter* P4Info::mutable_counters(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.counters)
  return counters_.Mutable(index);
}
inline ::p4::config::v1::Counter* P4Info::add_counters() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.counters)
  return counters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Counter >*
P4Info::mutable_counters() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.counters)
  return &counters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Counter >&
P4Info::counters() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.counters)
  return counters_;
}

// repeated .p4.config.v1.DirectCounter direct_counters = 6;
inline int P4Info::direct_counters_size() const {
  return direct_counters_.size();
}
inline void P4Info::clear_direct_counters() {
  direct_counters_.Clear();
}
inline const ::p4::config::v1::DirectCounter& P4Info::direct_counters(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.direct_counters)
  return direct_counters_.Get(index);
}
inline ::p4::config::v1::DirectCounter* P4Info::mutable_direct_counters(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.direct_counters)
  return direct_counters_.Mutable(index);
}
inline ::p4::config::v1::DirectCounter* P4Info::add_direct_counters() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.direct_counters)
  return direct_counters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::DirectCounter >*
P4Info::mutable_direct_counters() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.direct_counters)
  return &direct_counters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::DirectCounter >&
P4Info::direct_counters() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.direct_counters)
  return direct_counters_;
}

// repeated .p4.config.v1.Meter meters = 7;
inline int P4Info::meters_size() const {
  return meters_.size();
}
inline void P4Info::clear_meters() {
  meters_.Clear();
}
inline const ::p4::config::v1::Meter& P4Info::meters(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.meters)
  return meters_.Get(index);
}
inline ::p4::config::v1::Meter* P4Info::mutable_meters(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.meters)
  return meters_.Mutable(index);
}
inline ::p4::config::v1::Meter* P4Info::add_meters() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.meters)
  return meters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Meter >*
P4Info::mutable_meters() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.meters)
  return &meters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Meter >&
P4Info::meters() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.meters)
  return meters_;
}

// repeated .p4.config.v1.DirectMeter direct_meters = 8;
inline int P4Info::direct_meters_size() const {
  return direct_meters_.size();
}
inline void P4Info::clear_direct_meters() {
  direct_meters_.Clear();
}
inline const ::p4::config::v1::DirectMeter& P4Info::direct_meters(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.direct_meters)
  return direct_meters_.Get(index);
}
inline ::p4::config::v1::DirectMeter* P4Info::mutable_direct_meters(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.direct_meters)
  return direct_meters_.Mutable(index);
}
inline ::p4::config::v1::DirectMeter* P4Info::add_direct_meters() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.direct_meters)
  return direct_meters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::DirectMeter >*
P4Info::mutable_direct_meters() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.direct_meters)
  return &direct_meters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::DirectMeter >&
P4Info::direct_meters() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.direct_meters)
  return direct_meters_;
}

// repeated .p4.config.v1.ControllerPacketMetadata controller_packet_metadata = 9;
inline int P4Info::controller_packet_metadata_size() const {
  return controller_packet_metadata_.size();
}
inline void P4Info::clear_controller_packet_metadata() {
  controller_packet_metadata_.Clear();
}
inline const ::p4::config::v1::ControllerPacketMetadata& P4Info::controller_packet_metadata(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.controller_packet_metadata)
  return controller_packet_metadata_.Get(index);
}
inline ::p4::config::v1::ControllerPacketMetadata* P4Info::mutable_controller_packet_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.controller_packet_metadata)
  return controller_packet_metadata_.Mutable(index);
}
inline ::p4::config::v1::ControllerPacketMetadata* P4Info::add_controller_packet_metadata() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.controller_packet_metadata)
  return controller_packet_metadata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ControllerPacketMetadata >*
P4Info::mutable_controller_packet_metadata() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.controller_packet_metadata)
  return &controller_packet_metadata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ControllerPacketMetadata >&
P4Info::controller_packet_metadata() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.controller_packet_metadata)
  return controller_packet_metadata_;
}

// repeated .p4.config.v1.ValueSet value_sets = 10;
inline int P4Info::value_sets_size() const {
  return value_sets_.size();
}
inline void P4Info::clear_value_sets() {
  value_sets_.Clear();
}
inline const ::p4::config::v1::ValueSet& P4Info::value_sets(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.value_sets)
  return value_sets_.Get(index);
}
inline ::p4::config::v1::ValueSet* P4Info::mutable_value_sets(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.value_sets)
  return value_sets_.Mutable(index);
}
inline ::p4::config::v1::ValueSet* P4Info::add_value_sets() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.value_sets)
  return value_sets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ValueSet >*
P4Info::mutable_value_sets() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.value_sets)
  return &value_sets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ValueSet >&
P4Info::value_sets() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.value_sets)
  return value_sets_;
}

// repeated .p4.config.v1.Register registers = 11;
inline int P4Info::registers_size() const {
  return registers_.size();
}
inline void P4Info::clear_registers() {
  registers_.Clear();
}
inline const ::p4::config::v1::Register& P4Info::registers(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.registers)
  return registers_.Get(index);
}
inline ::p4::config::v1::Register* P4Info::mutable_registers(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.registers)
  return registers_.Mutable(index);
}
inline ::p4::config::v1::Register* P4Info::add_registers() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.registers)
  return registers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Register >*
P4Info::mutable_registers() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.registers)
  return &registers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Register >&
P4Info::registers() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.registers)
  return registers_;
}

// repeated .p4.config.v1.Digest digests = 12;
inline int P4Info::digests_size() const {
  return digests_.size();
}
inline void P4Info::clear_digests() {
  digests_.Clear();
}
inline const ::p4::config::v1::Digest& P4Info::digests(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.digests)
  return digests_.Get(index);
}
inline ::p4::config::v1::Digest* P4Info::mutable_digests(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.digests)
  return digests_.Mutable(index);
}
inline ::p4::config::v1::Digest* P4Info::add_digests() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.digests)
  return digests_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Digest >*
P4Info::mutable_digests() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.digests)
  return &digests_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Digest >&
P4Info::digests() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.digests)
  return digests_;
}

// repeated .p4.config.v1.Extern externs = 100;
inline int P4Info::externs_size() const {
  return externs_.size();
}
inline void P4Info::clear_externs() {
  externs_.Clear();
}
inline const ::p4::config::v1::Extern& P4Info::externs(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.externs)
  return externs_.Get(index);
}
inline ::p4::config::v1::Extern* P4Info::mutable_externs(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.externs)
  return externs_.Mutable(index);
}
inline ::p4::config::v1::Extern* P4Info::add_externs() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.externs)
  return externs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Extern >*
P4Info::mutable_externs() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.externs)
  return &externs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Extern >&
P4Info::externs() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.externs)
  return externs_;
}

// .p4.config.v1.P4TypeInfo type_info = 200;
inline bool P4Info::has_type_info() const {
  return this != internal_default_instance() && type_info_ != NULL;
}
inline void P4Info::clear_type_info() {
  if (GetArenaNoVirtual() == NULL && type_info_ != NULL) delete type_info_;
  type_info_ = NULL;
}
inline const ::p4::config::v1::P4TypeInfo& P4Info::type_info() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.type_info)
  return type_info_ != NULL ? *type_info_
                         : *::p4::config::v1::P4TypeInfo::internal_default_instance();
}
inline ::p4::config::v1::P4TypeInfo* P4Info::mutable_type_info() {
  
  if (type_info_ == NULL) {
    type_info_ = new ::p4::config::v1::P4TypeInfo;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.type_info)
  return type_info_;
}
inline ::p4::config::v1::P4TypeInfo* P4Info::release_type_info() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4Info.type_info)
  
  ::p4::config::v1::P4TypeInfo* temp = type_info_;
  type_info_ = NULL;
  return temp;
}
inline void P4Info::set_allocated_type_info(::p4::config::v1::P4TypeInfo* type_info) {
  delete type_info_;
  type_info_ = type_info;
  if (type_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4Info.type_info)
}

// -------------------------------------------------------------------

// Documentation

// string brief = 1;
inline void Documentation::clear_brief() {
  brief_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Documentation::brief() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Documentation.brief)
  return brief_.GetNoArena();
}
inline void Documentation::set_brief(const ::std::string& value) {
  
  brief_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.Documentation.brief)
}
#if LANG_CXX11
inline void Documentation::set_brief(::std::string&& value) {
  
  brief_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.Documentation.brief)
}
#endif
inline void Documentation::set_brief(const char* value) {
  
  brief_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Documentation.brief)
}
inline void Documentation::set_brief(const char* value, size_t size) {
  
  brief_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Documentation.brief)
}
inline ::std::string* Documentation::mutable_brief() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Documentation.brief)
  return brief_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Documentation::release_brief() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Documentation.brief)
  
  return brief_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Documentation::set_allocated_brief(::std::string* brief) {
  if (brief != NULL) {
    
  } else {
    
  }
  brief_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brief);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Documentation.brief)
}

// string description = 2;
inline void Documentation::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Documentation::description() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Documentation.description)
  return description_.GetNoArena();
}
inline void Documentation::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.Documentation.description)
}
#if LANG_CXX11
inline void Documentation::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.Documentation.description)
}
#endif
inline void Documentation::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Documentation.description)
}
inline void Documentation::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Documentation.description)
}
inline ::std::string* Documentation::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Documentation.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Documentation::release_description() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Documentation.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Documentation::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Documentation.description)
}

// -------------------------------------------------------------------

// PkgInfo

// string name = 1;
inline void PkgInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PkgInfo::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.name)
  return name_.GetNoArena();
}
inline void PkgInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.PkgInfo.name)
}
#if LANG_CXX11
inline void PkgInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.PkgInfo.name)
}
#endif
inline void PkgInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.PkgInfo.name)
}
inline void PkgInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.PkgInfo.name)
}
inline ::std::string* PkgInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgInfo::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.PkgInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.PkgInfo.name)
}

// string version = 2;
inline void PkgInfo::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PkgInfo::version() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.version)
  return version_.GetNoArena();
}
inline void PkgInfo::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.PkgInfo.version)
}
#if LANG_CXX11
inline void PkgInfo::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.PkgInfo.version)
}
#endif
inline void PkgInfo::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.PkgInfo.version)
}
inline void PkgInfo::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.PkgInfo.version)
}
inline ::std::string* PkgInfo::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgInfo::release_version() {
  // @@protoc_insertion_point(field_release:p4.config.v1.PkgInfo.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgInfo::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.PkgInfo.version)
}

// .p4.config.v1.Documentation doc = 3;
inline bool PkgInfo::has_doc() const {
  return this != internal_default_instance() && doc_ != NULL;
}
inline void PkgInfo::clear_doc() {
  if (GetArenaNoVirtual() == NULL && doc_ != NULL) delete doc_;
  doc_ = NULL;
}
inline const ::p4::config::v1::Documentation& PkgInfo::doc() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.doc)
  return doc_ != NULL ? *doc_
                         : *::p4::config::v1::Documentation::internal_default_instance();
}
inline ::p4::config::v1::Documentation* PkgInfo::mutable_doc() {
  
  if (doc_ == NULL) {
    doc_ = new ::p4::config::v1::Documentation;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.doc)
  return doc_;
}
inline ::p4::config::v1::Documentation* PkgInfo::release_doc() {
  // @@protoc_insertion_point(field_release:p4.config.v1.PkgInfo.doc)
  
  ::p4::config::v1::Documentation* temp = doc_;
  doc_ = NULL;
  return temp;
}
inline void PkgInfo::set_allocated_doc(::p4::config::v1::Documentation* doc) {
  delete doc_;
  doc_ = doc;
  if (doc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.PkgInfo.doc)
}

// repeated string annotations = 4;
inline int PkgInfo::annotations_size() const {
  return annotations_.size();
}
inline void PkgInfo::clear_annotations() {
  annotations_.Clear();
}
inline const ::std::string& PkgInfo::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.annotations)
  return annotations_.Get(index);
}
inline ::std::string* PkgInfo::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.annotations)
  return annotations_.Mutable(index);
}
inline void PkgInfo::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.PkgInfo.annotations)
  annotations_.Mutable(index)->assign(value);
}
inline void PkgInfo::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.PkgInfo.annotations)
}
inline void PkgInfo::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.PkgInfo.annotations)
}
inline ::std::string* PkgInfo::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.PkgInfo.annotations)
  return annotations_.Add();
}
inline void PkgInfo::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.PkgInfo.annotations)
}
inline void PkgInfo::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.PkgInfo.annotations)
}
inline void PkgInfo::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.PkgInfo.annotations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PkgInfo::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.PkgInfo.annotations)
  return annotations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PkgInfo::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.PkgInfo.annotations)
  return &annotations_;
}

// string arch = 5;
inline void PkgInfo::clear_arch() {
  arch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PkgInfo::arch() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.arch)
  return arch_.GetNoArena();
}
inline void PkgInfo::set_arch(const ::std::string& value) {
  
  arch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.PkgInfo.arch)
}
#if LANG_CXX11
inline void PkgInfo::set_arch(::std::string&& value) {
  
  arch_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.PkgInfo.arch)
}
#endif
inline void PkgInfo::set_arch(const char* value) {
  
  arch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.PkgInfo.arch)
}
inline void PkgInfo::set_arch(const char* value, size_t size) {
  
  arch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.PkgInfo.arch)
}
inline ::std::string* PkgInfo::mutable_arch() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.arch)
  return arch_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgInfo::release_arch() {
  // @@protoc_insertion_point(field_release:p4.config.v1.PkgInfo.arch)
  
  return arch_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgInfo::set_allocated_arch(::std::string* arch) {
  if (arch != NULL) {
    
  } else {
    
  }
  arch_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arch);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.PkgInfo.arch)
}

// string organization = 6;
inline void PkgInfo::clear_organization() {
  organization_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PkgInfo::organization() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.organization)
  return organization_.GetNoArena();
}
inline void PkgInfo::set_organization(const ::std::string& value) {
  
  organization_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.PkgInfo.organization)
}
#if LANG_CXX11
inline void PkgInfo::set_organization(::std::string&& value) {
  
  organization_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.PkgInfo.organization)
}
#endif
inline void PkgInfo::set_organization(const char* value) {
  
  organization_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.PkgInfo.organization)
}
inline void PkgInfo::set_organization(const char* value, size_t size) {
  
  organization_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.PkgInfo.organization)
}
inline ::std::string* PkgInfo::mutable_organization() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.organization)
  return organization_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgInfo::release_organization() {
  // @@protoc_insertion_point(field_release:p4.config.v1.PkgInfo.organization)
  
  return organization_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgInfo::set_allocated_organization(::std::string* organization) {
  if (organization != NULL) {
    
  } else {
    
  }
  organization_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), organization);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.PkgInfo.organization)
}

// string contact = 7;
inline void PkgInfo::clear_contact() {
  contact_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PkgInfo::contact() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.contact)
  return contact_.GetNoArena();
}
inline void PkgInfo::set_contact(const ::std::string& value) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.PkgInfo.contact)
}
#if LANG_CXX11
inline void PkgInfo::set_contact(::std::string&& value) {
  
  contact_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.PkgInfo.contact)
}
#endif
inline void PkgInfo::set_contact(const char* value) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.PkgInfo.contact)
}
inline void PkgInfo::set_contact(const char* value, size_t size) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.PkgInfo.contact)
}
inline ::std::string* PkgInfo::mutable_contact() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.contact)
  return contact_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgInfo::release_contact() {
  // @@protoc_insertion_point(field_release:p4.config.v1.PkgInfo.contact)
  
  return contact_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgInfo::set_allocated_contact(::std::string* contact) {
  if (contact != NULL) {
    
  } else {
    
  }
  contact_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contact);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.PkgInfo.contact)
}

// string url = 8;
inline void PkgInfo::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PkgInfo::url() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.url)
  return url_.GetNoArena();
}
inline void PkgInfo::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.PkgInfo.url)
}
#if LANG_CXX11
inline void PkgInfo::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.PkgInfo.url)
}
#endif
inline void PkgInfo::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.PkgInfo.url)
}
inline void PkgInfo::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.PkgInfo.url)
}
inline ::std::string* PkgInfo::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgInfo::release_url() {
  // @@protoc_insertion_point(field_release:p4.config.v1.PkgInfo.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgInfo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.PkgInfo.url)
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 9;
inline int PkgInfo::structured_annotations_size() const {
  return structured_annotations_.size();
}
inline void PkgInfo::clear_structured_annotations() {
  structured_annotations_.Clear();
}
inline const ::p4::config::v1::StructuredAnnotation& PkgInfo::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.structured_annotations)
  return structured_annotations_.Get(index);
}
inline ::p4::config::v1::StructuredAnnotation* PkgInfo::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.structured_annotations)
  return structured_annotations_.Mutable(index);
}
inline ::p4::config::v1::StructuredAnnotation* PkgInfo::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.PkgInfo.structured_annotations)
  return structured_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
PkgInfo::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.PkgInfo.structured_annotations)
  return &structured_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
PkgInfo::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.PkgInfo.structured_annotations)
  return structured_annotations_;
}

// -------------------------------------------------------------------

// P4Ids

// -------------------------------------------------------------------

// Preamble

// uint32 id = 1;
inline void Preamble::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Preamble::id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Preamble.id)
  return id_;
}
inline void Preamble::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Preamble.id)
}

// string name = 2;
inline void Preamble::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Preamble::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Preamble.name)
  return name_.GetNoArena();
}
inline void Preamble::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.Preamble.name)
}
#if LANG_CXX11
inline void Preamble::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.Preamble.name)
}
#endif
inline void Preamble::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Preamble.name)
}
inline void Preamble::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Preamble.name)
}
inline ::std::string* Preamble::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Preamble.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Preamble::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Preamble.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Preamble::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Preamble.name)
}

// string alias = 3;
inline void Preamble::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Preamble::alias() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Preamble.alias)
  return alias_.GetNoArena();
}
inline void Preamble::set_alias(const ::std::string& value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.Preamble.alias)
}
#if LANG_CXX11
inline void Preamble::set_alias(::std::string&& value) {
  
  alias_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.Preamble.alias)
}
#endif
inline void Preamble::set_alias(const char* value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Preamble.alias)
}
inline void Preamble::set_alias(const char* value, size_t size) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Preamble.alias)
}
inline ::std::string* Preamble::mutable_alias() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Preamble.alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Preamble::release_alias() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Preamble.alias)
  
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Preamble::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    
  } else {
    
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Preamble.alias)
}

// repeated string annotations = 4;
inline int Preamble::annotations_size() const {
  return annotations_.size();
}
inline void Preamble::clear_annotations() {
  annotations_.Clear();
}
inline const ::std::string& Preamble::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Preamble.annotations)
  return annotations_.Get(index);
}
inline ::std::string* Preamble::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Preamble.annotations)
  return annotations_.Mutable(index);
}
inline void Preamble::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.Preamble.annotations)
  annotations_.Mutable(index)->assign(value);
}
inline void Preamble::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Preamble.annotations)
}
inline void Preamble::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Preamble.annotations)
}
inline ::std::string* Preamble::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.Preamble.annotations)
  return annotations_.Add();
}
inline void Preamble::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.Preamble.annotations)
}
inline void Preamble::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.Preamble.annotations)
}
inline void Preamble::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.Preamble.annotations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Preamble::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Preamble.annotations)
  return annotations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Preamble::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Preamble.annotations)
  return &annotations_;
}

// .p4.config.v1.Documentation doc = 5;
inline bool Preamble::has_doc() const {
  return this != internal_default_instance() && doc_ != NULL;
}
inline void Preamble::clear_doc() {
  if (GetArenaNoVirtual() == NULL && doc_ != NULL) delete doc_;
  doc_ = NULL;
}
inline const ::p4::config::v1::Documentation& Preamble::doc() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Preamble.doc)
  return doc_ != NULL ? *doc_
                         : *::p4::config::v1::Documentation::internal_default_instance();
}
inline ::p4::config::v1::Documentation* Preamble::mutable_doc() {
  
  if (doc_ == NULL) {
    doc_ = new ::p4::config::v1::Documentation;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Preamble.doc)
  return doc_;
}
inline ::p4::config::v1::Documentation* Preamble::release_doc() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Preamble.doc)
  
  ::p4::config::v1::Documentation* temp = doc_;
  doc_ = NULL;
  return temp;
}
inline void Preamble::set_allocated_doc(::p4::config::v1::Documentation* doc) {
  delete doc_;
  doc_ = doc;
  if (doc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Preamble.doc)
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 6;
inline int Preamble::structured_annotations_size() const {
  return structured_annotations_.size();
}
inline void Preamble::clear_structured_annotations() {
  structured_annotations_.Clear();
}
inline const ::p4::config::v1::StructuredAnnotation& Preamble::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Preamble.structured_annotations)
  return structured_annotations_.Get(index);
}
inline ::p4::config::v1::StructuredAnnotation* Preamble::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Preamble.structured_annotations)
  return structured_annotations_.Mutable(index);
}
inline ::p4::config::v1::StructuredAnnotation* Preamble::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.Preamble.structured_annotations)
  return structured_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
Preamble::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Preamble.structured_annotations)
  return &structured_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
Preamble::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Preamble.structured_annotations)
  return structured_annotations_;
}

// -------------------------------------------------------------------

// Extern

// uint32 extern_type_id = 1;
inline void Extern::clear_extern_type_id() {
  extern_type_id_ = 0u;
}
inline ::google::protobuf::uint32 Extern::extern_type_id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Extern.extern_type_id)
  return extern_type_id_;
}
inline void Extern::set_extern_type_id(::google::protobuf::uint32 value) {
  
  extern_type_id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Extern.extern_type_id)
}

// string extern_type_name = 2;
inline void Extern::clear_extern_type_name() {
  extern_type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Extern::extern_type_name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Extern.extern_type_name)
  return extern_type_name_.GetNoArena();
}
inline void Extern::set_extern_type_name(const ::std::string& value) {
  
  extern_type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.Extern.extern_type_name)
}
#if LANG_CXX11
inline void Extern::set_extern_type_name(::std::string&& value) {
  
  extern_type_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.Extern.extern_type_name)
}
#endif
inline void Extern::set_extern_type_name(const char* value) {
  
  extern_type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Extern.extern_type_name)
}
inline void Extern::set_extern_type_name(const char* value, size_t size) {
  
  extern_type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Extern.extern_type_name)
}
inline ::std::string* Extern::mutable_extern_type_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Extern.extern_type_name)
  return extern_type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Extern::release_extern_type_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Extern.extern_type_name)
  
  return extern_type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Extern::set_allocated_extern_type_name(::std::string* extern_type_name) {
  if (extern_type_name != NULL) {
    
  } else {
    
  }
  extern_type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extern_type_name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Extern.extern_type_name)
}

// repeated .p4.config.v1.ExternInstance instances = 3;
inline int Extern::instances_size() const {
  return instances_.size();
}
inline void Extern::clear_instances() {
  instances_.Clear();
}
inline const ::p4::config::v1::ExternInstance& Extern::instances(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Extern.instances)
  return instances_.Get(index);
}
inline ::p4::config::v1::ExternInstance* Extern::mutable_instances(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Extern.instances)
  return instances_.Mutable(index);
}
inline ::p4::config::v1::ExternInstance* Extern::add_instances() {
  // @@protoc_insertion_point(field_add:p4.config.v1.Extern.instances)
  return instances_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ExternInstance >*
Extern::mutable_instances() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Extern.instances)
  return &instances_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ExternInstance >&
Extern::instances() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Extern.instances)
  return instances_;
}

// -------------------------------------------------------------------

// ExternInstance

// .p4.config.v1.Preamble preamble = 1;
inline bool ExternInstance::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
inline void ExternInstance::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
inline const ::p4::config::v1::Preamble& ExternInstance::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ExternInstance.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
inline ::p4::config::v1::Preamble* ExternInstance::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ExternInstance.preamble)
  return preamble_;
}
inline ::p4::config::v1::Preamble* ExternInstance::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.ExternInstance.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
inline void ExternInstance::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.ExternInstance.preamble)
}

// .google.protobuf.Any info = 2;
inline bool ExternInstance::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void ExternInstance::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::google::protobuf::Any& ExternInstance::info() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ExternInstance.info)
  return info_ != NULL ? *info_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* ExternInstance::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ExternInstance.info)
  return info_;
}
inline ::google::protobuf::Any* ExternInstance::release_info() {
  // @@protoc_insertion_point(field_release:p4.config.v1.ExternInstance.info)
  
  ::google::protobuf::Any* temp = info_;
  info_ = NULL;
  return temp;
}
inline void ExternInstance::set_allocated_info(::google::protobuf::Any* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.ExternInstance.info)
}

// -------------------------------------------------------------------

// MatchField

// uint32 id = 1;
inline void MatchField::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MatchField::id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.id)
  return id_;
}
inline void MatchField::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.MatchField.id)
}

// string name = 2;
inline void MatchField::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MatchField::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.name)
  return name_.GetNoArena();
}
inline void MatchField::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.MatchField.name)
}
#if LANG_CXX11
inline void MatchField::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.MatchField.name)
}
#endif
inline void MatchField::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.MatchField.name)
}
inline void MatchField::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.MatchField.name)
}
inline ::std::string* MatchField::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.MatchField.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchField::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.MatchField.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MatchField::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.MatchField.name)
}

// repeated string annotations = 3;
inline int MatchField::annotations_size() const {
  return annotations_.size();
}
inline void MatchField::clear_annotations() {
  annotations_.Clear();
}
inline const ::std::string& MatchField::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.annotations)
  return annotations_.Get(index);
}
inline ::std::string* MatchField::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.MatchField.annotations)
  return annotations_.Mutable(index);
}
inline void MatchField::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.MatchField.annotations)
  annotations_.Mutable(index)->assign(value);
}
inline void MatchField::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.MatchField.annotations)
}
inline void MatchField::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.MatchField.annotations)
}
inline ::std::string* MatchField::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.MatchField.annotations)
  return annotations_.Add();
}
inline void MatchField::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.MatchField.annotations)
}
inline void MatchField::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.MatchField.annotations)
}
inline void MatchField::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.MatchField.annotations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MatchField::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.MatchField.annotations)
  return annotations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MatchField::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.MatchField.annotations)
  return &annotations_;
}

// int32 bitwidth = 4;
inline void MatchField::clear_bitwidth() {
  bitwidth_ = 0;
}
inline ::google::protobuf::int32 MatchField::bitwidth() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.bitwidth)
  return bitwidth_;
}
inline void MatchField::set_bitwidth(::google::protobuf::int32 value) {
  
  bitwidth_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.MatchField.bitwidth)
}

// .p4.config.v1.MatchField.MatchType match_type = 5;
inline bool MatchField::has_match_type() const {
  return match_case() == kMatchType;
}
inline void MatchField::set_has_match_type() {
  _oneof_case_[0] = kMatchType;
}
inline void MatchField::clear_match_type() {
  if (has_match_type()) {
    match_.match_type_ = 0;
    clear_has_match();
  }
}
inline ::p4::config::v1::MatchField_MatchType MatchField::match_type() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.match_type)
  if (has_match_type()) {
    return static_cast< ::p4::config::v1::MatchField_MatchType >(match_.match_type_);
  }
  return static_cast< ::p4::config::v1::MatchField_MatchType >(0);
}
inline void MatchField::set_match_type(::p4::config::v1::MatchField_MatchType value) {
  if (!has_match_type()) {
    clear_match();
    set_has_match_type();
  }
  match_.match_type_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.MatchField.match_type)
}

// string other_match_type = 7;
inline bool MatchField::has_other_match_type() const {
  return match_case() == kOtherMatchType;
}
inline void MatchField::set_has_other_match_type() {
  _oneof_case_[0] = kOtherMatchType;
}
inline void MatchField::clear_other_match_type() {
  if (has_other_match_type()) {
    match_.other_match_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_match();
  }
}
inline const ::std::string& MatchField::other_match_type() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.other_match_type)
  if (has_other_match_type()) {
    return match_.other_match_type_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void MatchField::set_other_match_type(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.MatchField.other_match_type)
  if (!has_other_match_type()) {
    clear_match();
    set_has_other_match_type();
    match_.other_match_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  match_.other_match_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.MatchField.other_match_type)
}
#if LANG_CXX11
inline void MatchField::set_other_match_type(::std::string&& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.MatchField.other_match_type)
  if (!has_other_match_type()) {
    clear_match();
    set_has_other_match_type();
    match_.other_match_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  match_.other_match_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.MatchField.other_match_type)
}
#endif
inline void MatchField::set_other_match_type(const char* value) {
  if (!has_other_match_type()) {
    clear_match();
    set_has_other_match_type();
    match_.other_match_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  match_.other_match_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.MatchField.other_match_type)
}
inline void MatchField::set_other_match_type(const char* value, size_t size) {
  if (!has_other_match_type()) {
    clear_match();
    set_has_other_match_type();
    match_.other_match_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  match_.other_match_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.MatchField.other_match_type)
}
inline ::std::string* MatchField::mutable_other_match_type() {
  if (!has_other_match_type()) {
    clear_match();
    set_has_other_match_type();
    match_.other_match_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.MatchField.other_match_type)
  return match_.other_match_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MatchField::release_other_match_type() {
  // @@protoc_insertion_point(field_release:p4.config.v1.MatchField.other_match_type)
  if (has_other_match_type()) {
    clear_has_match();
    return match_.other_match_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void MatchField::set_allocated_other_match_type(::std::string* other_match_type) {
  if (!has_other_match_type()) {
    match_.other_match_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_match();
  if (other_match_type != NULL) {
    set_has_other_match_type();
    match_.other_match_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        other_match_type);
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.MatchField.other_match_type)
}

// .p4.config.v1.Documentation doc = 6;
inline bool MatchField::has_doc() const {
  return this != internal_default_instance() && doc_ != NULL;
}
inline void MatchField::clear_doc() {
  if (GetArenaNoVirtual() == NULL && doc_ != NULL) delete doc_;
  doc_ = NULL;
}
inline const ::p4::config::v1::Documentation& MatchField::doc() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.doc)
  return doc_ != NULL ? *doc_
                         : *::p4::config::v1::Documentation::internal_default_instance();
}
inline ::p4::config::v1::Documentation* MatchField::mutable_doc() {
  
  if (doc_ == NULL) {
    doc_ = new ::p4::config::v1::Documentation;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.MatchField.doc)
  return doc_;
}
inline ::p4::config::v1::Documentation* MatchField::release_doc() {
  // @@protoc_insertion_point(field_release:p4.config.v1.MatchField.doc)
  
  ::p4::config::v1::Documentation* temp = doc_;
  doc_ = NULL;
  return temp;
}
inline void MatchField::set_allocated_doc(::p4::config::v1::Documentation* doc) {
  delete doc_;
  doc_ = doc;
  if (doc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.MatchField.doc)
}

// .p4.config.v1.P4NamedType type_name = 8;
inline bool MatchField::has_type_name() const {
  return this != internal_default_instance() && type_name_ != NULL;
}
inline void MatchField::clear_type_name() {
  if (GetArenaNoVirtual() == NULL && type_name_ != NULL) delete type_name_;
  type_name_ = NULL;
}
inline const ::p4::config::v1::P4NamedType& MatchField::type_name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.type_name)
  return type_name_ != NULL ? *type_name_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
inline ::p4::config::v1::P4NamedType* MatchField::mutable_type_name() {
  
  if (type_name_ == NULL) {
    type_name_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.MatchField.type_name)
  return type_name_;
}
inline ::p4::config::v1::P4NamedType* MatchField::release_type_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.MatchField.type_name)
  
  ::p4::config::v1::P4NamedType* temp = type_name_;
  type_name_ = NULL;
  return temp;
}
inline void MatchField::set_allocated_type_name(::p4::config::v1::P4NamedType* type_name) {
  delete type_name_;
  type_name_ = type_name;
  if (type_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.MatchField.type_name)
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 9;
inline int MatchField::structured_annotations_size() const {
  return structured_annotations_.size();
}
inline void MatchField::clear_structured_annotations() {
  structured_annotations_.Clear();
}
inline const ::p4::config::v1::StructuredAnnotation& MatchField::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.structured_annotations)
  return structured_annotations_.Get(index);
}
inline ::p4::config::v1::StructuredAnnotation* MatchField::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.MatchField.structured_annotations)
  return structured_annotations_.Mutable(index);
}
inline ::p4::config::v1::StructuredAnnotation* MatchField::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.MatchField.structured_annotations)
  return structured_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
MatchField::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.MatchField.structured_annotations)
  return &structured_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
MatchField::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.MatchField.structured_annotations)
  return structured_annotations_;
}

inline bool MatchField::has_match() const {
  return match_case() != MATCH_NOT_SET;
}
inline void MatchField::clear_has_match() {
  _oneof_case_[0] = MATCH_NOT_SET;
}
inline MatchField::MatchCase MatchField::match_case() const {
  return MatchField::MatchCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Table

// .p4.config.v1.Preamble preamble = 1;
inline bool Table::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
inline void Table::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
inline const ::p4::config::v1::Preamble& Table::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
inline ::p4::config::v1::Preamble* Table::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Table.preamble)
  return preamble_;
}
inline ::p4::config::v1::Preamble* Table::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Table.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
inline void Table::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Table.preamble)
}

// repeated .p4.config.v1.MatchField match_fields = 2;
inline int Table::match_fields_size() const {
  return match_fields_.size();
}
inline void Table::clear_match_fields() {
  match_fields_.Clear();
}
inline const ::p4::config::v1::MatchField& Table::match_fields(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.match_fields)
  return match_fields_.Get(index);
}
inline ::p4::config::v1::MatchField* Table::mutable_match_fields(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Table.match_fields)
  return match_fields_.Mutable(index);
}
inline ::p4::config::v1::MatchField* Table::add_match_fields() {
  // @@protoc_insertion_point(field_add:p4.config.v1.Table.match_fields)
  return match_fields_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::MatchField >*
Table::mutable_match_fields() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Table.match_fields)
  return &match_fields_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::MatchField >&
Table::match_fields() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Table.match_fields)
  return match_fields_;
}

// repeated .p4.config.v1.ActionRef action_refs = 3;
inline int Table::action_refs_size() const {
  return action_refs_.size();
}
inline void Table::clear_action_refs() {
  action_refs_.Clear();
}
inline const ::p4::config::v1::ActionRef& Table::action_refs(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.action_refs)
  return action_refs_.Get(index);
}
inline ::p4::config::v1::ActionRef* Table::mutable_action_refs(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Table.action_refs)
  return action_refs_.Mutable(index);
}
inline ::p4::config::v1::ActionRef* Table::add_action_refs() {
  // @@protoc_insertion_point(field_add:p4.config.v1.Table.action_refs)
  return action_refs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ActionRef >*
Table::mutable_action_refs() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Table.action_refs)
  return &action_refs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ActionRef >&
Table::action_refs() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Table.action_refs)
  return action_refs_;
}

// uint32 const_default_action_id = 4;
inline void Table::clear_const_default_action_id() {
  const_default_action_id_ = 0u;
}
inline ::google::protobuf::uint32 Table::const_default_action_id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.const_default_action_id)
  return const_default_action_id_;
}
inline void Table::set_const_default_action_id(::google::protobuf::uint32 value) {
  
  const_default_action_id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Table.const_default_action_id)
}

// uint32 implementation_id = 6;
inline void Table::clear_implementation_id() {
  implementation_id_ = 0u;
}
inline ::google::protobuf::uint32 Table::implementation_id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.implementation_id)
  return implementation_id_;
}
inline void Table::set_implementation_id(::google::protobuf::uint32 value) {
  
  implementation_id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Table.implementation_id)
}

// repeated uint32 direct_resource_ids = 7;
inline int Table::direct_resource_ids_size() const {
  return direct_resource_ids_.size();
}
inline void Table::clear_direct_resource_ids() {
  direct_resource_ids_.Clear();
}
inline ::google::protobuf::uint32 Table::direct_resource_ids(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.direct_resource_ids)
  return direct_resource_ids_.Get(index);
}
inline void Table::set_direct_resource_ids(int index, ::google::protobuf::uint32 value) {
  direct_resource_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:p4.config.v1.Table.direct_resource_ids)
}
inline void Table::add_direct_resource_ids(::google::protobuf::uint32 value) {
  direct_resource_ids_.Add(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.Table.direct_resource_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Table::direct_resource_ids() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Table.direct_resource_ids)
  return direct_resource_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Table::mutable_direct_resource_ids() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Table.direct_resource_ids)
  return &direct_resource_ids_;
}

// int64 size = 8;
inline void Table::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Table::size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.size)
  return size_;
}
inline void Table::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Table.size)
}

// .p4.config.v1.Table.IdleTimeoutBehavior idle_timeout_behavior = 9;
inline void Table::clear_idle_timeout_behavior() {
  idle_timeout_behavior_ = 0;
}
inline ::p4::config::v1::Table_IdleTimeoutBehavior Table::idle_timeout_behavior() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.idle_timeout_behavior)
  return static_cast< ::p4::config::v1::Table_IdleTimeoutBehavior >(idle_timeout_behavior_);
}
inline void Table::set_idle_timeout_behavior(::p4::config::v1::Table_IdleTimeoutBehavior value) {
  
  idle_timeout_behavior_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Table.idle_timeout_behavior)
}

// bool is_const_table = 10;
inline void Table::clear_is_const_table() {
  is_const_table_ = false;
}
inline bool Table::is_const_table() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.is_const_table)
  return is_const_table_;
}
inline void Table::set_is_const_table(bool value) {
  
  is_const_table_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Table.is_const_table)
}

// .google.protobuf.Any other_properties = 100;
inline bool Table::has_other_properties() const {
  return this != internal_default_instance() && other_properties_ != NULL;
}
inline void Table::clear_other_properties() {
  if (GetArenaNoVirtual() == NULL && other_properties_ != NULL) delete other_properties_;
  other_properties_ = NULL;
}
inline const ::google::protobuf::Any& Table::other_properties() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.other_properties)
  return other_properties_ != NULL ? *other_properties_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* Table::mutable_other_properties() {
  
  if (other_properties_ == NULL) {
    other_properties_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Table.other_properties)
  return other_properties_;
}
inline ::google::protobuf::Any* Table::release_other_properties() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Table.other_properties)
  
  ::google::protobuf::Any* temp = other_properties_;
  other_properties_ = NULL;
  return temp;
}
inline void Table::set_allocated_other_properties(::google::protobuf::Any* other_properties) {
  delete other_properties_;
  other_properties_ = other_properties;
  if (other_properties) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Table.other_properties)
}

// -------------------------------------------------------------------

// ActionRef

// uint32 id = 1;
inline void ActionRef::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ActionRef::id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionRef.id)
  return id_;
}
inline void ActionRef::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.ActionRef.id)
}

// .p4.config.v1.ActionRef.Scope scope = 3;
inline void ActionRef::clear_scope() {
  scope_ = 0;
}
inline ::p4::config::v1::ActionRef_Scope ActionRef::scope() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionRef.scope)
  return static_cast< ::p4::config::v1::ActionRef_Scope >(scope_);
}
inline void ActionRef::set_scope(::p4::config::v1::ActionRef_Scope value) {
  
  scope_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.ActionRef.scope)
}

// repeated string annotations = 2;
inline int ActionRef::annotations_size() const {
  return annotations_.size();
}
inline void ActionRef::clear_annotations() {
  annotations_.Clear();
}
inline const ::std::string& ActionRef::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionRef.annotations)
  return annotations_.Get(index);
}
inline ::std::string* ActionRef::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ActionRef.annotations)
  return annotations_.Mutable(index);
}
inline void ActionRef::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.ActionRef.annotations)
  annotations_.Mutable(index)->assign(value);
}
inline void ActionRef::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.ActionRef.annotations)
}
inline void ActionRef::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.ActionRef.annotations)
}
inline ::std::string* ActionRef::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.ActionRef.annotations)
  return annotations_.Add();
}
inline void ActionRef::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.ActionRef.annotations)
}
inline void ActionRef::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.ActionRef.annotations)
}
inline void ActionRef::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.ActionRef.annotations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ActionRef::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.ActionRef.annotations)
  return annotations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ActionRef::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.ActionRef.annotations)
  return &annotations_;
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
inline int ActionRef::structured_annotations_size() const {
  return structured_annotations_.size();
}
inline void ActionRef::clear_structured_annotations() {
  structured_annotations_.Clear();
}
inline const ::p4::config::v1::StructuredAnnotation& ActionRef::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionRef.structured_annotations)
  return structured_annotations_.Get(index);
}
inline ::p4::config::v1::StructuredAnnotation* ActionRef::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ActionRef.structured_annotations)
  return structured_annotations_.Mutable(index);
}
inline ::p4::config::v1::StructuredAnnotation* ActionRef::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.ActionRef.structured_annotations)
  return structured_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
ActionRef::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.ActionRef.structured_annotations)
  return &structured_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
ActionRef::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.ActionRef.structured_annotations)
  return structured_annotations_;
}

// -------------------------------------------------------------------

// Action_Param

// uint32 id = 1;
inline void Action_Param::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Action_Param::id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.Param.id)
  return id_;
}
inline void Action_Param::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Action.Param.id)
}

// string name = 2;
inline void Action_Param::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Action_Param::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.Param.name)
  return name_.GetNoArena();
}
inline void Action_Param::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.Action.Param.name)
}
#if LANG_CXX11
inline void Action_Param::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.Action.Param.name)
}
#endif
inline void Action_Param::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Action.Param.name)
}
inline void Action_Param::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Action.Param.name)
}
inline ::std::string* Action_Param::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Action.Param.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Action_Param::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Action.Param.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Action_Param::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Action.Param.name)
}

// repeated string annotations = 3;
inline int Action_Param::annotations_size() const {
  return annotations_.size();
}
inline void Action_Param::clear_annotations() {
  annotations_.Clear();
}
inline const ::std::string& Action_Param::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.Param.annotations)
  return annotations_.Get(index);
}
inline ::std::string* Action_Param::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Action.Param.annotations)
  return annotations_.Mutable(index);
}
inline void Action_Param::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.Action.Param.annotations)
  annotations_.Mutable(index)->assign(value);
}
inline void Action_Param::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Action.Param.annotations)
}
inline void Action_Param::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Action.Param.annotations)
}
inline ::std::string* Action_Param::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.Action.Param.annotations)
  return annotations_.Add();
}
inline void Action_Param::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.Action.Param.annotations)
}
inline void Action_Param::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.Action.Param.annotations)
}
inline void Action_Param::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.Action.Param.annotations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Action_Param::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Action.Param.annotations)
  return annotations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Action_Param::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Action.Param.annotations)
  return &annotations_;
}

// int32 bitwidth = 4;
inline void Action_Param::clear_bitwidth() {
  bitwidth_ = 0;
}
inline ::google::protobuf::int32 Action_Param::bitwidth() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.Param.bitwidth)
  return bitwidth_;
}
inline void Action_Param::set_bitwidth(::google::protobuf::int32 value) {
  
  bitwidth_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Action.Param.bitwidth)
}

// .p4.config.v1.Documentation doc = 5;
inline bool Action_Param::has_doc() const {
  return this != internal_default_instance() && doc_ != NULL;
}
inline void Action_Param::clear_doc() {
  if (GetArenaNoVirtual() == NULL && doc_ != NULL) delete doc_;
  doc_ = NULL;
}
inline const ::p4::config::v1::Documentation& Action_Param::doc() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.Param.doc)
  return doc_ != NULL ? *doc_
                         : *::p4::config::v1::Documentation::internal_default_instance();
}
inline ::p4::config::v1::Documentation* Action_Param::mutable_doc() {
  
  if (doc_ == NULL) {
    doc_ = new ::p4::config::v1::Documentation;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Action.Param.doc)
  return doc_;
}
inline ::p4::config::v1::Documentation* Action_Param::release_doc() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Action.Param.doc)
  
  ::p4::config::v1::Documentation* temp = doc_;
  doc_ = NULL;
  return temp;
}
inline void Action_Param::set_allocated_doc(::p4::config::v1::Documentation* doc) {
  delete doc_;
  doc_ = doc;
  if (doc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Action.Param.doc)
}

// .p4.config.v1.P4NamedType type_name = 6;
inline bool Action_Param::has_type_name() const {
  return this != internal_default_instance() && type_name_ != NULL;
}
inline void Action_Param::clear_type_name() {
  if (GetArenaNoVirtual() == NULL && type_name_ != NULL) delete type_name_;
  type_name_ = NULL;
}
inline const ::p4::config::v1::P4NamedType& Action_Param::type_name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.Param.type_name)
  return type_name_ != NULL ? *type_name_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
inline ::p4::config::v1::P4NamedType* Action_Param::mutable_type_name() {
  
  if (type_name_ == NULL) {
    type_name_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Action.Param.type_name)
  return type_name_;
}
inline ::p4::config::v1::P4NamedType* Action_Param::release_type_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Action.Param.type_name)
  
  ::p4::config::v1::P4NamedType* temp = type_name_;
  type_name_ = NULL;
  return temp;
}
inline void Action_Param::set_allocated_type_name(::p4::config::v1::P4NamedType* type_name) {
  delete type_name_;
  type_name_ = type_name;
  if (type_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Action.Param.type_name)
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 7;
inline int Action_Param::structured_annotations_size() const {
  return structured_annotations_.size();
}
inline void Action_Param::clear_structured_annotations() {
  structured_annotations_.Clear();
}
inline const ::p4::config::v1::StructuredAnnotation& Action_Param::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.Param.structured_annotations)
  return structured_annotations_.Get(index);
}
inline ::p4::config::v1::StructuredAnnotation* Action_Param::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Action.Param.structured_annotations)
  return structured_annotations_.Mutable(index);
}
inline ::p4::config::v1::StructuredAnnotation* Action_Param::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.Action.Param.structured_annotations)
  return structured_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
Action_Param::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Action.Param.structured_annotations)
  return &structured_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
Action_Param::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Action.Param.structured_annotations)
  return structured_annotations_;
}

// -------------------------------------------------------------------

// Action

// .p4.config.v1.Preamble preamble = 1;
inline bool Action::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
inline void Action::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
inline const ::p4::config::v1::Preamble& Action::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
inline ::p4::config::v1::Preamble* Action::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Action.preamble)
  return preamble_;
}
inline ::p4::config::v1::Preamble* Action::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Action.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
inline void Action::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Action.preamble)
}

// repeated .p4.config.v1.Action.Param params = 2;
inline int Action::params_size() const {
  return params_.size();
}
inline void Action::clear_params() {
  params_.Clear();
}
inline const ::p4::config::v1::Action_Param& Action::params(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.params)
  return params_.Get(index);
}
inline ::p4::config::v1::Action_Param* Action::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Action.params)
  return params_.Mutable(index);
}
inline ::p4::config::v1::Action_Param* Action::add_params() {
  // @@protoc_insertion_point(field_add:p4.config.v1.Action.params)
  return params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Action_Param >*
Action::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Action.params)
  return &params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Action_Param >&
Action::params() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Action.params)
  return params_;
}

// -------------------------------------------------------------------

// ActionProfile

// .p4.config.v1.Preamble preamble = 1;
inline bool ActionProfile::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
inline void ActionProfile::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
inline const ::p4::config::v1::Preamble& ActionProfile::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionProfile.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
inline ::p4::config::v1::Preamble* ActionProfile::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ActionProfile.preamble)
  return preamble_;
}
inline ::p4::config::v1::Preamble* ActionProfile::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.ActionProfile.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
inline void ActionProfile::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.ActionProfile.preamble)
}

// repeated uint32 table_ids = 2;
inline int ActionProfile::table_ids_size() const {
  return table_ids_.size();
}
inline void ActionProfile::clear_table_ids() {
  table_ids_.Clear();
}
inline ::google::protobuf::uint32 ActionProfile::table_ids(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionProfile.table_ids)
  return table_ids_.Get(index);
}
inline void ActionProfile::set_table_ids(int index, ::google::protobuf::uint32 value) {
  table_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:p4.config.v1.ActionProfile.table_ids)
}
inline void ActionProfile::add_table_ids(::google::protobuf::uint32 value) {
  table_ids_.Add(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.ActionProfile.table_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ActionProfile::table_ids() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.ActionProfile.table_ids)
  return table_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ActionProfile::mutable_table_ids() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.ActionProfile.table_ids)
  return &table_ids_;
}

// bool with_selector = 3;
inline void ActionProfile::clear_with_selector() {
  with_selector_ = false;
}
inline bool ActionProfile::with_selector() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionProfile.with_selector)
  return with_selector_;
}
inline void ActionProfile::set_with_selector(bool value) {
  
  with_selector_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.ActionProfile.with_selector)
}

// int64 size = 4;
inline void ActionProfile::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ActionProfile::size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionProfile.size)
  return size_;
}
inline void ActionProfile::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.ActionProfile.size)
}

// int32 max_group_size = 5;
inline void ActionProfile::clear_max_group_size() {
  max_group_size_ = 0;
}
inline ::google::protobuf::int32 ActionProfile::max_group_size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionProfile.max_group_size)
  return max_group_size_;
}
inline void ActionProfile::set_max_group_size(::google::protobuf::int32 value) {
  
  max_group_size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.ActionProfile.max_group_size)
}

// -------------------------------------------------------------------

// CounterSpec

// .p4.config.v1.CounterSpec.Unit unit = 1;
inline void CounterSpec::clear_unit() {
  unit_ = 0;
}
inline ::p4::config::v1::CounterSpec_Unit CounterSpec::unit() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.CounterSpec.unit)
  return static_cast< ::p4::config::v1::CounterSpec_Unit >(unit_);
}
inline void CounterSpec::set_unit(::p4::config::v1::CounterSpec_Unit value) {
  
  unit_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.CounterSpec.unit)
}

// -------------------------------------------------------------------

// Counter

// .p4.config.v1.Preamble preamble = 1;
inline bool Counter::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
inline void Counter::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
inline const ::p4::config::v1::Preamble& Counter::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Counter.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
inline ::p4::config::v1::Preamble* Counter::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Counter.preamble)
  return preamble_;
}
inline ::p4::config::v1::Preamble* Counter::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Counter.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
inline void Counter::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Counter.preamble)
}

// .p4.config.v1.CounterSpec spec = 2;
inline bool Counter::has_spec() const {
  return this != internal_default_instance() && spec_ != NULL;
}
inline void Counter::clear_spec() {
  if (GetArenaNoVirtual() == NULL && spec_ != NULL) delete spec_;
  spec_ = NULL;
}
inline const ::p4::config::v1::CounterSpec& Counter::spec() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Counter.spec)
  return spec_ != NULL ? *spec_
                         : *::p4::config::v1::CounterSpec::internal_default_instance();
}
inline ::p4::config::v1::CounterSpec* Counter::mutable_spec() {
  
  if (spec_ == NULL) {
    spec_ = new ::p4::config::v1::CounterSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Counter.spec)
  return spec_;
}
inline ::p4::config::v1::CounterSpec* Counter::release_spec() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Counter.spec)
  
  ::p4::config::v1::CounterSpec* temp = spec_;
  spec_ = NULL;
  return temp;
}
inline void Counter::set_allocated_spec(::p4::config::v1::CounterSpec* spec) {
  delete spec_;
  spec_ = spec;
  if (spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Counter.spec)
}

// int64 size = 3;
inline void Counter::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Counter::size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Counter.size)
  return size_;
}
inline void Counter::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Counter.size)
}

// .p4.config.v1.P4NamedType index_type_name = 4;
inline bool Counter::has_index_type_name() const {
  return this != internal_default_instance() && index_type_name_ != NULL;
}
inline void Counter::clear_index_type_name() {
  if (GetArenaNoVirtual() == NULL && index_type_name_ != NULL) delete index_type_name_;
  index_type_name_ = NULL;
}
inline const ::p4::config::v1::P4NamedType& Counter::index_type_name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Counter.index_type_name)
  return index_type_name_ != NULL ? *index_type_name_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
inline ::p4::config::v1::P4NamedType* Counter::mutable_index_type_name() {
  
  if (index_type_name_ == NULL) {
    index_type_name_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Counter.index_type_name)
  return index_type_name_;
}
inline ::p4::config::v1::P4NamedType* Counter::release_index_type_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Counter.index_type_name)
  
  ::p4::config::v1::P4NamedType* temp = index_type_name_;
  index_type_name_ = NULL;
  return temp;
}
inline void Counter::set_allocated_index_type_name(::p4::config::v1::P4NamedType* index_type_name) {
  delete index_type_name_;
  index_type_name_ = index_type_name;
  if (index_type_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Counter.index_type_name)
}

// -------------------------------------------------------------------

// DirectCounter

// .p4.config.v1.Preamble preamble = 1;
inline bool DirectCounter::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
inline void DirectCounter::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
inline const ::p4::config::v1::Preamble& DirectCounter::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.DirectCounter.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
inline ::p4::config::v1::Preamble* DirectCounter::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.DirectCounter.preamble)
  return preamble_;
}
inline ::p4::config::v1::Preamble* DirectCounter::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.DirectCounter.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
inline void DirectCounter::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.DirectCounter.preamble)
}

// .p4.config.v1.CounterSpec spec = 2;
inline bool DirectCounter::has_spec() const {
  return this != internal_default_instance() && spec_ != NULL;
}
inline void DirectCounter::clear_spec() {
  if (GetArenaNoVirtual() == NULL && spec_ != NULL) delete spec_;
  spec_ = NULL;
}
inline const ::p4::config::v1::CounterSpec& DirectCounter::spec() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.DirectCounter.spec)
  return spec_ != NULL ? *spec_
                         : *::p4::config::v1::CounterSpec::internal_default_instance();
}
inline ::p4::config::v1::CounterSpec* DirectCounter::mutable_spec() {
  
  if (spec_ == NULL) {
    spec_ = new ::p4::config::v1::CounterSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.DirectCounter.spec)
  return spec_;
}
inline ::p4::config::v1::CounterSpec* DirectCounter::release_spec() {
  // @@protoc_insertion_point(field_release:p4.config.v1.DirectCounter.spec)
  
  ::p4::config::v1::CounterSpec* temp = spec_;
  spec_ = NULL;
  return temp;
}
inline void DirectCounter::set_allocated_spec(::p4::config::v1::CounterSpec* spec) {
  delete spec_;
  spec_ = spec;
  if (spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.DirectCounter.spec)
}

// uint32 direct_table_id = 3;
inline void DirectCounter::clear_direct_table_id() {
  direct_table_id_ = 0u;
}
inline ::google::protobuf::uint32 DirectCounter::direct_table_id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.DirectCounter.direct_table_id)
  return direct_table_id_;
}
inline void DirectCounter::set_direct_table_id(::google::protobuf::uint32 value) {
  
  direct_table_id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.DirectCounter.direct_table_id)
}

// -------------------------------------------------------------------

// MeterSpec

// .p4.config.v1.MeterSpec.Unit unit = 1;
inline void MeterSpec::clear_unit() {
  unit_ = 0;
}
inline ::p4::config::v1::MeterSpec_Unit MeterSpec::unit() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MeterSpec.unit)
  return static_cast< ::p4::config::v1::MeterSpec_Unit >(unit_);
}
inline void MeterSpec::set_unit(::p4::config::v1::MeterSpec_Unit value) {
  
  unit_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.MeterSpec.unit)
}

// -------------------------------------------------------------------

// Meter

// .p4.config.v1.Preamble preamble = 1;
inline bool Meter::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
inline void Meter::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
inline const ::p4::config::v1::Preamble& Meter::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Meter.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
inline ::p4::config::v1::Preamble* Meter::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Meter.preamble)
  return preamble_;
}
inline ::p4::config::v1::Preamble* Meter::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Meter.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
inline void Meter::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Meter.preamble)
}

// .p4.config.v1.MeterSpec spec = 2;
inline bool Meter::has_spec() const {
  return this != internal_default_instance() && spec_ != NULL;
}
inline void Meter::clear_spec() {
  if (GetArenaNoVirtual() == NULL && spec_ != NULL) delete spec_;
  spec_ = NULL;
}
inline const ::p4::config::v1::MeterSpec& Meter::spec() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Meter.spec)
  return spec_ != NULL ? *spec_
                         : *::p4::config::v1::MeterSpec::internal_default_instance();
}
inline ::p4::config::v1::MeterSpec* Meter::mutable_spec() {
  
  if (spec_ == NULL) {
    spec_ = new ::p4::config::v1::MeterSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Meter.spec)
  return spec_;
}
inline ::p4::config::v1::MeterSpec* Meter::release_spec() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Meter.spec)
  
  ::p4::config::v1::MeterSpec* temp = spec_;
  spec_ = NULL;
  return temp;
}
inline void Meter::set_allocated_spec(::p4::config::v1::MeterSpec* spec) {
  delete spec_;
  spec_ = spec;
  if (spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Meter.spec)
}

// int64 size = 3;
inline void Meter::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Meter::size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Meter.size)
  return size_;
}
inline void Meter::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Meter.size)
}

// .p4.config.v1.P4NamedType index_type_name = 4;
inline bool Meter::has_index_type_name() const {
  return this != internal_default_instance() && index_type_name_ != NULL;
}
inline void Meter::clear_index_type_name() {
  if (GetArenaNoVirtual() == NULL && index_type_name_ != NULL) delete index_type_name_;
  index_type_name_ = NULL;
}
inline const ::p4::config::v1::P4NamedType& Meter::index_type_name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Meter.index_type_name)
  return index_type_name_ != NULL ? *index_type_name_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
inline ::p4::config::v1::P4NamedType* Meter::mutable_index_type_name() {
  
  if (index_type_name_ == NULL) {
    index_type_name_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Meter.index_type_name)
  return index_type_name_;
}
inline ::p4::config::v1::P4NamedType* Meter::release_index_type_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Meter.index_type_name)
  
  ::p4::config::v1::P4NamedType* temp = index_type_name_;
  index_type_name_ = NULL;
  return temp;
}
inline void Meter::set_allocated_index_type_name(::p4::config::v1::P4NamedType* index_type_name) {
  delete index_type_name_;
  index_type_name_ = index_type_name;
  if (index_type_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Meter.index_type_name)
}

// -------------------------------------------------------------------

// DirectMeter

// .p4.config.v1.Preamble preamble = 1;
inline bool DirectMeter::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
inline void DirectMeter::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
inline const ::p4::config::v1::Preamble& DirectMeter::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.DirectMeter.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
inline ::p4::config::v1::Preamble* DirectMeter::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.DirectMeter.preamble)
  return preamble_;
}
inline ::p4::config::v1::Preamble* DirectMeter::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.DirectMeter.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
inline void DirectMeter::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.DirectMeter.preamble)
}

// .p4.config.v1.MeterSpec spec = 2;
inline bool DirectMeter::has_spec() const {
  return this != internal_default_instance() && spec_ != NULL;
}
inline void DirectMeter::clear_spec() {
  if (GetArenaNoVirtual() == NULL && spec_ != NULL) delete spec_;
  spec_ = NULL;
}
inline const ::p4::config::v1::MeterSpec& DirectMeter::spec() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.DirectMeter.spec)
  return spec_ != NULL ? *spec_
                         : *::p4::config::v1::MeterSpec::internal_default_instance();
}
inline ::p4::config::v1::MeterSpec* DirectMeter::mutable_spec() {
  
  if (spec_ == NULL) {
    spec_ = new ::p4::config::v1::MeterSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.DirectMeter.spec)
  return spec_;
}
inline ::p4::config::v1::MeterSpec* DirectMeter::release_spec() {
  // @@protoc_insertion_point(field_release:p4.config.v1.DirectMeter.spec)
  
  ::p4::config::v1::MeterSpec* temp = spec_;
  spec_ = NULL;
  return temp;
}
inline void DirectMeter::set_allocated_spec(::p4::config::v1::MeterSpec* spec) {
  delete spec_;
  spec_ = spec;
  if (spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.DirectMeter.spec)
}

// uint32 direct_table_id = 3;
inline void DirectMeter::clear_direct_table_id() {
  direct_table_id_ = 0u;
}
inline ::google::protobuf::uint32 DirectMeter::direct_table_id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.DirectMeter.direct_table_id)
  return direct_table_id_;
}
inline void DirectMeter::set_direct_table_id(::google::protobuf::uint32 value) {
  
  direct_table_id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.DirectMeter.direct_table_id)
}

// -------------------------------------------------------------------

// ControllerPacketMetadata_Metadata

// uint32 id = 1;
inline void ControllerPacketMetadata_Metadata::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ControllerPacketMetadata_Metadata::id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ControllerPacketMetadata.Metadata.id)
  return id_;
}
inline void ControllerPacketMetadata_Metadata::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.ControllerPacketMetadata.Metadata.id)
}

// string name = 2;
inline void ControllerPacketMetadata_Metadata::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ControllerPacketMetadata_Metadata::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ControllerPacketMetadata.Metadata.name)
  return name_.GetNoArena();
}
inline void ControllerPacketMetadata_Metadata::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.ControllerPacketMetadata.Metadata.name)
}
#if LANG_CXX11
inline void ControllerPacketMetadata_Metadata::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.ControllerPacketMetadata.Metadata.name)
}
#endif
inline void ControllerPacketMetadata_Metadata::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.ControllerPacketMetadata.Metadata.name)
}
inline void ControllerPacketMetadata_Metadata::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.ControllerPacketMetadata.Metadata.name)
}
inline ::std::string* ControllerPacketMetadata_Metadata::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ControllerPacketMetadata.Metadata.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ControllerPacketMetadata_Metadata::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.ControllerPacketMetadata.Metadata.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ControllerPacketMetadata_Metadata::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.ControllerPacketMetadata.Metadata.name)
}

// repeated string annotations = 3;
inline int ControllerPacketMetadata_Metadata::annotations_size() const {
  return annotations_.size();
}
inline void ControllerPacketMetadata_Metadata::clear_annotations() {
  annotations_.Clear();
}
inline const ::std::string& ControllerPacketMetadata_Metadata::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
  return annotations_.Get(index);
}
inline ::std::string* ControllerPacketMetadata_Metadata::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
  return annotations_.Mutable(index);
}
inline void ControllerPacketMetadata_Metadata::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
  annotations_.Mutable(index)->assign(value);
}
inline void ControllerPacketMetadata_Metadata::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
}
inline void ControllerPacketMetadata_Metadata::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
}
inline ::std::string* ControllerPacketMetadata_Metadata::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
  return annotations_.Add();
}
inline void ControllerPacketMetadata_Metadata::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
}
inline void ControllerPacketMetadata_Metadata::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
}
inline void ControllerPacketMetadata_Metadata::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ControllerPacketMetadata_Metadata::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
  return annotations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ControllerPacketMetadata_Metadata::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
  return &annotations_;
}

// int32 bitwidth = 4;
inline void ControllerPacketMetadata_Metadata::clear_bitwidth() {
  bitwidth_ = 0;
}
inline ::google::protobuf::int32 ControllerPacketMetadata_Metadata::bitwidth() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ControllerPacketMetadata.Metadata.bitwidth)
  return bitwidth_;
}
inline void ControllerPacketMetadata_Metadata::set_bitwidth(::google::protobuf::int32 value) {
  
  bitwidth_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.ControllerPacketMetadata.Metadata.bitwidth)
}

// .p4.config.v1.P4NamedType type_name = 5;
inline bool ControllerPacketMetadata_Metadata::has_type_name() const {
  return this != internal_default_instance() && type_name_ != NULL;
}
inline void ControllerPacketMetadata_Metadata::clear_type_name() {
  if (GetArenaNoVirtual() == NULL && type_name_ != NULL) delete type_name_;
  type_name_ = NULL;
}
inline const ::p4::config::v1::P4NamedType& ControllerPacketMetadata_Metadata::type_name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ControllerPacketMetadata.Metadata.type_name)
  return type_name_ != NULL ? *type_name_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
inline ::p4::config::v1::P4NamedType* ControllerPacketMetadata_Metadata::mutable_type_name() {
  
  if (type_name_ == NULL) {
    type_name_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ControllerPacketMetadata.Metadata.type_name)
  return type_name_;
}
inline ::p4::config::v1::P4NamedType* ControllerPacketMetadata_Metadata::release_type_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.ControllerPacketMetadata.Metadata.type_name)
  
  ::p4::config::v1::P4NamedType* temp = type_name_;
  type_name_ = NULL;
  return temp;
}
inline void ControllerPacketMetadata_Metadata::set_allocated_type_name(::p4::config::v1::P4NamedType* type_name) {
  delete type_name_;
  type_name_ = type_name;
  if (type_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.ControllerPacketMetadata.Metadata.type_name)
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 6;
inline int ControllerPacketMetadata_Metadata::structured_annotations_size() const {
  return structured_annotations_.size();
}
inline void ControllerPacketMetadata_Metadata::clear_structured_annotations() {
  structured_annotations_.Clear();
}
inline const ::p4::config::v1::StructuredAnnotation& ControllerPacketMetadata_Metadata::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ControllerPacketMetadata.Metadata.structured_annotations)
  return structured_annotations_.Get(index);
}
inline ::p4::config::v1::StructuredAnnotation* ControllerPacketMetadata_Metadata::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ControllerPacketMetadata.Metadata.structured_annotations)
  return structured_annotations_.Mutable(index);
}
inline ::p4::config::v1::StructuredAnnotation* ControllerPacketMetadata_Metadata::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.ControllerPacketMetadata.Metadata.structured_annotations)
  return structured_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
ControllerPacketMetadata_Metadata::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.ControllerPacketMetadata.Metadata.structured_annotations)
  return &structured_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
ControllerPacketMetadata_Metadata::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.ControllerPacketMetadata.Metadata.structured_annotations)
  return structured_annotations_;
}

// -------------------------------------------------------------------

// ControllerPacketMetadata

// .p4.config.v1.Preamble preamble = 1;
inline bool ControllerPacketMetadata::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
inline void ControllerPacketMetadata::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
inline const ::p4::config::v1::Preamble& ControllerPacketMetadata::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ControllerPacketMetadata.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
inline ::p4::config::v1::Preamble* ControllerPacketMetadata::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ControllerPacketMetadata.preamble)
  return preamble_;
}
inline ::p4::config::v1::Preamble* ControllerPacketMetadata::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.ControllerPacketMetadata.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
inline void ControllerPacketMetadata::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.ControllerPacketMetadata.preamble)
}

// repeated .p4.config.v1.ControllerPacketMetadata.Metadata metadata = 2;
inline int ControllerPacketMetadata::metadata_size() const {
  return metadata_.size();
}
inline void ControllerPacketMetadata::clear_metadata() {
  metadata_.Clear();
}
inline const ::p4::config::v1::ControllerPacketMetadata_Metadata& ControllerPacketMetadata::metadata(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ControllerPacketMetadata.metadata)
  return metadata_.Get(index);
}
inline ::p4::config::v1::ControllerPacketMetadata_Metadata* ControllerPacketMetadata::mutable_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ControllerPacketMetadata.metadata)
  return metadata_.Mutable(index);
}
inline ::p4::config::v1::ControllerPacketMetadata_Metadata* ControllerPacketMetadata::add_metadata() {
  // @@protoc_insertion_point(field_add:p4.config.v1.ControllerPacketMetadata.metadata)
  return metadata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ControllerPacketMetadata_Metadata >*
ControllerPacketMetadata::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.ControllerPacketMetadata.metadata)
  return &metadata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ControllerPacketMetadata_Metadata >&
ControllerPacketMetadata::metadata() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.ControllerPacketMetadata.metadata)
  return metadata_;
}

// -------------------------------------------------------------------

// ValueSet

// .p4.config.v1.Preamble preamble = 1;
inline bool ValueSet::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
inline void ValueSet::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
inline const ::p4::config::v1::Preamble& ValueSet::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ValueSet.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
inline ::p4::config::v1::Preamble* ValueSet::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ValueSet.preamble)
  return preamble_;
}
inline ::p4::config::v1::Preamble* ValueSet::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.ValueSet.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
inline void ValueSet::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.ValueSet.preamble)
}

// repeated .p4.config.v1.MatchField match = 2;
inline int ValueSet::match_size() const {
  return match_.size();
}
inline void ValueSet::clear_match() {
  match_.Clear();
}
inline const ::p4::config::v1::MatchField& ValueSet::match(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ValueSet.match)
  return match_.Get(index);
}
inline ::p4::config::v1::MatchField* ValueSet::mutable_match(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ValueSet.match)
  return match_.Mutable(index);
}
inline ::p4::config::v1::MatchField* ValueSet::add_match() {
  // @@protoc_insertion_point(field_add:p4.config.v1.ValueSet.match)
  return match_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::MatchField >*
ValueSet::mutable_match() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.ValueSet.match)
  return &match_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::MatchField >&
ValueSet::match() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.ValueSet.match)
  return match_;
}

// int32 size = 3;
inline void ValueSet::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 ValueSet::size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ValueSet.size)
  return size_;
}
inline void ValueSet::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.ValueSet.size)
}

// -------------------------------------------------------------------

// Register

// .p4.config.v1.Preamble preamble = 1;
inline bool Register::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
inline void Register::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
inline const ::p4::config::v1::Preamble& Register::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Register.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
inline ::p4::config::v1::Preamble* Register::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Register.preamble)
  return preamble_;
}
inline ::p4::config::v1::Preamble* Register::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Register.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
inline void Register::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Register.preamble)
}

// .p4.config.v1.P4DataTypeSpec type_spec = 2;
inline bool Register::has_type_spec() const {
  return this != internal_default_instance() && type_spec_ != NULL;
}
inline void Register::clear_type_spec() {
  if (GetArenaNoVirtual() == NULL && type_spec_ != NULL) delete type_spec_;
  type_spec_ = NULL;
}
inline const ::p4::config::v1::P4DataTypeSpec& Register::type_spec() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Register.type_spec)
  return type_spec_ != NULL ? *type_spec_
                         : *::p4::config::v1::P4DataTypeSpec::internal_default_instance();
}
inline ::p4::config::v1::P4DataTypeSpec* Register::mutable_type_spec() {
  
  if (type_spec_ == NULL) {
    type_spec_ = new ::p4::config::v1::P4DataTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Register.type_spec)
  return type_spec_;
}
inline ::p4::config::v1::P4DataTypeSpec* Register::release_type_spec() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Register.type_spec)
  
  ::p4::config::v1::P4DataTypeSpec* temp = type_spec_;
  type_spec_ = NULL;
  return temp;
}
inline void Register::set_allocated_type_spec(::p4::config::v1::P4DataTypeSpec* type_spec) {
  delete type_spec_;
  type_spec_ = type_spec;
  if (type_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Register.type_spec)
}

// int32 size = 3;
inline void Register::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 Register::size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Register.size)
  return size_;
}
inline void Register::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Register.size)
}

// .p4.config.v1.P4NamedType index_type_name = 4;
inline bool Register::has_index_type_name() const {
  return this != internal_default_instance() && index_type_name_ != NULL;
}
inline void Register::clear_index_type_name() {
  if (GetArenaNoVirtual() == NULL && index_type_name_ != NULL) delete index_type_name_;
  index_type_name_ = NULL;
}
inline const ::p4::config::v1::P4NamedType& Register::index_type_name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Register.index_type_name)
  return index_type_name_ != NULL ? *index_type_name_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
inline ::p4::config::v1::P4NamedType* Register::mutable_index_type_name() {
  
  if (index_type_name_ == NULL) {
    index_type_name_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Register.index_type_name)
  return index_type_name_;
}
inline ::p4::config::v1::P4NamedType* Register::release_index_type_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Register.index_type_name)
  
  ::p4::config::v1::P4NamedType* temp = index_type_name_;
  index_type_name_ = NULL;
  return temp;
}
inline void Register::set_allocated_index_type_name(::p4::config::v1::P4NamedType* index_type_name) {
  delete index_type_name_;
  index_type_name_ = index_type_name;
  if (index_type_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Register.index_type_name)
}

// -------------------------------------------------------------------

// Digest

// .p4.config.v1.Preamble preamble = 1;
inline bool Digest::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
inline void Digest::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
inline const ::p4::config::v1::Preamble& Digest::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Digest.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
inline ::p4::config::v1::Preamble* Digest::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Digest.preamble)
  return preamble_;
}
inline ::p4::config::v1::Preamble* Digest::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Digest.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
inline void Digest::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Digest.preamble)
}

// .p4.config.v1.P4DataTypeSpec type_spec = 2;
inline bool Digest::has_type_spec() const {
  return this != internal_default_instance() && type_spec_ != NULL;
}
inline void Digest::clear_type_spec() {
  if (GetArenaNoVirtual() == NULL && type_spec_ != NULL) delete type_spec_;
  type_spec_ = NULL;
}
inline const ::p4::config::v1::P4DataTypeSpec& Digest::type_spec() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Digest.type_spec)
  return type_spec_ != NULL ? *type_spec_
                         : *::p4::config::v1::P4DataTypeSpec::internal_default_instance();
}
inline ::p4::config::v1::P4DataTypeSpec* Digest::mutable_type_spec() {
  
  if (type_spec_ == NULL) {
    type_spec_ = new ::p4::config::v1::P4DataTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Digest.type_spec)
  return type_spec_;
}
inline ::p4::config::v1::P4DataTypeSpec* Digest::release_type_spec() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Digest.type_spec)
  
  ::p4::config::v1::P4DataTypeSpec* temp = type_spec_;
  type_spec_ = NULL;
  return temp;
}
inline void Digest::set_allocated_type_spec(::p4::config::v1::P4DataTypeSpec* type_spec) {
  delete type_spec_;
  type_spec_ = type_spec;
  if (type_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Digest.type_spec)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v1
}  // namespace config
}  // namespace p4

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::p4::config::v1::P4Ids_Prefix> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::p4::config::v1::P4Ids_Prefix>() {
  return ::p4::config::v1::P4Ids_Prefix_descriptor();
}
template <> struct is_proto_enum< ::p4::config::v1::MatchField_MatchType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::p4::config::v1::MatchField_MatchType>() {
  return ::p4::config::v1::MatchField_MatchType_descriptor();
}
template <> struct is_proto_enum< ::p4::config::v1::Table_IdleTimeoutBehavior> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::p4::config::v1::Table_IdleTimeoutBehavior>() {
  return ::p4::config::v1::Table_IdleTimeoutBehavior_descriptor();
}
template <> struct is_proto_enum< ::p4::config::v1::ActionRef_Scope> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::p4::config::v1::ActionRef_Scope>() {
  return ::p4::config::v1::ActionRef_Scope_descriptor();
}
template <> struct is_proto_enum< ::p4::config::v1::CounterSpec_Unit> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::p4::config::v1::CounterSpec_Unit>() {
  return ::p4::config::v1::CounterSpec_Unit_descriptor();
}
template <> struct is_proto_enum< ::p4::config::v1::MeterSpec_Unit> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::p4::config::v1::MeterSpec_Unit>() {
  return ::p4::config::v1::MeterSpec_Unit_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_p4_2fconfig_2fv1_2fp4info_2eproto__INCLUDED
