// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: p4/config/v1/p4info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "p4/config/v1/p4info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace p4 {
namespace config {
namespace v1 {
class P4InfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4Info> {
} _P4Info_default_instance_;
class DocumentationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Documentation> {
} _Documentation_default_instance_;
class PkgInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PkgInfo> {
} _PkgInfo_default_instance_;
class P4IdsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4Ids> {
} _P4Ids_default_instance_;
class PreambleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Preamble> {
} _Preamble_default_instance_;
class ExternDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Extern> {
} _Extern_default_instance_;
class ExternInstanceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ExternInstance> {
} _ExternInstance_default_instance_;
class MatchFieldDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MatchField> {
  public:
  int match_type_;
  ::google::protobuf::internal::ArenaStringPtr other_match_type_;
} _MatchField_default_instance_;
class TableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Table> {
} _Table_default_instance_;
class ActionRefDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActionRef> {
} _ActionRef_default_instance_;
class Action_ParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Action_Param> {
} _Action_Param_default_instance_;
class ActionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Action> {
} _Action_default_instance_;
class ActionProfileDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActionProfile> {
} _ActionProfile_default_instance_;
class CounterSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CounterSpec> {
} _CounterSpec_default_instance_;
class CounterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Counter> {
} _Counter_default_instance_;
class DirectCounterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DirectCounter> {
} _DirectCounter_default_instance_;
class MeterSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MeterSpec> {
} _MeterSpec_default_instance_;
class MeterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Meter> {
} _Meter_default_instance_;
class DirectMeterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DirectMeter> {
} _DirectMeter_default_instance_;
class ControllerPacketMetadata_MetadataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ControllerPacketMetadata_Metadata> {
} _ControllerPacketMetadata_Metadata_default_instance_;
class ControllerPacketMetadataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ControllerPacketMetadata> {
} _ControllerPacketMetadata_default_instance_;
class ValueSetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ValueSet> {
} _ValueSet_default_instance_;
class RegisterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Register> {
} _Register_default_instance_;
class DigestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Digest> {
} _Digest_default_instance_;

namespace protobuf_p4_2fconfig_2fv1_2fp4info_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[24];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4Info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4Info, pkg_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4Info, tables_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4Info, actions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4Info, action_profiles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4Info, counters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4Info, direct_counters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4Info, meters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4Info, direct_meters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4Info, controller_packet_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4Info, value_sets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4Info, registers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4Info, digests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4Info, externs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4Info, type_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Documentation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Documentation, brief_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Documentation, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgInfo, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgInfo, doc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgInfo, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgInfo, arch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgInfo, organization_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgInfo, contact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgInfo, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgInfo, structured_annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4Ids, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Preamble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Preamble, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Preamble, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Preamble, alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Preamble, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Preamble, doc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Preamble, structured_annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Extern, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Extern, extern_type_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Extern, extern_type_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Extern, instances_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternInstance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternInstance, preamble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExternInstance, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchField, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchField, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchField, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchField, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchField, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchField, bitwidth_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_MatchField_default_instance_), match_type_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_MatchField_default_instance_), other_match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchField, doc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchField, type_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchField, structured_annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchField, match_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, preamble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, match_fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, action_refs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, const_default_action_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, implementation_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, direct_resource_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, idle_timeout_behavior_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, is_const_table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Table, other_properties_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionRef, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionRef, scope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionRef, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionRef, structured_annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action_Param, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action_Param, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action_Param, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action_Param, bitwidth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action_Param, doc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action_Param, type_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action_Param, structured_annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, preamble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionProfile, preamble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionProfile, table_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionProfile, with_selector_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionProfile, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionProfile, max_group_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterSpec, unit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Counter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Counter, preamble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Counter, spec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Counter, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Counter, index_type_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirectCounter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirectCounter, preamble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirectCounter, spec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirectCounter, direct_table_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeterSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeterSpec, unit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Meter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Meter, preamble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Meter, spec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Meter, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Meter, index_type_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirectMeter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirectMeter, preamble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirectMeter, spec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DirectMeter, direct_table_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerPacketMetadata_Metadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerPacketMetadata_Metadata, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerPacketMetadata_Metadata, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerPacketMetadata_Metadata, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerPacketMetadata_Metadata, bitwidth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerPacketMetadata_Metadata, type_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerPacketMetadata_Metadata, structured_annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerPacketMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerPacketMetadata, preamble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControllerPacketMetadata, metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueSet, preamble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueSet, match_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueSet, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Register, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Register, preamble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Register, type_spec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Register, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Register, index_type_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Digest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Digest, preamble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Digest, type_spec_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(P4Info)},
  { 18, -1, sizeof(Documentation)},
  { 24, -1, sizeof(PkgInfo)},
  { 37, -1, sizeof(P4Ids)},
  { 41, -1, sizeof(Preamble)},
  { 51, -1, sizeof(Extern)},
  { 58, -1, sizeof(ExternInstance)},
  { 64, -1, sizeof(MatchField)},
  { 78, -1, sizeof(Table)},
  { 92, -1, sizeof(ActionRef)},
  { 100, -1, sizeof(Action_Param)},
  { 111, -1, sizeof(Action)},
  { 117, -1, sizeof(ActionProfile)},
  { 126, -1, sizeof(CounterSpec)},
  { 131, -1, sizeof(Counter)},
  { 139, -1, sizeof(DirectCounter)},
  { 146, -1, sizeof(MeterSpec)},
  { 151, -1, sizeof(Meter)},
  { 159, -1, sizeof(DirectMeter)},
  { 166, -1, sizeof(ControllerPacketMetadata_Metadata)},
  { 176, -1, sizeof(ControllerPacketMetadata)},
  { 182, -1, sizeof(ValueSet)},
  { 189, -1, sizeof(Register)},
  { 197, -1, sizeof(Digest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4Info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Documentation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PkgInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4Ids_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Preamble_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Extern_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExternInstance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Table_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActionRef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Action_Param_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Action_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActionProfile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CounterSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Counter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DirectCounter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MeterSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Meter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DirectMeter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ControllerPacketMetadata_Metadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ControllerPacketMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ValueSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Register_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Digest_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "p4/config/v1/p4info.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 24);
}

}  // namespace

void TableStruct::Shutdown() {
  _P4Info_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Documentation_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _PkgInfo_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _P4Ids_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Preamble_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _Extern_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ExternInstance_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _MatchField_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _Table_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _ActionRef_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _Action_Param_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _Action_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _ActionProfile_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _CounterSpec_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _Counter_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _DirectCounter_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _MeterSpec_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _Meter_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _DirectMeter_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _ControllerPacketMetadata_Metadata_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _ControllerPacketMetadata_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _ValueSet_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _Register_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _Digest_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::InitDefaults();
  ::p4::config::v1::protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  _P4Info_default_instance_.DefaultConstruct();
  _Documentation_default_instance_.DefaultConstruct();
  _PkgInfo_default_instance_.DefaultConstruct();
  _P4Ids_default_instance_.DefaultConstruct();
  _Preamble_default_instance_.DefaultConstruct();
  _Extern_default_instance_.DefaultConstruct();
  _ExternInstance_default_instance_.DefaultConstruct();
  _MatchField_default_instance_.DefaultConstruct();
  _Table_default_instance_.DefaultConstruct();
  _ActionRef_default_instance_.DefaultConstruct();
  _Action_Param_default_instance_.DefaultConstruct();
  _Action_default_instance_.DefaultConstruct();
  _ActionProfile_default_instance_.DefaultConstruct();
  _CounterSpec_default_instance_.DefaultConstruct();
  _Counter_default_instance_.DefaultConstruct();
  _DirectCounter_default_instance_.DefaultConstruct();
  _MeterSpec_default_instance_.DefaultConstruct();
  _Meter_default_instance_.DefaultConstruct();
  _DirectMeter_default_instance_.DefaultConstruct();
  _ControllerPacketMetadata_Metadata_default_instance_.DefaultConstruct();
  _ControllerPacketMetadata_default_instance_.DefaultConstruct();
  _ValueSet_default_instance_.DefaultConstruct();
  _Register_default_instance_.DefaultConstruct();
  _Digest_default_instance_.DefaultConstruct();
  _P4Info_default_instance_.get_mutable()->pkg_info_ = const_cast< ::p4::config::v1::PkgInfo*>(
      ::p4::config::v1::PkgInfo::internal_default_instance());
  _P4Info_default_instance_.get_mutable()->type_info_ = const_cast< ::p4::config::v1::P4TypeInfo*>(
      ::p4::config::v1::P4TypeInfo::internal_default_instance());
  _PkgInfo_default_instance_.get_mutable()->doc_ = const_cast< ::p4::config::v1::Documentation*>(
      ::p4::config::v1::Documentation::internal_default_instance());
  _Preamble_default_instance_.get_mutable()->doc_ = const_cast< ::p4::config::v1::Documentation*>(
      ::p4::config::v1::Documentation::internal_default_instance());
  _ExternInstance_default_instance_.get_mutable()->preamble_ = const_cast< ::p4::config::v1::Preamble*>(
      ::p4::config::v1::Preamble::internal_default_instance());
  _ExternInstance_default_instance_.get_mutable()->info_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  _MatchField_default_instance_.match_type_ = 0;
  _MatchField_default_instance_.other_match_type_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _MatchField_default_instance_.get_mutable()->doc_ = const_cast< ::p4::config::v1::Documentation*>(
      ::p4::config::v1::Documentation::internal_default_instance());
  _MatchField_default_instance_.get_mutable()->type_name_ = const_cast< ::p4::config::v1::P4NamedType*>(
      ::p4::config::v1::P4NamedType::internal_default_instance());
  _Table_default_instance_.get_mutable()->preamble_ = const_cast< ::p4::config::v1::Preamble*>(
      ::p4::config::v1::Preamble::internal_default_instance());
  _Table_default_instance_.get_mutable()->other_properties_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  _Action_Param_default_instance_.get_mutable()->doc_ = const_cast< ::p4::config::v1::Documentation*>(
      ::p4::config::v1::Documentation::internal_default_instance());
  _Action_Param_default_instance_.get_mutable()->type_name_ = const_cast< ::p4::config::v1::P4NamedType*>(
      ::p4::config::v1::P4NamedType::internal_default_instance());
  _Action_default_instance_.get_mutable()->preamble_ = const_cast< ::p4::config::v1::Preamble*>(
      ::p4::config::v1::Preamble::internal_default_instance());
  _ActionProfile_default_instance_.get_mutable()->preamble_ = const_cast< ::p4::config::v1::Preamble*>(
      ::p4::config::v1::Preamble::internal_default_instance());
  _Counter_default_instance_.get_mutable()->preamble_ = const_cast< ::p4::config::v1::Preamble*>(
      ::p4::config::v1::Preamble::internal_default_instance());
  _Counter_default_instance_.get_mutable()->spec_ = const_cast< ::p4::config::v1::CounterSpec*>(
      ::p4::config::v1::CounterSpec::internal_default_instance());
  _Counter_default_instance_.get_mutable()->index_type_name_ = const_cast< ::p4::config::v1::P4NamedType*>(
      ::p4::config::v1::P4NamedType::internal_default_instance());
  _DirectCounter_default_instance_.get_mutable()->preamble_ = const_cast< ::p4::config::v1::Preamble*>(
      ::p4::config::v1::Preamble::internal_default_instance());
  _DirectCounter_default_instance_.get_mutable()->spec_ = const_cast< ::p4::config::v1::CounterSpec*>(
      ::p4::config::v1::CounterSpec::internal_default_instance());
  _Meter_default_instance_.get_mutable()->preamble_ = const_cast< ::p4::config::v1::Preamble*>(
      ::p4::config::v1::Preamble::internal_default_instance());
  _Meter_default_instance_.get_mutable()->spec_ = const_cast< ::p4::config::v1::MeterSpec*>(
      ::p4::config::v1::MeterSpec::internal_default_instance());
  _Meter_default_instance_.get_mutable()->index_type_name_ = const_cast< ::p4::config::v1::P4NamedType*>(
      ::p4::config::v1::P4NamedType::internal_default_instance());
  _DirectMeter_default_instance_.get_mutable()->preamble_ = const_cast< ::p4::config::v1::Preamble*>(
      ::p4::config::v1::Preamble::internal_default_instance());
  _DirectMeter_default_instance_.get_mutable()->spec_ = const_cast< ::p4::config::v1::MeterSpec*>(
      ::p4::config::v1::MeterSpec::internal_default_instance());
  _ControllerPacketMetadata_Metadata_default_instance_.get_mutable()->type_name_ = const_cast< ::p4::config::v1::P4NamedType*>(
      ::p4::config::v1::P4NamedType::internal_default_instance());
  _ControllerPacketMetadata_default_instance_.get_mutable()->preamble_ = const_cast< ::p4::config::v1::Preamble*>(
      ::p4::config::v1::Preamble::internal_default_instance());
  _ValueSet_default_instance_.get_mutable()->preamble_ = const_cast< ::p4::config::v1::Preamble*>(
      ::p4::config::v1::Preamble::internal_default_instance());
  _Register_default_instance_.get_mutable()->preamble_ = const_cast< ::p4::config::v1::Preamble*>(
      ::p4::config::v1::Preamble::internal_default_instance());
  _Register_default_instance_.get_mutable()->type_spec_ = const_cast< ::p4::config::v1::P4DataTypeSpec*>(
      ::p4::config::v1::P4DataTypeSpec::internal_default_instance());
  _Register_default_instance_.get_mutable()->index_type_name_ = const_cast< ::p4::config::v1::P4NamedType*>(
      ::p4::config::v1::P4NamedType::internal_default_instance());
  _Digest_default_instance_.get_mutable()->preamble_ = const_cast< ::p4::config::v1::Preamble*>(
      ::p4::config::v1::Preamble::internal_default_instance());
  _Digest_default_instance_.get_mutable()->type_spec_ = const_cast< ::p4::config::v1::P4DataTypeSpec*>(
      ::p4::config::v1::P4DataTypeSpec::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\031p4/config/v1/p4info.proto\022\014p4.config.v"
      "1\032\031google/protobuf/any.proto\032\032p4/config/"
      "v1/p4types.proto\"\210\005\n\006P4Info\022\'\n\010pkg_info\030"
      "\001 \001(\0132\025.p4.config.v1.PkgInfo\022#\n\006tables\030\002"
      " \003(\0132\023.p4.config.v1.Table\022%\n\007actions\030\003 \003"
      "(\0132\024.p4.config.v1.Action\0224\n\017action_profi"
      "les\030\004 \003(\0132\033.p4.config.v1.ActionProfile\022\'"
      "\n\010counters\030\005 \003(\0132\025.p4.config.v1.Counter\022"
      "4\n\017direct_counters\030\006 \003(\0132\033.p4.config.v1."
      "DirectCounter\022#\n\006meters\030\007 \003(\0132\023.p4.confi"
      "g.v1.Meter\0220\n\rdirect_meters\030\010 \003(\0132\031.p4.c"
      "onfig.v1.DirectMeter\022J\n\032controller_packe"
      "t_metadata\030\t \003(\0132&.p4.config.v1.Controll"
      "erPacketMetadata\022*\n\nvalue_sets\030\n \003(\0132\026.p"
      "4.config.v1.ValueSet\022)\n\tregisters\030\013 \003(\0132"
      "\026.p4.config.v1.Register\022%\n\007digests\030\014 \003(\013"
      "2\024.p4.config.v1.Digest\022%\n\007externs\030d \003(\0132"
      "\024.p4.config.v1.Extern\022,\n\ttype_info\030\310\001 \001("
      "\0132\030.p4.config.v1.P4TypeInfo\"3\n\rDocumenta"
      "tion\022\r\n\005brief\030\001 \001(\t\022\023\n\013description\030\002 \001(\t"
      "\"\355\001\n\007PkgInfo\022\014\n\004name\030\001 \001(\t\022\017\n\007version\030\002 "
      "\001(\t\022(\n\003doc\030\003 \001(\0132\033.p4.config.v1.Document"
      "ation\022\023\n\013annotations\030\004 \003(\t\022\014\n\004arch\030\005 \001(\t"
      "\022\024\n\014organization\030\006 \001(\t\022\017\n\007contact\030\007 \001(\t\022"
      "\013\n\003url\030\010 \001(\t\022B\n\026structured_annotations\030\t"
      " \003(\0132\".p4.config.v1.StructuredAnnotation"
      "\"\207\002\n\005P4Ids\"\375\001\n\006Prefix\022\017\n\013UNSPECIFIED\020\000\022\n"
      "\n\006ACTION\020\001\022\t\n\005TABLE\020\002\022\r\n\tVALUE_SET\020\003\022\025\n\021"
      "CONTROLLER_HEADER\020\004\022\025\n\021PSA_EXTERNS_START"
      "\020\020\022\022\n\016ACTION_PROFILE\020\021\022\013\n\007COUNTER\020\022\022\022\n\016D"
      "IRECT_COUNTER\020\023\022\t\n\005METER\020\024\022\020\n\014DIRECT_MET"
      "ER\020\025\022\014\n\010REGISTER\020\026\022\n\n\006DIGEST\020\027\022\030\n\023OTHER_"
      "EXTERNS_START\020\200\001\022\010\n\003MAX\020\377\001\"\266\001\n\010Preamble\022"
      "\n\n\002id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\r\n\005alias\030\003 \001(\t"
      "\022\023\n\013annotations\030\004 \003(\t\022(\n\003doc\030\005 \001(\0132\033.p4."
      "config.v1.Documentation\022B\n\026structured_an"
      "notations\030\006 \003(\0132\".p4.config.v1.Structure"
      "dAnnotation\"k\n\006Extern\022\026\n\016extern_type_id\030"
      "\001 \001(\r\022\030\n\020extern_type_name\030\002 \001(\t\022/\n\tinsta"
      "nces\030\003 \003(\0132\034.p4.config.v1.ExternInstance"
      "\"^\n\016ExternInstance\022(\n\010preamble\030\001 \001(\0132\026.p"
      "4.config.v1.Preamble\022\"\n\004info\030\002 \001(\0132\024.goo"
      "gle.protobuf.Any\"\240\003\n\nMatchField\022\n\n\002id\030\001 "
      "\001(\r\022\014\n\004name\030\002 \001(\t\022\023\n\013annotations\030\003 \003(\t\022\020"
      "\n\010bitwidth\030\004 \001(\005\0228\n\nmatch_type\030\005 \001(\0162\".p"
      "4.config.v1.MatchField.MatchTypeH\000\022\032\n\020ot"
      "her_match_type\030\007 \001(\tH\000\022(\n\003doc\030\006 \001(\0132\033.p4"
      ".config.v1.Documentation\022,\n\ttype_name\030\010 "
      "\001(\0132\031.p4.config.v1.P4NamedType\022B\n\026struct"
      "ured_annotations\030\t \003(\0132\".p4.config.v1.St"
      "ructuredAnnotation\"V\n\tMatchType\022\017\n\013UNSPE"
      "CIFIED\020\000\022\t\n\005EXACT\020\002\022\007\n\003LPM\020\003\022\013\n\007TERNARY\020"
      "\004\022\t\n\005RANGE\020\005\022\014\n\010OPTIONAL\020\006B\007\n\005match\"\301\003\n\005"
      "Table\022(\n\010preamble\030\001 \001(\0132\026.p4.config.v1.P"
      "reamble\022.\n\014match_fields\030\002 \003(\0132\030.p4.confi"
      "g.v1.MatchField\022,\n\013action_refs\030\003 \003(\0132\027.p"
      "4.config.v1.ActionRef\022\037\n\027const_default_a"
      "ction_id\030\004 \001(\r\022\031\n\021implementation_id\030\006 \001("
      "\r\022\033\n\023direct_resource_ids\030\007 \003(\r\022\014\n\004size\030\010"
      " \001(\003\022F\n\025idle_timeout_behavior\030\t \001(\0162\'.p4"
      ".config.v1.Table.IdleTimeoutBehavior\022\026\n\016"
      "is_const_table\030\n \001(\010\022.\n\020other_properties"
      "\030d \001(\0132\024.google.protobuf.Any\"9\n\023IdleTime"
      "outBehavior\022\016\n\nNO_TIMEOUT\020\000\022\022\n\016NOTIFY_CO"
      "NTROL\020\001\"\340\001\n\tActionRef\022\n\n\002id\030\001 \001(\r\022,\n\005sco"
      "pe\030\003 \001(\0162\035.p4.config.v1.ActionRef.Scope\022"
      "\023\n\013annotations\030\002 \003(\t\022B\n\026structured_annot"
      "ations\030\004 \003(\0132\".p4.config.v1.StructuredAn"
      "notation\"@\n\005Scope\022\025\n\021TABLE_AND_DEFAULT\020\000"
      "\022\016\n\nTABLE_ONLY\020\001\022\020\n\014DEFAULT_ONLY\020\002\"\305\002\n\006A"
      "ction\022(\n\010preamble\030\001 \001(\0132\026.p4.config.v1.P"
      "reamble\022*\n\006params\030\002 \003(\0132\032.p4.config.v1.A"
      "ction.Param\032\344\001\n\005Param\022\n\n\002id\030\001 \001(\r\022\014\n\004nam"
      "e\030\002 \001(\t\022\023\n\013annotations\030\003 \003(\t\022\020\n\010bitwidth"
      "\030\004 \001(\005\022(\n\003doc\030\005 \001(\0132\033.p4.config.v1.Docum"
      "entation\022,\n\ttype_name\030\006 \001(\0132\031.p4.config."
      "v1.P4NamedType\022B\n\026structured_annotations"
      "\030\007 \003(\0132\".p4.config.v1.StructuredAnnotati"
      "on\"\211\001\n\rActionProfile\022(\n\010preamble\030\001 \001(\0132\026"
      ".p4.config.v1.Preamble\022\021\n\ttable_ids\030\002 \003("
      "\r\022\025\n\rwith_selector\030\003 \001(\010\022\014\n\004size\030\004 \001(\003\022\026"
      "\n\016max_group_size\030\005 \001(\005\"v\n\013CounterSpec\022,\n"
      "\004unit\030\001 \001(\0162\036.p4.config.v1.CounterSpec.U"
      "nit\"9\n\004Unit\022\017\n\013UNSPECIFIED\020\000\022\t\n\005BYTES\020\001\022"
      "\013\n\007PACKETS\020\002\022\010\n\004BOTH\020\003\"\236\001\n\007Counter\022(\n\010pr"
      "eamble\030\001 \001(\0132\026.p4.config.v1.Preamble\022\'\n\004"
      "spec\030\002 \001(\0132\031.p4.config.v1.CounterSpec\022\014\n"
      "\004size\030\003 \001(\003\0222\n\017index_type_name\030\004 \001(\0132\031.p"
      "4.config.v1.P4NamedType\"{\n\rDirectCounter"
      "\022(\n\010preamble\030\001 \001(\0132\026.p4.config.v1.Preamb"
      "le\022\'\n\004spec\030\002 \001(\0132\031.p4.config.v1.CounterS"
      "pec\022\027\n\017direct_table_id\030\003 \001(\r\"h\n\tMeterSpe"
      "c\022*\n\004unit\030\001 \001(\0162\034.p4.config.v1.MeterSpec"
      ".Unit\"/\n\004Unit\022\017\n\013UNSPECIFIED\020\000\022\t\n\005BYTES\020"
      "\001\022\013\n\007PACKETS\020\002\"\232\001\n\005Meter\022(\n\010preamble\030\001 \001"
      "(\0132\026.p4.config.v1.Preamble\022%\n\004spec\030\002 \001(\013"
      "2\027.p4.config.v1.MeterSpec\022\014\n\004size\030\003 \001(\003\022"
      "2\n\017index_type_name\030\004 \001(\0132\031.p4.config.v1."
      "P4NamedType\"w\n\013DirectMeter\022(\n\010preamble\030\001"
      " \001(\0132\026.p4.config.v1.Preamble\022%\n\004spec\030\002 \001"
      "(\0132\027.p4.config.v1.MeterSpec\022\027\n\017direct_ta"
      "ble_id\030\003 \001(\r\"\307\002\n\030ControllerPacketMetadat"
      "a\022(\n\010preamble\030\001 \001(\0132\026.p4.config.v1.Pream"
      "ble\022A\n\010metadata\030\002 \003(\0132/.p4.config.v1.Con"
      "trollerPacketMetadata.Metadata\032\275\001\n\010Metad"
      "ata\022\n\n\002id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\023\n\013annotat"
      "ions\030\003 \003(\t\022\020\n\010bitwidth\030\004 \001(\005\022,\n\ttype_nam"
      "e\030\005 \001(\0132\031.p4.config.v1.P4NamedType\022B\n\026st"
      "ructured_annotations\030\006 \003(\0132\".p4.config.v"
      "1.StructuredAnnotation\"k\n\010ValueSet\022(\n\010pr"
      "eamble\030\001 \001(\0132\026.p4.config.v1.Preamble\022\'\n\005"
      "match\030\002 \003(\0132\030.p4.config.v1.MatchField\022\014\n"
      "\004size\030\003 \001(\005\"\247\001\n\010Register\022(\n\010preamble\030\001 \001"
      "(\0132\026.p4.config.v1.Preamble\022/\n\ttype_spec\030"
      "\002 \001(\0132\034.p4.config.v1.P4DataTypeSpec\022\014\n\004s"
      "ize\030\003 \001(\005\0222\n\017index_type_name\030\004 \001(\0132\031.p4."
      "config.v1.P4NamedType\"c\n\006Digest\022(\n\010pream"
      "ble\030\001 \001(\0132\026.p4.config.v1.Preamble\022/\n\ttyp"
      "e_spec\030\002 \001(\0132\034.p4.config.v1.P4DataTypeSp"
      "ecb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4770);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "p4/config/v1/p4info.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::p4::config::v1::protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_p4_2fconfig_2fv1_2fp4info_2eproto

const ::google::protobuf::EnumDescriptor* P4Ids_Prefix_descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_enum_descriptors[0];
}
bool P4Ids_Prefix_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 128:
    case 255:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const P4Ids_Prefix P4Ids::UNSPECIFIED;
const P4Ids_Prefix P4Ids::ACTION;
const P4Ids_Prefix P4Ids::TABLE;
const P4Ids_Prefix P4Ids::VALUE_SET;
const P4Ids_Prefix P4Ids::CONTROLLER_HEADER;
const P4Ids_Prefix P4Ids::PSA_EXTERNS_START;
const P4Ids_Prefix P4Ids::ACTION_PROFILE;
const P4Ids_Prefix P4Ids::COUNTER;
const P4Ids_Prefix P4Ids::DIRECT_COUNTER;
const P4Ids_Prefix P4Ids::METER;
const P4Ids_Prefix P4Ids::DIRECT_METER;
const P4Ids_Prefix P4Ids::REGISTER;
const P4Ids_Prefix P4Ids::DIGEST;
const P4Ids_Prefix P4Ids::OTHER_EXTERNS_START;
const P4Ids_Prefix P4Ids::MAX;
const P4Ids_Prefix P4Ids::Prefix_MIN;
const P4Ids_Prefix P4Ids::Prefix_MAX;
const int P4Ids::Prefix_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MatchField_MatchType_descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_enum_descriptors[1];
}
bool MatchField_MatchType_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MatchField_MatchType MatchField::UNSPECIFIED;
const MatchField_MatchType MatchField::EXACT;
const MatchField_MatchType MatchField::LPM;
const MatchField_MatchType MatchField::TERNARY;
const MatchField_MatchType MatchField::RANGE;
const MatchField_MatchType MatchField::OPTIONAL;
const MatchField_MatchType MatchField::MatchType_MIN;
const MatchField_MatchType MatchField::MatchType_MAX;
const int MatchField::MatchType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Table_IdleTimeoutBehavior_descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_enum_descriptors[2];
}
bool Table_IdleTimeoutBehavior_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Table_IdleTimeoutBehavior Table::NO_TIMEOUT;
const Table_IdleTimeoutBehavior Table::NOTIFY_CONTROL;
const Table_IdleTimeoutBehavior Table::IdleTimeoutBehavior_MIN;
const Table_IdleTimeoutBehavior Table::IdleTimeoutBehavior_MAX;
const int Table::IdleTimeoutBehavior_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ActionRef_Scope_descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_enum_descriptors[3];
}
bool ActionRef_Scope_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ActionRef_Scope ActionRef::TABLE_AND_DEFAULT;
const ActionRef_Scope ActionRef::TABLE_ONLY;
const ActionRef_Scope ActionRef::DEFAULT_ONLY;
const ActionRef_Scope ActionRef::Scope_MIN;
const ActionRef_Scope ActionRef::Scope_MAX;
const int ActionRef::Scope_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CounterSpec_Unit_descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_enum_descriptors[4];
}
bool CounterSpec_Unit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CounterSpec_Unit CounterSpec::UNSPECIFIED;
const CounterSpec_Unit CounterSpec::BYTES;
const CounterSpec_Unit CounterSpec::PACKETS;
const CounterSpec_Unit CounterSpec::BOTH;
const CounterSpec_Unit CounterSpec::Unit_MIN;
const CounterSpec_Unit CounterSpec::Unit_MAX;
const int CounterSpec::Unit_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MeterSpec_Unit_descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_enum_descriptors[5];
}
bool MeterSpec_Unit_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MeterSpec_Unit MeterSpec::UNSPECIFIED;
const MeterSpec_Unit MeterSpec::BYTES;
const MeterSpec_Unit MeterSpec::PACKETS;
const MeterSpec_Unit MeterSpec::Unit_MIN;
const MeterSpec_Unit MeterSpec::Unit_MAX;
const int MeterSpec::Unit_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4Info::kPkgInfoFieldNumber;
const int P4Info::kTablesFieldNumber;
const int P4Info::kActionsFieldNumber;
const int P4Info::kActionProfilesFieldNumber;
const int P4Info::kCountersFieldNumber;
const int P4Info::kDirectCountersFieldNumber;
const int P4Info::kMetersFieldNumber;
const int P4Info::kDirectMetersFieldNumber;
const int P4Info::kControllerPacketMetadataFieldNumber;
const int P4Info::kValueSetsFieldNumber;
const int P4Info::kRegistersFieldNumber;
const int P4Info::kDigestsFieldNumber;
const int P4Info::kExternsFieldNumber;
const int P4Info::kTypeInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4Info::P4Info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4Info)
}
P4Info::P4Info(const P4Info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tables_(from.tables_),
      actions_(from.actions_),
      action_profiles_(from.action_profiles_),
      counters_(from.counters_),
      direct_counters_(from.direct_counters_),
      meters_(from.meters_),
      direct_meters_(from.direct_meters_),
      controller_packet_metadata_(from.controller_packet_metadata_),
      value_sets_(from.value_sets_),
      registers_(from.registers_),
      digests_(from.digests_),
      externs_(from.externs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pkg_info()) {
    pkg_info_ = new ::p4::config::v1::PkgInfo(*from.pkg_info_);
  } else {
    pkg_info_ = NULL;
  }
  if (from.has_type_info()) {
    type_info_ = new ::p4::config::v1::P4TypeInfo(*from.type_info_);
  } else {
    type_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4Info)
}

void P4Info::SharedCtor() {
  ::memset(&pkg_info_, 0, reinterpret_cast<char*>(&type_info_) -
    reinterpret_cast<char*>(&pkg_info_) + sizeof(type_info_));
  _cached_size_ = 0;
}

P4Info::~P4Info() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4Info)
  SharedDtor();
}

void P4Info::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pkg_info_;
  }
  if (this != internal_default_instance()) {
    delete type_info_;
  }
}

void P4Info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4Info::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[0].descriptor;
}

const P4Info& P4Info::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4Info* P4Info::New(::google::protobuf::Arena* arena) const {
  P4Info* n = new P4Info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4Info::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4Info)
  tables_.Clear();
  actions_.Clear();
  action_profiles_.Clear();
  counters_.Clear();
  direct_counters_.Clear();
  meters_.Clear();
  direct_meters_.Clear();
  controller_packet_metadata_.Clear();
  value_sets_.Clear();
  registers_.Clear();
  digests_.Clear();
  externs_.Clear();
  if (GetArenaNoVirtual() == NULL && pkg_info_ != NULL) {
    delete pkg_info_;
  }
  pkg_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_info_ != NULL) {
    delete type_info_;
  }
  type_info_ = NULL;
}

bool P4Info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4Info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.PkgInfo pkg_info = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pkg_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.Table tables = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tables()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .p4.config.v1.Action actions = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_actions()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .p4.config.v1.ActionProfile action_profiles = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_action_profiles()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .p4.config.v1.Counter counters = 5;
      case 5: {
        if (tag == 42u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_counters()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .p4.config.v1.DirectCounter direct_counters = 6;
      case 6: {
        if (tag == 50u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_direct_counters()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .p4.config.v1.Meter meters = 7;
      case 7: {
        if (tag == 58u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_meters()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .p4.config.v1.DirectMeter direct_meters = 8;
      case 8: {
        if (tag == 66u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_direct_meters()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .p4.config.v1.ControllerPacketMetadata controller_packet_metadata = 9;
      case 9: {
        if (tag == 74u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_controller_packet_metadata()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .p4.config.v1.ValueSet value_sets = 10;
      case 10: {
        if (tag == 82u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_value_sets()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .p4.config.v1.Register registers = 11;
      case 11: {
        if (tag == 90u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_registers()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .p4.config.v1.Digest digests = 12;
      case 12: {
        if (tag == 98u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_digests()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .p4.config.v1.Extern externs = 100;
      case 100: {
        if (tag == 802u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_externs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .p4.config.v1.P4TypeInfo type_info = 200;
      case 200: {
        if (tag == 1602u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4Info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4Info)
  return false;
#undef DO_
}

void P4Info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4Info)
  // .p4.config.v1.PkgInfo pkg_info = 1;
  if (this->has_pkg_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pkg_info_, output);
  }

  // repeated .p4.config.v1.Table tables = 2;
  for (unsigned int i = 0, n = this->tables_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->tables(i), output);
  }

  // repeated .p4.config.v1.Action actions = 3;
  for (unsigned int i = 0, n = this->actions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->actions(i), output);
  }

  // repeated .p4.config.v1.ActionProfile action_profiles = 4;
  for (unsigned int i = 0, n = this->action_profiles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->action_profiles(i), output);
  }

  // repeated .p4.config.v1.Counter counters = 5;
  for (unsigned int i = 0, n = this->counters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->counters(i), output);
  }

  // repeated .p4.config.v1.DirectCounter direct_counters = 6;
  for (unsigned int i = 0, n = this->direct_counters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->direct_counters(i), output);
  }

  // repeated .p4.config.v1.Meter meters = 7;
  for (unsigned int i = 0, n = this->meters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->meters(i), output);
  }

  // repeated .p4.config.v1.DirectMeter direct_meters = 8;
  for (unsigned int i = 0, n = this->direct_meters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->direct_meters(i), output);
  }

  // repeated .p4.config.v1.ControllerPacketMetadata controller_packet_metadata = 9;
  for (unsigned int i = 0, n = this->controller_packet_metadata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->controller_packet_metadata(i), output);
  }

  // repeated .p4.config.v1.ValueSet value_sets = 10;
  for (unsigned int i = 0, n = this->value_sets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->value_sets(i), output);
  }

  // repeated .p4.config.v1.Register registers = 11;
  for (unsigned int i = 0, n = this->registers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->registers(i), output);
  }

  // repeated .p4.config.v1.Digest digests = 12;
  for (unsigned int i = 0, n = this->digests_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->digests(i), output);
  }

  // repeated .p4.config.v1.Extern externs = 100;
  for (unsigned int i = 0, n = this->externs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->externs(i), output);
  }

  // .p4.config.v1.P4TypeInfo type_info = 200;
  if (this->has_type_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      200, *this->type_info_, output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4Info)
}

::google::protobuf::uint8* P4Info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4Info)
  // .p4.config.v1.PkgInfo pkg_info = 1;
  if (this->has_pkg_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pkg_info_, false, target);
  }

  // repeated .p4.config.v1.Table tables = 2;
  for (unsigned int i = 0, n = this->tables_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->tables(i), false, target);
  }

  // repeated .p4.config.v1.Action actions = 3;
  for (unsigned int i = 0, n = this->actions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->actions(i), false, target);
  }

  // repeated .p4.config.v1.ActionProfile action_profiles = 4;
  for (unsigned int i = 0, n = this->action_profiles_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->action_profiles(i), false, target);
  }

  // repeated .p4.config.v1.Counter counters = 5;
  for (unsigned int i = 0, n = this->counters_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->counters(i), false, target);
  }

  // repeated .p4.config.v1.DirectCounter direct_counters = 6;
  for (unsigned int i = 0, n = this->direct_counters_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->direct_counters(i), false, target);
  }

  // repeated .p4.config.v1.Meter meters = 7;
  for (unsigned int i = 0, n = this->meters_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->meters(i), false, target);
  }

  // repeated .p4.config.v1.DirectMeter direct_meters = 8;
  for (unsigned int i = 0, n = this->direct_meters_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->direct_meters(i), false, target);
  }

  // repeated .p4.config.v1.ControllerPacketMetadata controller_packet_metadata = 9;
  for (unsigned int i = 0, n = this->controller_packet_metadata_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->controller_packet_metadata(i), false, target);
  }

  // repeated .p4.config.v1.ValueSet value_sets = 10;
  for (unsigned int i = 0, n = this->value_sets_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->value_sets(i), false, target);
  }

  // repeated .p4.config.v1.Register registers = 11;
  for (unsigned int i = 0, n = this->registers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->registers(i), false, target);
  }

  // repeated .p4.config.v1.Digest digests = 12;
  for (unsigned int i = 0, n = this->digests_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->digests(i), false, target);
  }

  // repeated .p4.config.v1.Extern externs = 100;
  for (unsigned int i = 0, n = this->externs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        100, this->externs(i), false, target);
  }

  // .p4.config.v1.P4TypeInfo type_info = 200;
  if (this->has_type_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        200, *this->type_info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4Info)
  return target;
}

size_t P4Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4Info)
  size_t total_size = 0;

  // repeated .p4.config.v1.Table tables = 2;
  {
    unsigned int count = this->tables_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tables(i));
    }
  }

  // repeated .p4.config.v1.Action actions = 3;
  {
    unsigned int count = this->actions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->actions(i));
    }
  }

  // repeated .p4.config.v1.ActionProfile action_profiles = 4;
  {
    unsigned int count = this->action_profiles_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->action_profiles(i));
    }
  }

  // repeated .p4.config.v1.Counter counters = 5;
  {
    unsigned int count = this->counters_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->counters(i));
    }
  }

  // repeated .p4.config.v1.DirectCounter direct_counters = 6;
  {
    unsigned int count = this->direct_counters_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->direct_counters(i));
    }
  }

  // repeated .p4.config.v1.Meter meters = 7;
  {
    unsigned int count = this->meters_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->meters(i));
    }
  }

  // repeated .p4.config.v1.DirectMeter direct_meters = 8;
  {
    unsigned int count = this->direct_meters_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->direct_meters(i));
    }
  }

  // repeated .p4.config.v1.ControllerPacketMetadata controller_packet_metadata = 9;
  {
    unsigned int count = this->controller_packet_metadata_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->controller_packet_metadata(i));
    }
  }

  // repeated .p4.config.v1.ValueSet value_sets = 10;
  {
    unsigned int count = this->value_sets_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->value_sets(i));
    }
  }

  // repeated .p4.config.v1.Register registers = 11;
  {
    unsigned int count = this->registers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->registers(i));
    }
  }

  // repeated .p4.config.v1.Digest digests = 12;
  {
    unsigned int count = this->digests_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->digests(i));
    }
  }

  // repeated .p4.config.v1.Extern externs = 100;
  {
    unsigned int count = this->externs_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->externs(i));
    }
  }

  // .p4.config.v1.PkgInfo pkg_info = 1;
  if (this->has_pkg_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pkg_info_);
  }

  // .p4.config.v1.P4TypeInfo type_info = 200;
  if (this->has_type_info()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4Info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4Info)
  GOOGLE_DCHECK_NE(&from, this);
  const P4Info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4Info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4Info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4Info)
    MergeFrom(*source);
  }
}

void P4Info::MergeFrom(const P4Info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4Info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tables_.MergeFrom(from.tables_);
  actions_.MergeFrom(from.actions_);
  action_profiles_.MergeFrom(from.action_profiles_);
  counters_.MergeFrom(from.counters_);
  direct_counters_.MergeFrom(from.direct_counters_);
  meters_.MergeFrom(from.meters_);
  direct_meters_.MergeFrom(from.direct_meters_);
  controller_packet_metadata_.MergeFrom(from.controller_packet_metadata_);
  value_sets_.MergeFrom(from.value_sets_);
  registers_.MergeFrom(from.registers_);
  digests_.MergeFrom(from.digests_);
  externs_.MergeFrom(from.externs_);
  if (from.has_pkg_info()) {
    mutable_pkg_info()->::p4::config::v1::PkgInfo::MergeFrom(from.pkg_info());
  }
  if (from.has_type_info()) {
    mutable_type_info()->::p4::config::v1::P4TypeInfo::MergeFrom(from.type_info());
  }
}

void P4Info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4Info::CopyFrom(const P4Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4Info::IsInitialized() const {
  return true;
}

void P4Info::Swap(P4Info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4Info::InternalSwap(P4Info* other) {
  tables_.UnsafeArenaSwap(&other->tables_);
  actions_.UnsafeArenaSwap(&other->actions_);
  action_profiles_.UnsafeArenaSwap(&other->action_profiles_);
  counters_.UnsafeArenaSwap(&other->counters_);
  direct_counters_.UnsafeArenaSwap(&other->direct_counters_);
  meters_.UnsafeArenaSwap(&other->meters_);
  direct_meters_.UnsafeArenaSwap(&other->direct_meters_);
  controller_packet_metadata_.UnsafeArenaSwap(&other->controller_packet_metadata_);
  value_sets_.UnsafeArenaSwap(&other->value_sets_);
  registers_.UnsafeArenaSwap(&other->registers_);
  digests_.UnsafeArenaSwap(&other->digests_);
  externs_.UnsafeArenaSwap(&other->externs_);
  std::swap(pkg_info_, other->pkg_info_);
  std::swap(type_info_, other->type_info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4Info::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4Info

// .p4.config.v1.PkgInfo pkg_info = 1;
bool P4Info::has_pkg_info() const {
  return this != internal_default_instance() && pkg_info_ != NULL;
}
void P4Info::clear_pkg_info() {
  if (GetArenaNoVirtual() == NULL && pkg_info_ != NULL) delete pkg_info_;
  pkg_info_ = NULL;
}
const ::p4::config::v1::PkgInfo& P4Info::pkg_info() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.pkg_info)
  return pkg_info_ != NULL ? *pkg_info_
                         : *::p4::config::v1::PkgInfo::internal_default_instance();
}
::p4::config::v1::PkgInfo* P4Info::mutable_pkg_info() {
  
  if (pkg_info_ == NULL) {
    pkg_info_ = new ::p4::config::v1::PkgInfo;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.pkg_info)
  return pkg_info_;
}
::p4::config::v1::PkgInfo* P4Info::release_pkg_info() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4Info.pkg_info)
  
  ::p4::config::v1::PkgInfo* temp = pkg_info_;
  pkg_info_ = NULL;
  return temp;
}
void P4Info::set_allocated_pkg_info(::p4::config::v1::PkgInfo* pkg_info) {
  delete pkg_info_;
  pkg_info_ = pkg_info;
  if (pkg_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4Info.pkg_info)
}

// repeated .p4.config.v1.Table tables = 2;
int P4Info::tables_size() const {
  return tables_.size();
}
void P4Info::clear_tables() {
  tables_.Clear();
}
const ::p4::config::v1::Table& P4Info::tables(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.tables)
  return tables_.Get(index);
}
::p4::config::v1::Table* P4Info::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.tables)
  return tables_.Mutable(index);
}
::p4::config::v1::Table* P4Info::add_tables() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.tables)
  return tables_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::Table >*
P4Info::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.tables)
  return &tables_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Table >&
P4Info::tables() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.tables)
  return tables_;
}

// repeated .p4.config.v1.Action actions = 3;
int P4Info::actions_size() const {
  return actions_.size();
}
void P4Info::clear_actions() {
  actions_.Clear();
}
const ::p4::config::v1::Action& P4Info::actions(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.actions)
  return actions_.Get(index);
}
::p4::config::v1::Action* P4Info::mutable_actions(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.actions)
  return actions_.Mutable(index);
}
::p4::config::v1::Action* P4Info::add_actions() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.actions)
  return actions_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::Action >*
P4Info::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.actions)
  return &actions_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Action >&
P4Info::actions() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.actions)
  return actions_;
}

// repeated .p4.config.v1.ActionProfile action_profiles = 4;
int P4Info::action_profiles_size() const {
  return action_profiles_.size();
}
void P4Info::clear_action_profiles() {
  action_profiles_.Clear();
}
const ::p4::config::v1::ActionProfile& P4Info::action_profiles(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.action_profiles)
  return action_profiles_.Get(index);
}
::p4::config::v1::ActionProfile* P4Info::mutable_action_profiles(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.action_profiles)
  return action_profiles_.Mutable(index);
}
::p4::config::v1::ActionProfile* P4Info::add_action_profiles() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.action_profiles)
  return action_profiles_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::ActionProfile >*
P4Info::mutable_action_profiles() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.action_profiles)
  return &action_profiles_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ActionProfile >&
P4Info::action_profiles() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.action_profiles)
  return action_profiles_;
}

// repeated .p4.config.v1.Counter counters = 5;
int P4Info::counters_size() const {
  return counters_.size();
}
void P4Info::clear_counters() {
  counters_.Clear();
}
const ::p4::config::v1::Counter& P4Info::counters(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.counters)
  return counters_.Get(index);
}
::p4::config::v1::Counter* P4Info::mutable_counters(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.counters)
  return counters_.Mutable(index);
}
::p4::config::v1::Counter* P4Info::add_counters() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.counters)
  return counters_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::Counter >*
P4Info::mutable_counters() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.counters)
  return &counters_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Counter >&
P4Info::counters() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.counters)
  return counters_;
}

// repeated .p4.config.v1.DirectCounter direct_counters = 6;
int P4Info::direct_counters_size() const {
  return direct_counters_.size();
}
void P4Info::clear_direct_counters() {
  direct_counters_.Clear();
}
const ::p4::config::v1::DirectCounter& P4Info::direct_counters(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.direct_counters)
  return direct_counters_.Get(index);
}
::p4::config::v1::DirectCounter* P4Info::mutable_direct_counters(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.direct_counters)
  return direct_counters_.Mutable(index);
}
::p4::config::v1::DirectCounter* P4Info::add_direct_counters() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.direct_counters)
  return direct_counters_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::DirectCounter >*
P4Info::mutable_direct_counters() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.direct_counters)
  return &direct_counters_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::DirectCounter >&
P4Info::direct_counters() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.direct_counters)
  return direct_counters_;
}

// repeated .p4.config.v1.Meter meters = 7;
int P4Info::meters_size() const {
  return meters_.size();
}
void P4Info::clear_meters() {
  meters_.Clear();
}
const ::p4::config::v1::Meter& P4Info::meters(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.meters)
  return meters_.Get(index);
}
::p4::config::v1::Meter* P4Info::mutable_meters(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.meters)
  return meters_.Mutable(index);
}
::p4::config::v1::Meter* P4Info::add_meters() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.meters)
  return meters_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::Meter >*
P4Info::mutable_meters() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.meters)
  return &meters_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Meter >&
P4Info::meters() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.meters)
  return meters_;
}

// repeated .p4.config.v1.DirectMeter direct_meters = 8;
int P4Info::direct_meters_size() const {
  return direct_meters_.size();
}
void P4Info::clear_direct_meters() {
  direct_meters_.Clear();
}
const ::p4::config::v1::DirectMeter& P4Info::direct_meters(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.direct_meters)
  return direct_meters_.Get(index);
}
::p4::config::v1::DirectMeter* P4Info::mutable_direct_meters(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.direct_meters)
  return direct_meters_.Mutable(index);
}
::p4::config::v1::DirectMeter* P4Info::add_direct_meters() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.direct_meters)
  return direct_meters_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::DirectMeter >*
P4Info::mutable_direct_meters() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.direct_meters)
  return &direct_meters_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::DirectMeter >&
P4Info::direct_meters() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.direct_meters)
  return direct_meters_;
}

// repeated .p4.config.v1.ControllerPacketMetadata controller_packet_metadata = 9;
int P4Info::controller_packet_metadata_size() const {
  return controller_packet_metadata_.size();
}
void P4Info::clear_controller_packet_metadata() {
  controller_packet_metadata_.Clear();
}
const ::p4::config::v1::ControllerPacketMetadata& P4Info::controller_packet_metadata(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.controller_packet_metadata)
  return controller_packet_metadata_.Get(index);
}
::p4::config::v1::ControllerPacketMetadata* P4Info::mutable_controller_packet_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.controller_packet_metadata)
  return controller_packet_metadata_.Mutable(index);
}
::p4::config::v1::ControllerPacketMetadata* P4Info::add_controller_packet_metadata() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.controller_packet_metadata)
  return controller_packet_metadata_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::ControllerPacketMetadata >*
P4Info::mutable_controller_packet_metadata() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.controller_packet_metadata)
  return &controller_packet_metadata_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ControllerPacketMetadata >&
P4Info::controller_packet_metadata() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.controller_packet_metadata)
  return controller_packet_metadata_;
}

// repeated .p4.config.v1.ValueSet value_sets = 10;
int P4Info::value_sets_size() const {
  return value_sets_.size();
}
void P4Info::clear_value_sets() {
  value_sets_.Clear();
}
const ::p4::config::v1::ValueSet& P4Info::value_sets(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.value_sets)
  return value_sets_.Get(index);
}
::p4::config::v1::ValueSet* P4Info::mutable_value_sets(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.value_sets)
  return value_sets_.Mutable(index);
}
::p4::config::v1::ValueSet* P4Info::add_value_sets() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.value_sets)
  return value_sets_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::ValueSet >*
P4Info::mutable_value_sets() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.value_sets)
  return &value_sets_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ValueSet >&
P4Info::value_sets() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.value_sets)
  return value_sets_;
}

// repeated .p4.config.v1.Register registers = 11;
int P4Info::registers_size() const {
  return registers_.size();
}
void P4Info::clear_registers() {
  registers_.Clear();
}
const ::p4::config::v1::Register& P4Info::registers(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.registers)
  return registers_.Get(index);
}
::p4::config::v1::Register* P4Info::mutable_registers(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.registers)
  return registers_.Mutable(index);
}
::p4::config::v1::Register* P4Info::add_registers() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.registers)
  return registers_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::Register >*
P4Info::mutable_registers() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.registers)
  return &registers_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Register >&
P4Info::registers() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.registers)
  return registers_;
}

// repeated .p4.config.v1.Digest digests = 12;
int P4Info::digests_size() const {
  return digests_.size();
}
void P4Info::clear_digests() {
  digests_.Clear();
}
const ::p4::config::v1::Digest& P4Info::digests(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.digests)
  return digests_.Get(index);
}
::p4::config::v1::Digest* P4Info::mutable_digests(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.digests)
  return digests_.Mutable(index);
}
::p4::config::v1::Digest* P4Info::add_digests() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.digests)
  return digests_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::Digest >*
P4Info::mutable_digests() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.digests)
  return &digests_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Digest >&
P4Info::digests() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.digests)
  return digests_;
}

// repeated .p4.config.v1.Extern externs = 100;
int P4Info::externs_size() const {
  return externs_.size();
}
void P4Info::clear_externs() {
  externs_.Clear();
}
const ::p4::config::v1::Extern& P4Info::externs(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.externs)
  return externs_.Get(index);
}
::p4::config::v1::Extern* P4Info::mutable_externs(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.externs)
  return externs_.Mutable(index);
}
::p4::config::v1::Extern* P4Info::add_externs() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4Info.externs)
  return externs_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::Extern >*
P4Info::mutable_externs() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4Info.externs)
  return &externs_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Extern >&
P4Info::externs() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4Info.externs)
  return externs_;
}

// .p4.config.v1.P4TypeInfo type_info = 200;
bool P4Info::has_type_info() const {
  return this != internal_default_instance() && type_info_ != NULL;
}
void P4Info::clear_type_info() {
  if (GetArenaNoVirtual() == NULL && type_info_ != NULL) delete type_info_;
  type_info_ = NULL;
}
const ::p4::config::v1::P4TypeInfo& P4Info::type_info() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4Info.type_info)
  return type_info_ != NULL ? *type_info_
                         : *::p4::config::v1::P4TypeInfo::internal_default_instance();
}
::p4::config::v1::P4TypeInfo* P4Info::mutable_type_info() {
  
  if (type_info_ == NULL) {
    type_info_ = new ::p4::config::v1::P4TypeInfo;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4Info.type_info)
  return type_info_;
}
::p4::config::v1::P4TypeInfo* P4Info::release_type_info() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4Info.type_info)
  
  ::p4::config::v1::P4TypeInfo* temp = type_info_;
  type_info_ = NULL;
  return temp;
}
void P4Info::set_allocated_type_info(::p4::config::v1::P4TypeInfo* type_info) {
  delete type_info_;
  type_info_ = type_info;
  if (type_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4Info.type_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Documentation::kBriefFieldNumber;
const int Documentation::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Documentation::Documentation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.Documentation)
}
Documentation::Documentation(const Documentation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  brief_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.brief().size() > 0) {
    brief_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brief_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.Documentation)
}

void Documentation::SharedCtor() {
  brief_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Documentation::~Documentation() {
  // @@protoc_insertion_point(destructor:p4.config.v1.Documentation)
  SharedDtor();
}

void Documentation::SharedDtor() {
  brief_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Documentation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Documentation::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[1].descriptor;
}

const Documentation& Documentation::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

Documentation* Documentation::New(::google::protobuf::Arena* arena) const {
  Documentation* n = new Documentation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Documentation::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.Documentation)
  brief_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Documentation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.Documentation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string brief = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brief()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brief().data(), this->brief().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.Documentation.brief"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.Documentation.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.Documentation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.Documentation)
  return false;
#undef DO_
}

void Documentation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.Documentation)
  // string brief = 1;
  if (this->brief().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brief().data(), this->brief().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Documentation.brief");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->brief(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Documentation.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.Documentation)
}

::google::protobuf::uint8* Documentation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.Documentation)
  // string brief = 1;
  if (this->brief().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brief().data(), this->brief().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Documentation.brief");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->brief(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Documentation.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.Documentation)
  return target;
}

size_t Documentation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.Documentation)
  size_t total_size = 0;

  // string brief = 1;
  if (this->brief().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brief());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Documentation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.Documentation)
  GOOGLE_DCHECK_NE(&from, this);
  const Documentation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Documentation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.Documentation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.Documentation)
    MergeFrom(*source);
  }
}

void Documentation::MergeFrom(const Documentation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.Documentation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.brief().size() > 0) {

    brief_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brief_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void Documentation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.Documentation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Documentation::CopyFrom(const Documentation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.Documentation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Documentation::IsInitialized() const {
  return true;
}

void Documentation::Swap(Documentation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Documentation::InternalSwap(Documentation* other) {
  brief_.Swap(&other->brief_);
  description_.Swap(&other->description_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Documentation::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Documentation

// string brief = 1;
void Documentation::clear_brief() {
  brief_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Documentation::brief() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Documentation.brief)
  return brief_.GetNoArena();
}
void Documentation::set_brief(const ::std::string& value) {
  
  brief_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.Documentation.brief)
}
#if LANG_CXX11
void Documentation::set_brief(::std::string&& value) {
  
  brief_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.Documentation.brief)
}
#endif
void Documentation::set_brief(const char* value) {
  
  brief_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Documentation.brief)
}
void Documentation::set_brief(const char* value, size_t size) {
  
  brief_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Documentation.brief)
}
::std::string* Documentation::mutable_brief() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Documentation.brief)
  return brief_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Documentation::release_brief() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Documentation.brief)
  
  return brief_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Documentation::set_allocated_brief(::std::string* brief) {
  if (brief != NULL) {
    
  } else {
    
  }
  brief_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), brief);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Documentation.brief)
}

// string description = 2;
void Documentation::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Documentation::description() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Documentation.description)
  return description_.GetNoArena();
}
void Documentation::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.Documentation.description)
}
#if LANG_CXX11
void Documentation::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.Documentation.description)
}
#endif
void Documentation::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Documentation.description)
}
void Documentation::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Documentation.description)
}
::std::string* Documentation::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Documentation.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Documentation::release_description() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Documentation.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Documentation::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Documentation.description)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PkgInfo::kNameFieldNumber;
const int PkgInfo::kVersionFieldNumber;
const int PkgInfo::kDocFieldNumber;
const int PkgInfo::kAnnotationsFieldNumber;
const int PkgInfo::kArchFieldNumber;
const int PkgInfo::kOrganizationFieldNumber;
const int PkgInfo::kContactFieldNumber;
const int PkgInfo::kUrlFieldNumber;
const int PkgInfo::kStructuredAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PkgInfo::PkgInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.PkgInfo)
}
PkgInfo::PkgInfo(const PkgInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      annotations_(from.annotations_),
      structured_annotations_(from.structured_annotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  arch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.arch().size() > 0) {
    arch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arch_);
  }
  organization_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.organization().size() > 0) {
    organization_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.organization_);
  }
  contact_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contact().size() > 0) {
    contact_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.has_doc()) {
    doc_ = new ::p4::config::v1::Documentation(*from.doc_);
  } else {
    doc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.PkgInfo)
}

void PkgInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arch_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_ = NULL;
  _cached_size_ = 0;
}

PkgInfo::~PkgInfo() {
  // @@protoc_insertion_point(destructor:p4.config.v1.PkgInfo)
  SharedDtor();
}

void PkgInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arch_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete doc_;
  }
}

void PkgInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgInfo::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[2].descriptor;
}

const PkgInfo& PkgInfo::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

PkgInfo* PkgInfo::New(::google::protobuf::Arena* arena) const {
  PkgInfo* n = new PkgInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.PkgInfo)
  annotations_.Clear();
  structured_annotations_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contact_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && doc_ != NULL) {
    delete doc_;
  }
  doc_ = NULL;
}

bool PkgInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.PkgInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.PkgInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.PkgInfo.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.Documentation doc = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_doc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string annotations = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_annotations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotations(this->annotations_size() - 1).data(),
            this->annotations(this->annotations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.PkgInfo.annotations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string arch = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_arch()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->arch().data(), this->arch().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.PkgInfo.arch"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string organization = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_organization()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->organization().data(), this->organization().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.PkgInfo.organization"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contact = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contact()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contact().data(), this->contact().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.PkgInfo.contact"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.PkgInfo.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 9;
      case 9: {
        if (tag == 74u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_structured_annotations()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.PkgInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.PkgInfo)
  return false;
#undef DO_
}

void PkgInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.PkgInfo)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.PkgInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.PkgInfo.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // .p4.config.v1.Documentation doc = 3;
  if (this->has_doc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->doc_, output);
  }

  // repeated string annotations = 4;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.PkgInfo.annotations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->annotations(i), output);
  }

  // string arch = 5;
  if (this->arch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->arch().data(), this->arch().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.PkgInfo.arch");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->arch(), output);
  }

  // string organization = 6;
  if (this->organization().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->organization().data(), this->organization().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.PkgInfo.organization");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->organization(), output);
  }

  // string contact = 7;
  if (this->contact().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contact().data(), this->contact().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.PkgInfo.contact");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->contact(), output);
  }

  // string url = 8;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.PkgInfo.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->url(), output);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 9;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->structured_annotations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.PkgInfo)
}

::google::protobuf::uint8* PkgInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.PkgInfo)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.PkgInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.PkgInfo.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // .p4.config.v1.Documentation doc = 3;
  if (this->has_doc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->doc_, false, target);
  }

  // repeated string annotations = 4;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.PkgInfo.annotations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->annotations(i), target);
  }

  // string arch = 5;
  if (this->arch().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->arch().data(), this->arch().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.PkgInfo.arch");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->arch(), target);
  }

  // string organization = 6;
  if (this->organization().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->organization().data(), this->organization().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.PkgInfo.organization");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->organization(), target);
  }

  // string contact = 7;
  if (this->contact().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contact().data(), this->contact().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.PkgInfo.contact");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->contact(), target);
  }

  // string url = 8;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.PkgInfo.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->url(), target);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 9;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->structured_annotations(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.PkgInfo)
  return target;
}

size_t PkgInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.PkgInfo)
  size_t total_size = 0;

  // repeated string annotations = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  for (int i = 0; i < this->annotations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->annotations(i));
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 9;
  {
    unsigned int count = this->structured_annotations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->structured_annotations(i));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string arch = 5;
  if (this->arch().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->arch());
  }

  // string organization = 6;
  if (this->organization().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->organization());
  }

  // string contact = 7;
  if (this->contact().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contact());
  }

  // string url = 8;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // .p4.config.v1.Documentation doc = 3;
  if (this->has_doc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->doc_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.PkgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PkgInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PkgInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.PkgInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.PkgInfo)
    MergeFrom(*source);
  }
}

void PkgInfo::MergeFrom(const PkgInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.PkgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotations_.MergeFrom(from.annotations_);
  structured_annotations_.MergeFrom(from.structured_annotations_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.arch().size() > 0) {

    arch_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arch_);
  }
  if (from.organization().size() > 0) {

    organization_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.organization_);
  }
  if (from.contact().size() > 0) {

    contact_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contact_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.has_doc()) {
    mutable_doc()->::p4::config::v1::Documentation::MergeFrom(from.doc());
  }
}

void PkgInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.PkgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgInfo::CopyFrom(const PkgInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.PkgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgInfo::IsInitialized() const {
  return true;
}

void PkgInfo::Swap(PkgInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgInfo::InternalSwap(PkgInfo* other) {
  annotations_.UnsafeArenaSwap(&other->annotations_);
  structured_annotations_.UnsafeArenaSwap(&other->structured_annotations_);
  name_.Swap(&other->name_);
  version_.Swap(&other->version_);
  arch_.Swap(&other->arch_);
  organization_.Swap(&other->organization_);
  contact_.Swap(&other->contact_);
  url_.Swap(&other->url_);
  std::swap(doc_, other->doc_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgInfo::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PkgInfo

// string name = 1;
void PkgInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PkgInfo::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.name)
  return name_.GetNoArena();
}
void PkgInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.PkgInfo.name)
}
#if LANG_CXX11
void PkgInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.PkgInfo.name)
}
#endif
void PkgInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.PkgInfo.name)
}
void PkgInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.PkgInfo.name)
}
::std::string* PkgInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PkgInfo::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.PkgInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PkgInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.PkgInfo.name)
}

// string version = 2;
void PkgInfo::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PkgInfo::version() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.version)
  return version_.GetNoArena();
}
void PkgInfo::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.PkgInfo.version)
}
#if LANG_CXX11
void PkgInfo::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.PkgInfo.version)
}
#endif
void PkgInfo::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.PkgInfo.version)
}
void PkgInfo::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.PkgInfo.version)
}
::std::string* PkgInfo::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PkgInfo::release_version() {
  // @@protoc_insertion_point(field_release:p4.config.v1.PkgInfo.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PkgInfo::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.PkgInfo.version)
}

// .p4.config.v1.Documentation doc = 3;
bool PkgInfo::has_doc() const {
  return this != internal_default_instance() && doc_ != NULL;
}
void PkgInfo::clear_doc() {
  if (GetArenaNoVirtual() == NULL && doc_ != NULL) delete doc_;
  doc_ = NULL;
}
const ::p4::config::v1::Documentation& PkgInfo::doc() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.doc)
  return doc_ != NULL ? *doc_
                         : *::p4::config::v1::Documentation::internal_default_instance();
}
::p4::config::v1::Documentation* PkgInfo::mutable_doc() {
  
  if (doc_ == NULL) {
    doc_ = new ::p4::config::v1::Documentation;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.doc)
  return doc_;
}
::p4::config::v1::Documentation* PkgInfo::release_doc() {
  // @@protoc_insertion_point(field_release:p4.config.v1.PkgInfo.doc)
  
  ::p4::config::v1::Documentation* temp = doc_;
  doc_ = NULL;
  return temp;
}
void PkgInfo::set_allocated_doc(::p4::config::v1::Documentation* doc) {
  delete doc_;
  doc_ = doc;
  if (doc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.PkgInfo.doc)
}

// repeated string annotations = 4;
int PkgInfo::annotations_size() const {
  return annotations_.size();
}
void PkgInfo::clear_annotations() {
  annotations_.Clear();
}
const ::std::string& PkgInfo::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.annotations)
  return annotations_.Get(index);
}
::std::string* PkgInfo::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.annotations)
  return annotations_.Mutable(index);
}
void PkgInfo::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.PkgInfo.annotations)
  annotations_.Mutable(index)->assign(value);
}
void PkgInfo::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.PkgInfo.annotations)
}
void PkgInfo::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.PkgInfo.annotations)
}
::std::string* PkgInfo::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.PkgInfo.annotations)
  return annotations_.Add();
}
void PkgInfo::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.PkgInfo.annotations)
}
void PkgInfo::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.PkgInfo.annotations)
}
void PkgInfo::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.PkgInfo.annotations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
PkgInfo::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.PkgInfo.annotations)
  return annotations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
PkgInfo::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.PkgInfo.annotations)
  return &annotations_;
}

// string arch = 5;
void PkgInfo::clear_arch() {
  arch_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PkgInfo::arch() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.arch)
  return arch_.GetNoArena();
}
void PkgInfo::set_arch(const ::std::string& value) {
  
  arch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.PkgInfo.arch)
}
#if LANG_CXX11
void PkgInfo::set_arch(::std::string&& value) {
  
  arch_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.PkgInfo.arch)
}
#endif
void PkgInfo::set_arch(const char* value) {
  
  arch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.PkgInfo.arch)
}
void PkgInfo::set_arch(const char* value, size_t size) {
  
  arch_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.PkgInfo.arch)
}
::std::string* PkgInfo::mutable_arch() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.arch)
  return arch_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PkgInfo::release_arch() {
  // @@protoc_insertion_point(field_release:p4.config.v1.PkgInfo.arch)
  
  return arch_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PkgInfo::set_allocated_arch(::std::string* arch) {
  if (arch != NULL) {
    
  } else {
    
  }
  arch_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arch);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.PkgInfo.arch)
}

// string organization = 6;
void PkgInfo::clear_organization() {
  organization_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PkgInfo::organization() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.organization)
  return organization_.GetNoArena();
}
void PkgInfo::set_organization(const ::std::string& value) {
  
  organization_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.PkgInfo.organization)
}
#if LANG_CXX11
void PkgInfo::set_organization(::std::string&& value) {
  
  organization_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.PkgInfo.organization)
}
#endif
void PkgInfo::set_organization(const char* value) {
  
  organization_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.PkgInfo.organization)
}
void PkgInfo::set_organization(const char* value, size_t size) {
  
  organization_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.PkgInfo.organization)
}
::std::string* PkgInfo::mutable_organization() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.organization)
  return organization_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PkgInfo::release_organization() {
  // @@protoc_insertion_point(field_release:p4.config.v1.PkgInfo.organization)
  
  return organization_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PkgInfo::set_allocated_organization(::std::string* organization) {
  if (organization != NULL) {
    
  } else {
    
  }
  organization_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), organization);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.PkgInfo.organization)
}

// string contact = 7;
void PkgInfo::clear_contact() {
  contact_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PkgInfo::contact() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.contact)
  return contact_.GetNoArena();
}
void PkgInfo::set_contact(const ::std::string& value) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.PkgInfo.contact)
}
#if LANG_CXX11
void PkgInfo::set_contact(::std::string&& value) {
  
  contact_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.PkgInfo.contact)
}
#endif
void PkgInfo::set_contact(const char* value) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.PkgInfo.contact)
}
void PkgInfo::set_contact(const char* value, size_t size) {
  
  contact_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.PkgInfo.contact)
}
::std::string* PkgInfo::mutable_contact() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.contact)
  return contact_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PkgInfo::release_contact() {
  // @@protoc_insertion_point(field_release:p4.config.v1.PkgInfo.contact)
  
  return contact_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PkgInfo::set_allocated_contact(::std::string* contact) {
  if (contact != NULL) {
    
  } else {
    
  }
  contact_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contact);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.PkgInfo.contact)
}

// string url = 8;
void PkgInfo::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PkgInfo::url() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.url)
  return url_.GetNoArena();
}
void PkgInfo::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.PkgInfo.url)
}
#if LANG_CXX11
void PkgInfo::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.PkgInfo.url)
}
#endif
void PkgInfo::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.PkgInfo.url)
}
void PkgInfo::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.PkgInfo.url)
}
::std::string* PkgInfo::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PkgInfo::release_url() {
  // @@protoc_insertion_point(field_release:p4.config.v1.PkgInfo.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PkgInfo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.PkgInfo.url)
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 9;
int PkgInfo::structured_annotations_size() const {
  return structured_annotations_.size();
}
void PkgInfo::clear_structured_annotations() {
  structured_annotations_.Clear();
}
const ::p4::config::v1::StructuredAnnotation& PkgInfo::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.PkgInfo.structured_annotations)
  return structured_annotations_.Get(index);
}
::p4::config::v1::StructuredAnnotation* PkgInfo::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.PkgInfo.structured_annotations)
  return structured_annotations_.Mutable(index);
}
::p4::config::v1::StructuredAnnotation* PkgInfo::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.PkgInfo.structured_annotations)
  return structured_annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
PkgInfo::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.PkgInfo.structured_annotations)
  return &structured_annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
PkgInfo::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.PkgInfo.structured_annotations)
  return structured_annotations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4Ids::P4Ids()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4Ids)
}
P4Ids::P4Ids(const P4Ids& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4Ids)
}

void P4Ids::SharedCtor() {
  _cached_size_ = 0;
}

P4Ids::~P4Ids() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4Ids)
  SharedDtor();
}

void P4Ids::SharedDtor() {
}

void P4Ids::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4Ids::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[3].descriptor;
}

const P4Ids& P4Ids::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4Ids* P4Ids::New(::google::protobuf::Arena* arena) const {
  P4Ids* n = new P4Ids;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4Ids::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4Ids)
}

bool P4Ids::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4Ids)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4Ids)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4Ids)
  return false;
#undef DO_
}

void P4Ids::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4Ids)
  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4Ids)
}

::google::protobuf::uint8* P4Ids::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4Ids)
  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4Ids)
  return target;
}

size_t P4Ids::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4Ids)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4Ids::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4Ids)
  GOOGLE_DCHECK_NE(&from, this);
  const P4Ids* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4Ids>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4Ids)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4Ids)
    MergeFrom(*source);
  }
}

void P4Ids::MergeFrom(const P4Ids& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4Ids)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void P4Ids::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4Ids)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4Ids::CopyFrom(const P4Ids& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4Ids)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4Ids::IsInitialized() const {
  return true;
}

void P4Ids::Swap(P4Ids* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4Ids::InternalSwap(P4Ids* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4Ids::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4Ids

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Preamble::kIdFieldNumber;
const int Preamble::kNameFieldNumber;
const int Preamble::kAliasFieldNumber;
const int Preamble::kAnnotationsFieldNumber;
const int Preamble::kDocFieldNumber;
const int Preamble::kStructuredAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Preamble::Preamble()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.Preamble)
}
Preamble::Preamble(const Preamble& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      annotations_(from.annotations_),
      structured_annotations_(from.structured_annotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alias().size() > 0) {
    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.has_doc()) {
    doc_ = new ::p4::config::v1::Documentation(*from.doc_);
  } else {
    doc_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.Preamble)
}

void Preamble::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&doc_, 0, reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&doc_) + sizeof(id_));
  _cached_size_ = 0;
}

Preamble::~Preamble() {
  // @@protoc_insertion_point(destructor:p4.config.v1.Preamble)
  SharedDtor();
}

void Preamble::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete doc_;
  }
}

void Preamble::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Preamble::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[4].descriptor;
}

const Preamble& Preamble::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

Preamble* Preamble::New(::google::protobuf::Arena* arena) const {
  Preamble* n = new Preamble;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Preamble::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.Preamble)
  annotations_.Clear();
  structured_annotations_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && doc_ != NULL) {
    delete doc_;
  }
  doc_ = NULL;
  id_ = 0u;
}

bool Preamble::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.Preamble)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.Preamble.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string alias = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alias().data(), this->alias().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.Preamble.alias"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string annotations = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_annotations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotations(this->annotations_size() - 1).data(),
            this->annotations(this->annotations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.Preamble.annotations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.Documentation doc = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_doc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 6;
      case 6: {
        if (tag == 50u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_structured_annotations()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.Preamble)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.Preamble)
  return false;
#undef DO_
}

void Preamble::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.Preamble)
  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Preamble.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string alias = 3;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), this->alias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Preamble.alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->alias(), output);
  }

  // repeated string annotations = 4;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Preamble.annotations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->annotations(i), output);
  }

  // .p4.config.v1.Documentation doc = 5;
  if (this->has_doc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->doc_, output);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 6;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->structured_annotations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.Preamble)
}

::google::protobuf::uint8* Preamble::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.Preamble)
  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Preamble.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string alias = 3;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), this->alias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Preamble.alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->alias(), target);
  }

  // repeated string annotations = 4;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Preamble.annotations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->annotations(i), target);
  }

  // .p4.config.v1.Documentation doc = 5;
  if (this->has_doc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->doc_, false, target);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 6;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->structured_annotations(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.Preamble)
  return target;
}

size_t Preamble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.Preamble)
  size_t total_size = 0;

  // repeated string annotations = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  for (int i = 0; i < this->annotations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->annotations(i));
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 6;
  {
    unsigned int count = this->structured_annotations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->structured_annotations(i));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string alias = 3;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alias());
  }

  // .p4.config.v1.Documentation doc = 5;
  if (this->has_doc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->doc_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Preamble::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.Preamble)
  GOOGLE_DCHECK_NE(&from, this);
  const Preamble* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Preamble>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.Preamble)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.Preamble)
    MergeFrom(*source);
  }
}

void Preamble::MergeFrom(const Preamble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.Preamble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotations_.MergeFrom(from.annotations_);
  structured_annotations_.MergeFrom(from.structured_annotations_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.alias().size() > 0) {

    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.has_doc()) {
    mutable_doc()->::p4::config::v1::Documentation::MergeFrom(from.doc());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Preamble::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.Preamble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Preamble::CopyFrom(const Preamble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.Preamble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Preamble::IsInitialized() const {
  return true;
}

void Preamble::Swap(Preamble* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Preamble::InternalSwap(Preamble* other) {
  annotations_.UnsafeArenaSwap(&other->annotations_);
  structured_annotations_.UnsafeArenaSwap(&other->structured_annotations_);
  name_.Swap(&other->name_);
  alias_.Swap(&other->alias_);
  std::swap(doc_, other->doc_);
  std::swap(id_, other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Preamble::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Preamble

// uint32 id = 1;
void Preamble::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 Preamble::id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Preamble.id)
  return id_;
}
void Preamble::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Preamble.id)
}

// string name = 2;
void Preamble::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Preamble::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Preamble.name)
  return name_.GetNoArena();
}
void Preamble::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.Preamble.name)
}
#if LANG_CXX11
void Preamble::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.Preamble.name)
}
#endif
void Preamble::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Preamble.name)
}
void Preamble::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Preamble.name)
}
::std::string* Preamble::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Preamble.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Preamble::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Preamble.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Preamble::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Preamble.name)
}

// string alias = 3;
void Preamble::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Preamble::alias() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Preamble.alias)
  return alias_.GetNoArena();
}
void Preamble::set_alias(const ::std::string& value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.Preamble.alias)
}
#if LANG_CXX11
void Preamble::set_alias(::std::string&& value) {
  
  alias_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.Preamble.alias)
}
#endif
void Preamble::set_alias(const char* value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Preamble.alias)
}
void Preamble::set_alias(const char* value, size_t size) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Preamble.alias)
}
::std::string* Preamble::mutable_alias() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Preamble.alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Preamble::release_alias() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Preamble.alias)
  
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Preamble::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    
  } else {
    
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Preamble.alias)
}

// repeated string annotations = 4;
int Preamble::annotations_size() const {
  return annotations_.size();
}
void Preamble::clear_annotations() {
  annotations_.Clear();
}
const ::std::string& Preamble::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Preamble.annotations)
  return annotations_.Get(index);
}
::std::string* Preamble::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Preamble.annotations)
  return annotations_.Mutable(index);
}
void Preamble::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.Preamble.annotations)
  annotations_.Mutable(index)->assign(value);
}
void Preamble::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Preamble.annotations)
}
void Preamble::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Preamble.annotations)
}
::std::string* Preamble::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.Preamble.annotations)
  return annotations_.Add();
}
void Preamble::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.Preamble.annotations)
}
void Preamble::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.Preamble.annotations)
}
void Preamble::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.Preamble.annotations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Preamble::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Preamble.annotations)
  return annotations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Preamble::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Preamble.annotations)
  return &annotations_;
}

// .p4.config.v1.Documentation doc = 5;
bool Preamble::has_doc() const {
  return this != internal_default_instance() && doc_ != NULL;
}
void Preamble::clear_doc() {
  if (GetArenaNoVirtual() == NULL && doc_ != NULL) delete doc_;
  doc_ = NULL;
}
const ::p4::config::v1::Documentation& Preamble::doc() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Preamble.doc)
  return doc_ != NULL ? *doc_
                         : *::p4::config::v1::Documentation::internal_default_instance();
}
::p4::config::v1::Documentation* Preamble::mutable_doc() {
  
  if (doc_ == NULL) {
    doc_ = new ::p4::config::v1::Documentation;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Preamble.doc)
  return doc_;
}
::p4::config::v1::Documentation* Preamble::release_doc() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Preamble.doc)
  
  ::p4::config::v1::Documentation* temp = doc_;
  doc_ = NULL;
  return temp;
}
void Preamble::set_allocated_doc(::p4::config::v1::Documentation* doc) {
  delete doc_;
  doc_ = doc;
  if (doc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Preamble.doc)
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 6;
int Preamble::structured_annotations_size() const {
  return structured_annotations_.size();
}
void Preamble::clear_structured_annotations() {
  structured_annotations_.Clear();
}
const ::p4::config::v1::StructuredAnnotation& Preamble::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Preamble.structured_annotations)
  return structured_annotations_.Get(index);
}
::p4::config::v1::StructuredAnnotation* Preamble::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Preamble.structured_annotations)
  return structured_annotations_.Mutable(index);
}
::p4::config::v1::StructuredAnnotation* Preamble::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.Preamble.structured_annotations)
  return structured_annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
Preamble::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Preamble.structured_annotations)
  return &structured_annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
Preamble::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Preamble.structured_annotations)
  return structured_annotations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Extern::kExternTypeIdFieldNumber;
const int Extern::kExternTypeNameFieldNumber;
const int Extern::kInstancesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Extern::Extern()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.Extern)
}
Extern::Extern(const Extern& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      instances_(from.instances_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  extern_type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extern_type_name().size() > 0) {
    extern_type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extern_type_name_);
  }
  extern_type_id_ = from.extern_type_id_;
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.Extern)
}

void Extern::SharedCtor() {
  extern_type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extern_type_id_ = 0u;
  _cached_size_ = 0;
}

Extern::~Extern() {
  // @@protoc_insertion_point(destructor:p4.config.v1.Extern)
  SharedDtor();
}

void Extern::SharedDtor() {
  extern_type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Extern::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Extern::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[5].descriptor;
}

const Extern& Extern::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

Extern* Extern::New(::google::protobuf::Arena* arena) const {
  Extern* n = new Extern;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Extern::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.Extern)
  instances_.Clear();
  extern_type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extern_type_id_ = 0u;
}

bool Extern::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.Extern)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 extern_type_id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &extern_type_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extern_type_name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extern_type_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extern_type_name().data(), this->extern_type_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.Extern.extern_type_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.ExternInstance instances = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_instances()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.Extern)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.Extern)
  return false;
#undef DO_
}

void Extern::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.Extern)
  // uint32 extern_type_id = 1;
  if (this->extern_type_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->extern_type_id(), output);
  }

  // string extern_type_name = 2;
  if (this->extern_type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extern_type_name().data(), this->extern_type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Extern.extern_type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->extern_type_name(), output);
  }

  // repeated .p4.config.v1.ExternInstance instances = 3;
  for (unsigned int i = 0, n = this->instances_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->instances(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.Extern)
}

::google::protobuf::uint8* Extern::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.Extern)
  // uint32 extern_type_id = 1;
  if (this->extern_type_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->extern_type_id(), target);
  }

  // string extern_type_name = 2;
  if (this->extern_type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extern_type_name().data(), this->extern_type_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Extern.extern_type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->extern_type_name(), target);
  }

  // repeated .p4.config.v1.ExternInstance instances = 3;
  for (unsigned int i = 0, n = this->instances_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->instances(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.Extern)
  return target;
}

size_t Extern::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.Extern)
  size_t total_size = 0;

  // repeated .p4.config.v1.ExternInstance instances = 3;
  {
    unsigned int count = this->instances_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->instances(i));
    }
  }

  // string extern_type_name = 2;
  if (this->extern_type_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extern_type_name());
  }

  // uint32 extern_type_id = 1;
  if (this->extern_type_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->extern_type_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Extern::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.Extern)
  GOOGLE_DCHECK_NE(&from, this);
  const Extern* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Extern>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.Extern)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.Extern)
    MergeFrom(*source);
  }
}

void Extern::MergeFrom(const Extern& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.Extern)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instances_.MergeFrom(from.instances_);
  if (from.extern_type_name().size() > 0) {

    extern_type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extern_type_name_);
  }
  if (from.extern_type_id() != 0) {
    set_extern_type_id(from.extern_type_id());
  }
}

void Extern::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.Extern)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Extern::CopyFrom(const Extern& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.Extern)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Extern::IsInitialized() const {
  return true;
}

void Extern::Swap(Extern* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Extern::InternalSwap(Extern* other) {
  instances_.UnsafeArenaSwap(&other->instances_);
  extern_type_name_.Swap(&other->extern_type_name_);
  std::swap(extern_type_id_, other->extern_type_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Extern::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Extern

// uint32 extern_type_id = 1;
void Extern::clear_extern_type_id() {
  extern_type_id_ = 0u;
}
::google::protobuf::uint32 Extern::extern_type_id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Extern.extern_type_id)
  return extern_type_id_;
}
void Extern::set_extern_type_id(::google::protobuf::uint32 value) {
  
  extern_type_id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Extern.extern_type_id)
}

// string extern_type_name = 2;
void Extern::clear_extern_type_name() {
  extern_type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Extern::extern_type_name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Extern.extern_type_name)
  return extern_type_name_.GetNoArena();
}
void Extern::set_extern_type_name(const ::std::string& value) {
  
  extern_type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.Extern.extern_type_name)
}
#if LANG_CXX11
void Extern::set_extern_type_name(::std::string&& value) {
  
  extern_type_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.Extern.extern_type_name)
}
#endif
void Extern::set_extern_type_name(const char* value) {
  
  extern_type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Extern.extern_type_name)
}
void Extern::set_extern_type_name(const char* value, size_t size) {
  
  extern_type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Extern.extern_type_name)
}
::std::string* Extern::mutable_extern_type_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Extern.extern_type_name)
  return extern_type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Extern::release_extern_type_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Extern.extern_type_name)
  
  return extern_type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Extern::set_allocated_extern_type_name(::std::string* extern_type_name) {
  if (extern_type_name != NULL) {
    
  } else {
    
  }
  extern_type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extern_type_name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Extern.extern_type_name)
}

// repeated .p4.config.v1.ExternInstance instances = 3;
int Extern::instances_size() const {
  return instances_.size();
}
void Extern::clear_instances() {
  instances_.Clear();
}
const ::p4::config::v1::ExternInstance& Extern::instances(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Extern.instances)
  return instances_.Get(index);
}
::p4::config::v1::ExternInstance* Extern::mutable_instances(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Extern.instances)
  return instances_.Mutable(index);
}
::p4::config::v1::ExternInstance* Extern::add_instances() {
  // @@protoc_insertion_point(field_add:p4.config.v1.Extern.instances)
  return instances_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::ExternInstance >*
Extern::mutable_instances() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Extern.instances)
  return &instances_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ExternInstance >&
Extern::instances() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Extern.instances)
  return instances_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExternInstance::kPreambleFieldNumber;
const int ExternInstance::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExternInstance::ExternInstance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.ExternInstance)
}
ExternInstance::ExternInstance(const ExternInstance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    preamble_ = new ::p4::config::v1::Preamble(*from.preamble_);
  } else {
    preamble_ = NULL;
  }
  if (from.has_info()) {
    info_ = new ::google::protobuf::Any(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.ExternInstance)
}

void ExternInstance::SharedCtor() {
  ::memset(&preamble_, 0, reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&preamble_) + sizeof(info_));
  _cached_size_ = 0;
}

ExternInstance::~ExternInstance() {
  // @@protoc_insertion_point(destructor:p4.config.v1.ExternInstance)
  SharedDtor();
}

void ExternInstance::SharedDtor() {
  if (this != internal_default_instance()) {
    delete preamble_;
  }
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void ExternInstance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExternInstance::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[6].descriptor;
}

const ExternInstance& ExternInstance::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExternInstance* ExternInstance::New(::google::protobuf::Arena* arena) const {
  ExternInstance* n = new ExternInstance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExternInstance::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.ExternInstance)
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) {
    delete preamble_;
  }
  preamble_ = NULL;
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}

bool ExternInstance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.ExternInstance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.Preamble preamble = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_preamble()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any info = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.ExternInstance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.ExternInstance)
  return false;
#undef DO_
}

void ExternInstance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.ExternInstance)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->preamble_, output);
  }

  // .google.protobuf.Any info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->info_, output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.ExternInstance)
}

::google::protobuf::uint8* ExternInstance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.ExternInstance)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->preamble_, false, target);
  }

  // .google.protobuf.Any info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.ExternInstance)
  return target;
}

size_t ExternInstance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.ExternInstance)
  size_t total_size = 0;

  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->preamble_);
  }

  // .google.protobuf.Any info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExternInstance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.ExternInstance)
  GOOGLE_DCHECK_NE(&from, this);
  const ExternInstance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExternInstance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.ExternInstance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.ExternInstance)
    MergeFrom(*source);
  }
}

void ExternInstance::MergeFrom(const ExternInstance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.ExternInstance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    mutable_preamble()->::p4::config::v1::Preamble::MergeFrom(from.preamble());
  }
  if (from.has_info()) {
    mutable_info()->::google::protobuf::Any::MergeFrom(from.info());
  }
}

void ExternInstance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.ExternInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternInstance::CopyFrom(const ExternInstance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.ExternInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternInstance::IsInitialized() const {
  return true;
}

void ExternInstance::Swap(ExternInstance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExternInstance::InternalSwap(ExternInstance* other) {
  std::swap(preamble_, other->preamble_);
  std::swap(info_, other->info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExternInstance::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExternInstance

// .p4.config.v1.Preamble preamble = 1;
bool ExternInstance::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
void ExternInstance::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
const ::p4::config::v1::Preamble& ExternInstance::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ExternInstance.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
::p4::config::v1::Preamble* ExternInstance::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ExternInstance.preamble)
  return preamble_;
}
::p4::config::v1::Preamble* ExternInstance::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.ExternInstance.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
void ExternInstance::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.ExternInstance.preamble)
}

// .google.protobuf.Any info = 2;
bool ExternInstance::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void ExternInstance::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::google::protobuf::Any& ExternInstance::info() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ExternInstance.info)
  return info_ != NULL ? *info_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* ExternInstance::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ExternInstance.info)
  return info_;
}
::google::protobuf::Any* ExternInstance::release_info() {
  // @@protoc_insertion_point(field_release:p4.config.v1.ExternInstance.info)
  
  ::google::protobuf::Any* temp = info_;
  info_ = NULL;
  return temp;
}
void ExternInstance::set_allocated_info(::google::protobuf::Any* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.ExternInstance.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchField::kIdFieldNumber;
const int MatchField::kNameFieldNumber;
const int MatchField::kAnnotationsFieldNumber;
const int MatchField::kBitwidthFieldNumber;
const int MatchField::kMatchTypeFieldNumber;
const int MatchField::kOtherMatchTypeFieldNumber;
const int MatchField::kDocFieldNumber;
const int MatchField::kTypeNameFieldNumber;
const int MatchField::kStructuredAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchField::MatchField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.MatchField)
}
MatchField::MatchField(const MatchField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      annotations_(from.annotations_),
      structured_annotations_(from.structured_annotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_doc()) {
    doc_ = new ::p4::config::v1::Documentation(*from.doc_);
  } else {
    doc_ = NULL;
  }
  if (from.has_type_name()) {
    type_name_ = new ::p4::config::v1::P4NamedType(*from.type_name_);
  } else {
    type_name_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&bitwidth_) -
    reinterpret_cast<char*>(&id_) + sizeof(bitwidth_));
  clear_has_match();
  switch (from.match_case()) {
    case kMatchType: {
      set_match_type(from.match_type());
      break;
    }
    case kOtherMatchType: {
      set_other_match_type(from.other_match_type());
      break;
    }
    case MATCH_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.MatchField)
}

void MatchField::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&doc_, 0, reinterpret_cast<char*>(&bitwidth_) -
    reinterpret_cast<char*>(&doc_) + sizeof(bitwidth_));
  clear_has_match();
  _cached_size_ = 0;
}

MatchField::~MatchField() {
  // @@protoc_insertion_point(destructor:p4.config.v1.MatchField)
  SharedDtor();
}

void MatchField::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete doc_;
  }
  if (this != internal_default_instance()) {
    delete type_name_;
  }
  if (has_match()) {
    clear_match();
  }
}

void MatchField::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchField::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[7].descriptor;
}

const MatchField& MatchField::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchField* MatchField::New(::google::protobuf::Arena* arena) const {
  MatchField* n = new MatchField;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchField::clear_match() {
// @@protoc_insertion_point(one_of_clear_start:p4.config.v1.MatchField)
  switch (match_case()) {
    case kMatchType: {
      // No need to clear
      break;
    }
    case kOtherMatchType: {
      match_.other_match_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case MATCH_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MATCH_NOT_SET;
}


void MatchField::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.MatchField)
  annotations_.Clear();
  structured_annotations_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && doc_ != NULL) {
    delete doc_;
  }
  doc_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_name_ != NULL) {
    delete type_name_;
  }
  type_name_ = NULL;
  ::memset(&id_, 0, reinterpret_cast<char*>(&bitwidth_) -
    reinterpret_cast<char*>(&id_) + sizeof(bitwidth_));
  clear_match();
}

bool MatchField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.MatchField)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.MatchField.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string annotations = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_annotations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotations(this->annotations_size() - 1).data(),
            this->annotations(this->annotations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.MatchField.annotations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bitwidth = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bitwidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.MatchField.MatchType match_type = 5;
      case 5: {
        if (tag == 40u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::p4::config::v1::MatchField_MatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.Documentation doc = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_doc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string other_match_type = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_other_match_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->other_match_type().data(), this->other_match_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.MatchField.other_match_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4NamedType type_name = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 9;
      case 9: {
        if (tag == 74u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_structured_annotations()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.MatchField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.MatchField)
  return false;
#undef DO_
}

void MatchField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.MatchField)
  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.MatchField.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated string annotations = 3;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.MatchField.annotations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->annotations(i), output);
  }

  // int32 bitwidth = 4;
  if (this->bitwidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bitwidth(), output);
  }

  // .p4.config.v1.MatchField.MatchType match_type = 5;
  if (has_match_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->match_type(), output);
  }

  // .p4.config.v1.Documentation doc = 6;
  if (this->has_doc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->doc_, output);
  }

  // string other_match_type = 7;
  if (has_other_match_type()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->other_match_type().data(), this->other_match_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.MatchField.other_match_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->other_match_type(), output);
  }

  // .p4.config.v1.P4NamedType type_name = 8;
  if (this->has_type_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->type_name_, output);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 9;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->structured_annotations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.MatchField)
}

::google::protobuf::uint8* MatchField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.MatchField)
  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.MatchField.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated string annotations = 3;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.MatchField.annotations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->annotations(i), target);
  }

  // int32 bitwidth = 4;
  if (this->bitwidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bitwidth(), target);
  }

  // .p4.config.v1.MatchField.MatchType match_type = 5;
  if (has_match_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->match_type(), target);
  }

  // .p4.config.v1.Documentation doc = 6;
  if (this->has_doc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->doc_, false, target);
  }

  // string other_match_type = 7;
  if (has_other_match_type()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->other_match_type().data(), this->other_match_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.MatchField.other_match_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->other_match_type(), target);
  }

  // .p4.config.v1.P4NamedType type_name = 8;
  if (this->has_type_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->type_name_, false, target);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 9;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->structured_annotations(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.MatchField)
  return target;
}

size_t MatchField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.MatchField)
  size_t total_size = 0;

  // repeated string annotations = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  for (int i = 0; i < this->annotations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->annotations(i));
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 9;
  {
    unsigned int count = this->structured_annotations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->structured_annotations(i));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .p4.config.v1.Documentation doc = 6;
  if (this->has_doc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->doc_);
  }

  // .p4.config.v1.P4NamedType type_name = 8;
  if (this->has_type_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_name_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // int32 bitwidth = 4;
  if (this->bitwidth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bitwidth());
  }

  switch (match_case()) {
    // .p4.config.v1.MatchField.MatchType match_type = 5;
    case kMatchType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
      break;
    }
    // string other_match_type = 7;
    case kOtherMatchType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->other_match_type());
      break;
    }
    case MATCH_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.MatchField)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.MatchField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.MatchField)
    MergeFrom(*source);
  }
}

void MatchField::MergeFrom(const MatchField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.MatchField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotations_.MergeFrom(from.annotations_);
  structured_annotations_.MergeFrom(from.structured_annotations_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_doc()) {
    mutable_doc()->::p4::config::v1::Documentation::MergeFrom(from.doc());
  }
  if (from.has_type_name()) {
    mutable_type_name()->::p4::config::v1::P4NamedType::MergeFrom(from.type_name());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.bitwidth() != 0) {
    set_bitwidth(from.bitwidth());
  }
  switch (from.match_case()) {
    case kMatchType: {
      set_match_type(from.match_type());
      break;
    }
    case kOtherMatchType: {
      set_other_match_type(from.other_match_type());
      break;
    }
    case MATCH_NOT_SET: {
      break;
    }
  }
}

void MatchField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.MatchField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchField::CopyFrom(const MatchField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.MatchField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchField::IsInitialized() const {
  return true;
}

void MatchField::Swap(MatchField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchField::InternalSwap(MatchField* other) {
  annotations_.UnsafeArenaSwap(&other->annotations_);
  structured_annotations_.UnsafeArenaSwap(&other->structured_annotations_);
  name_.Swap(&other->name_);
  std::swap(doc_, other->doc_);
  std::swap(type_name_, other->type_name_);
  std::swap(id_, other->id_);
  std::swap(bitwidth_, other->bitwidth_);
  std::swap(match_, other->match_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchField::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchField

// uint32 id = 1;
void MatchField::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 MatchField::id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.id)
  return id_;
}
void MatchField::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.MatchField.id)
}

// string name = 2;
void MatchField::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MatchField::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.name)
  return name_.GetNoArena();
}
void MatchField::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.MatchField.name)
}
#if LANG_CXX11
void MatchField::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.MatchField.name)
}
#endif
void MatchField::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.MatchField.name)
}
void MatchField::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.MatchField.name)
}
::std::string* MatchField::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.MatchField.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MatchField::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.MatchField.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchField::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.MatchField.name)
}

// repeated string annotations = 3;
int MatchField::annotations_size() const {
  return annotations_.size();
}
void MatchField::clear_annotations() {
  annotations_.Clear();
}
const ::std::string& MatchField::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.annotations)
  return annotations_.Get(index);
}
::std::string* MatchField::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.MatchField.annotations)
  return annotations_.Mutable(index);
}
void MatchField::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.MatchField.annotations)
  annotations_.Mutable(index)->assign(value);
}
void MatchField::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.MatchField.annotations)
}
void MatchField::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.MatchField.annotations)
}
::std::string* MatchField::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.MatchField.annotations)
  return annotations_.Add();
}
void MatchField::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.MatchField.annotations)
}
void MatchField::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.MatchField.annotations)
}
void MatchField::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.MatchField.annotations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MatchField::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.MatchField.annotations)
  return annotations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MatchField::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.MatchField.annotations)
  return &annotations_;
}

// int32 bitwidth = 4;
void MatchField::clear_bitwidth() {
  bitwidth_ = 0;
}
::google::protobuf::int32 MatchField::bitwidth() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.bitwidth)
  return bitwidth_;
}
void MatchField::set_bitwidth(::google::protobuf::int32 value) {
  
  bitwidth_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.MatchField.bitwidth)
}

// .p4.config.v1.MatchField.MatchType match_type = 5;
bool MatchField::has_match_type() const {
  return match_case() == kMatchType;
}
void MatchField::set_has_match_type() {
  _oneof_case_[0] = kMatchType;
}
void MatchField::clear_match_type() {
  if (has_match_type()) {
    match_.match_type_ = 0;
    clear_has_match();
  }
}
::p4::config::v1::MatchField_MatchType MatchField::match_type() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.match_type)
  if (has_match_type()) {
    return static_cast< ::p4::config::v1::MatchField_MatchType >(match_.match_type_);
  }
  return static_cast< ::p4::config::v1::MatchField_MatchType >(0);
}
void MatchField::set_match_type(::p4::config::v1::MatchField_MatchType value) {
  if (!has_match_type()) {
    clear_match();
    set_has_match_type();
  }
  match_.match_type_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.MatchField.match_type)
}

// string other_match_type = 7;
bool MatchField::has_other_match_type() const {
  return match_case() == kOtherMatchType;
}
void MatchField::set_has_other_match_type() {
  _oneof_case_[0] = kOtherMatchType;
}
void MatchField::clear_other_match_type() {
  if (has_other_match_type()) {
    match_.other_match_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_match();
  }
}
const ::std::string& MatchField::other_match_type() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.other_match_type)
  if (has_other_match_type()) {
    return match_.other_match_type_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void MatchField::set_other_match_type(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.MatchField.other_match_type)
  if (!has_other_match_type()) {
    clear_match();
    set_has_other_match_type();
    match_.other_match_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  match_.other_match_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.MatchField.other_match_type)
}
#if LANG_CXX11
void MatchField::set_other_match_type(::std::string&& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.MatchField.other_match_type)
  if (!has_other_match_type()) {
    clear_match();
    set_has_other_match_type();
    match_.other_match_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  match_.other_match_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.MatchField.other_match_type)
}
#endif
void MatchField::set_other_match_type(const char* value) {
  if (!has_other_match_type()) {
    clear_match();
    set_has_other_match_type();
    match_.other_match_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  match_.other_match_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.MatchField.other_match_type)
}
void MatchField::set_other_match_type(const char* value, size_t size) {
  if (!has_other_match_type()) {
    clear_match();
    set_has_other_match_type();
    match_.other_match_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  match_.other_match_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.MatchField.other_match_type)
}
::std::string* MatchField::mutable_other_match_type() {
  if (!has_other_match_type()) {
    clear_match();
    set_has_other_match_type();
    match_.other_match_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.MatchField.other_match_type)
  return match_.other_match_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MatchField::release_other_match_type() {
  // @@protoc_insertion_point(field_release:p4.config.v1.MatchField.other_match_type)
  if (has_other_match_type()) {
    clear_has_match();
    return match_.other_match_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void MatchField::set_allocated_other_match_type(::std::string* other_match_type) {
  if (!has_other_match_type()) {
    match_.other_match_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_match();
  if (other_match_type != NULL) {
    set_has_other_match_type();
    match_.other_match_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        other_match_type);
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.MatchField.other_match_type)
}

// .p4.config.v1.Documentation doc = 6;
bool MatchField::has_doc() const {
  return this != internal_default_instance() && doc_ != NULL;
}
void MatchField::clear_doc() {
  if (GetArenaNoVirtual() == NULL && doc_ != NULL) delete doc_;
  doc_ = NULL;
}
const ::p4::config::v1::Documentation& MatchField::doc() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.doc)
  return doc_ != NULL ? *doc_
                         : *::p4::config::v1::Documentation::internal_default_instance();
}
::p4::config::v1::Documentation* MatchField::mutable_doc() {
  
  if (doc_ == NULL) {
    doc_ = new ::p4::config::v1::Documentation;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.MatchField.doc)
  return doc_;
}
::p4::config::v1::Documentation* MatchField::release_doc() {
  // @@protoc_insertion_point(field_release:p4.config.v1.MatchField.doc)
  
  ::p4::config::v1::Documentation* temp = doc_;
  doc_ = NULL;
  return temp;
}
void MatchField::set_allocated_doc(::p4::config::v1::Documentation* doc) {
  delete doc_;
  doc_ = doc;
  if (doc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.MatchField.doc)
}

// .p4.config.v1.P4NamedType type_name = 8;
bool MatchField::has_type_name() const {
  return this != internal_default_instance() && type_name_ != NULL;
}
void MatchField::clear_type_name() {
  if (GetArenaNoVirtual() == NULL && type_name_ != NULL) delete type_name_;
  type_name_ = NULL;
}
const ::p4::config::v1::P4NamedType& MatchField::type_name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.type_name)
  return type_name_ != NULL ? *type_name_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
::p4::config::v1::P4NamedType* MatchField::mutable_type_name() {
  
  if (type_name_ == NULL) {
    type_name_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.MatchField.type_name)
  return type_name_;
}
::p4::config::v1::P4NamedType* MatchField::release_type_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.MatchField.type_name)
  
  ::p4::config::v1::P4NamedType* temp = type_name_;
  type_name_ = NULL;
  return temp;
}
void MatchField::set_allocated_type_name(::p4::config::v1::P4NamedType* type_name) {
  delete type_name_;
  type_name_ = type_name;
  if (type_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.MatchField.type_name)
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 9;
int MatchField::structured_annotations_size() const {
  return structured_annotations_.size();
}
void MatchField::clear_structured_annotations() {
  structured_annotations_.Clear();
}
const ::p4::config::v1::StructuredAnnotation& MatchField::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MatchField.structured_annotations)
  return structured_annotations_.Get(index);
}
::p4::config::v1::StructuredAnnotation* MatchField::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.MatchField.structured_annotations)
  return structured_annotations_.Mutable(index);
}
::p4::config::v1::StructuredAnnotation* MatchField::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.MatchField.structured_annotations)
  return structured_annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
MatchField::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.MatchField.structured_annotations)
  return &structured_annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
MatchField::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.MatchField.structured_annotations)
  return structured_annotations_;
}

bool MatchField::has_match() const {
  return match_case() != MATCH_NOT_SET;
}
void MatchField::clear_has_match() {
  _oneof_case_[0] = MATCH_NOT_SET;
}
MatchField::MatchCase MatchField::match_case() const {
  return MatchField::MatchCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Table::kPreambleFieldNumber;
const int Table::kMatchFieldsFieldNumber;
const int Table::kActionRefsFieldNumber;
const int Table::kConstDefaultActionIdFieldNumber;
const int Table::kImplementationIdFieldNumber;
const int Table::kDirectResourceIdsFieldNumber;
const int Table::kSizeFieldNumber;
const int Table::kIdleTimeoutBehaviorFieldNumber;
const int Table::kIsConstTableFieldNumber;
const int Table::kOtherPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Table::Table()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.Table)
}
Table::Table(const Table& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      match_fields_(from.match_fields_),
      action_refs_(from.action_refs_),
      direct_resource_ids_(from.direct_resource_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    preamble_ = new ::p4::config::v1::Preamble(*from.preamble_);
  } else {
    preamble_ = NULL;
  }
  if (from.has_other_properties()) {
    other_properties_ = new ::google::protobuf::Any(*from.other_properties_);
  } else {
    other_properties_ = NULL;
  }
  ::memcpy(&const_default_action_id_, &from.const_default_action_id_,
    reinterpret_cast<char*>(&is_const_table_) -
    reinterpret_cast<char*>(&const_default_action_id_) + sizeof(is_const_table_));
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.Table)
}

void Table::SharedCtor() {
  ::memset(&preamble_, 0, reinterpret_cast<char*>(&is_const_table_) -
    reinterpret_cast<char*>(&preamble_) + sizeof(is_const_table_));
  _cached_size_ = 0;
}

Table::~Table() {
  // @@protoc_insertion_point(destructor:p4.config.v1.Table)
  SharedDtor();
}

void Table::SharedDtor() {
  if (this != internal_default_instance()) {
    delete preamble_;
  }
  if (this != internal_default_instance()) {
    delete other_properties_;
  }
}

void Table::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Table::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[8].descriptor;
}

const Table& Table::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

Table* Table::New(::google::protobuf::Arena* arena) const {
  Table* n = new Table;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Table::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.Table)
  match_fields_.Clear();
  action_refs_.Clear();
  direct_resource_ids_.Clear();
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) {
    delete preamble_;
  }
  preamble_ = NULL;
  if (GetArenaNoVirtual() == NULL && other_properties_ != NULL) {
    delete other_properties_;
  }
  other_properties_ = NULL;
  ::memset(&const_default_action_id_, 0, reinterpret_cast<char*>(&is_const_table_) -
    reinterpret_cast<char*>(&const_default_action_id_) + sizeof(is_const_table_));
}

bool Table::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.Table)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.Preamble preamble = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_preamble()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.MatchField match_fields = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_match_fields()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .p4.config.v1.ActionRef action_refs = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_action_refs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // uint32 const_default_action_id = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &const_default_action_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 implementation_id = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &implementation_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 direct_resource_ids = 7;
      case 7: {
        if (tag == 58u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_direct_resource_ids())));
        } else if (tag == 56u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58u, input, this->mutable_direct_resource_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.Table.IdleTimeoutBehavior idle_timeout_behavior = 9;
      case 9: {
        if (tag == 72u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_idle_timeout_behavior(static_cast< ::p4::config::v1::Table_IdleTimeoutBehavior >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_const_table = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_const_table_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any other_properties = 100;
      case 100: {
        if (tag == 802u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.Table)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.Table)
  return false;
#undef DO_
}

void Table::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.Table)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->preamble_, output);
  }

  // repeated .p4.config.v1.MatchField match_fields = 2;
  for (unsigned int i = 0, n = this->match_fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->match_fields(i), output);
  }

  // repeated .p4.config.v1.ActionRef action_refs = 3;
  for (unsigned int i = 0, n = this->action_refs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->action_refs(i), output);
  }

  // uint32 const_default_action_id = 4;
  if (this->const_default_action_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->const_default_action_id(), output);
  }

  // uint32 implementation_id = 6;
  if (this->implementation_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->implementation_id(), output);
  }

  // repeated uint32 direct_resource_ids = 7;
  if (this->direct_resource_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_direct_resource_ids_cached_byte_size_);
  }
  for (int i = 0; i < this->direct_resource_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->direct_resource_ids(i), output);
  }

  // int64 size = 8;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->size(), output);
  }

  // .p4.config.v1.Table.IdleTimeoutBehavior idle_timeout_behavior = 9;
  if (this->idle_timeout_behavior() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->idle_timeout_behavior(), output);
  }

  // bool is_const_table = 10;
  if (this->is_const_table() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_const_table(), output);
  }

  // .google.protobuf.Any other_properties = 100;
  if (this->has_other_properties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, *this->other_properties_, output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.Table)
}

::google::protobuf::uint8* Table::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.Table)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->preamble_, false, target);
  }

  // repeated .p4.config.v1.MatchField match_fields = 2;
  for (unsigned int i = 0, n = this->match_fields_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->match_fields(i), false, target);
  }

  // repeated .p4.config.v1.ActionRef action_refs = 3;
  for (unsigned int i = 0, n = this->action_refs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->action_refs(i), false, target);
  }

  // uint32 const_default_action_id = 4;
  if (this->const_default_action_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->const_default_action_id(), target);
  }

  // uint32 implementation_id = 6;
  if (this->implementation_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->implementation_id(), target);
  }

  // repeated uint32 direct_resource_ids = 7;
  if (this->direct_resource_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _direct_resource_ids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->direct_resource_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->direct_resource_ids(i), target);
  }

  // int64 size = 8;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->size(), target);
  }

  // .p4.config.v1.Table.IdleTimeoutBehavior idle_timeout_behavior = 9;
  if (this->idle_timeout_behavior() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->idle_timeout_behavior(), target);
  }

  // bool is_const_table = 10;
  if (this->is_const_table() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_const_table(), target);
  }

  // .google.protobuf.Any other_properties = 100;
  if (this->has_other_properties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        100, *this->other_properties_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.Table)
  return target;
}

size_t Table::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.Table)
  size_t total_size = 0;

  // repeated .p4.config.v1.MatchField match_fields = 2;
  {
    unsigned int count = this->match_fields_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->match_fields(i));
    }
  }

  // repeated .p4.config.v1.ActionRef action_refs = 3;
  {
    unsigned int count = this->action_refs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->action_refs(i));
    }
  }

  // repeated uint32 direct_resource_ids = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->direct_resource_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _direct_resource_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->preamble_);
  }

  // .google.protobuf.Any other_properties = 100;
  if (this->has_other_properties()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->other_properties_);
  }

  // uint32 const_default_action_id = 4;
  if (this->const_default_action_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->const_default_action_id());
  }

  // uint32 implementation_id = 6;
  if (this->implementation_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->implementation_id());
  }

  // int64 size = 8;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  // .p4.config.v1.Table.IdleTimeoutBehavior idle_timeout_behavior = 9;
  if (this->idle_timeout_behavior() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->idle_timeout_behavior());
  }

  // bool is_const_table = 10;
  if (this->is_const_table() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Table::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.Table)
  GOOGLE_DCHECK_NE(&from, this);
  const Table* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Table>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.Table)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.Table)
    MergeFrom(*source);
  }
}

void Table::MergeFrom(const Table& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.Table)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  match_fields_.MergeFrom(from.match_fields_);
  action_refs_.MergeFrom(from.action_refs_);
  direct_resource_ids_.MergeFrom(from.direct_resource_ids_);
  if (from.has_preamble()) {
    mutable_preamble()->::p4::config::v1::Preamble::MergeFrom(from.preamble());
  }
  if (from.has_other_properties()) {
    mutable_other_properties()->::google::protobuf::Any::MergeFrom(from.other_properties());
  }
  if (from.const_default_action_id() != 0) {
    set_const_default_action_id(from.const_default_action_id());
  }
  if (from.implementation_id() != 0) {
    set_implementation_id(from.implementation_id());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.idle_timeout_behavior() != 0) {
    set_idle_timeout_behavior(from.idle_timeout_behavior());
  }
  if (from.is_const_table() != 0) {
    set_is_const_table(from.is_const_table());
  }
}

void Table::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.Table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Table::CopyFrom(const Table& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.Table)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Table::IsInitialized() const {
  return true;
}

void Table::Swap(Table* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Table::InternalSwap(Table* other) {
  match_fields_.UnsafeArenaSwap(&other->match_fields_);
  action_refs_.UnsafeArenaSwap(&other->action_refs_);
  direct_resource_ids_.UnsafeArenaSwap(&other->direct_resource_ids_);
  std::swap(preamble_, other->preamble_);
  std::swap(other_properties_, other->other_properties_);
  std::swap(const_default_action_id_, other->const_default_action_id_);
  std::swap(implementation_id_, other->implementation_id_);
  std::swap(size_, other->size_);
  std::swap(idle_timeout_behavior_, other->idle_timeout_behavior_);
  std::swap(is_const_table_, other->is_const_table_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Table::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Table

// .p4.config.v1.Preamble preamble = 1;
bool Table::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
void Table::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
const ::p4::config::v1::Preamble& Table::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
::p4::config::v1::Preamble* Table::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Table.preamble)
  return preamble_;
}
::p4::config::v1::Preamble* Table::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Table.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
void Table::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Table.preamble)
}

// repeated .p4.config.v1.MatchField match_fields = 2;
int Table::match_fields_size() const {
  return match_fields_.size();
}
void Table::clear_match_fields() {
  match_fields_.Clear();
}
const ::p4::config::v1::MatchField& Table::match_fields(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.match_fields)
  return match_fields_.Get(index);
}
::p4::config::v1::MatchField* Table::mutable_match_fields(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Table.match_fields)
  return match_fields_.Mutable(index);
}
::p4::config::v1::MatchField* Table::add_match_fields() {
  // @@protoc_insertion_point(field_add:p4.config.v1.Table.match_fields)
  return match_fields_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::MatchField >*
Table::mutable_match_fields() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Table.match_fields)
  return &match_fields_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::MatchField >&
Table::match_fields() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Table.match_fields)
  return match_fields_;
}

// repeated .p4.config.v1.ActionRef action_refs = 3;
int Table::action_refs_size() const {
  return action_refs_.size();
}
void Table::clear_action_refs() {
  action_refs_.Clear();
}
const ::p4::config::v1::ActionRef& Table::action_refs(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.action_refs)
  return action_refs_.Get(index);
}
::p4::config::v1::ActionRef* Table::mutable_action_refs(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Table.action_refs)
  return action_refs_.Mutable(index);
}
::p4::config::v1::ActionRef* Table::add_action_refs() {
  // @@protoc_insertion_point(field_add:p4.config.v1.Table.action_refs)
  return action_refs_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::ActionRef >*
Table::mutable_action_refs() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Table.action_refs)
  return &action_refs_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ActionRef >&
Table::action_refs() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Table.action_refs)
  return action_refs_;
}

// uint32 const_default_action_id = 4;
void Table::clear_const_default_action_id() {
  const_default_action_id_ = 0u;
}
::google::protobuf::uint32 Table::const_default_action_id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.const_default_action_id)
  return const_default_action_id_;
}
void Table::set_const_default_action_id(::google::protobuf::uint32 value) {
  
  const_default_action_id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Table.const_default_action_id)
}

// uint32 implementation_id = 6;
void Table::clear_implementation_id() {
  implementation_id_ = 0u;
}
::google::protobuf::uint32 Table::implementation_id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.implementation_id)
  return implementation_id_;
}
void Table::set_implementation_id(::google::protobuf::uint32 value) {
  
  implementation_id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Table.implementation_id)
}

// repeated uint32 direct_resource_ids = 7;
int Table::direct_resource_ids_size() const {
  return direct_resource_ids_.size();
}
void Table::clear_direct_resource_ids() {
  direct_resource_ids_.Clear();
}
::google::protobuf::uint32 Table::direct_resource_ids(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.direct_resource_ids)
  return direct_resource_ids_.Get(index);
}
void Table::set_direct_resource_ids(int index, ::google::protobuf::uint32 value) {
  direct_resource_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:p4.config.v1.Table.direct_resource_ids)
}
void Table::add_direct_resource_ids(::google::protobuf::uint32 value) {
  direct_resource_ids_.Add(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.Table.direct_resource_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Table::direct_resource_ids() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Table.direct_resource_ids)
  return direct_resource_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Table::mutable_direct_resource_ids() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Table.direct_resource_ids)
  return &direct_resource_ids_;
}

// int64 size = 8;
void Table::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Table::size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.size)
  return size_;
}
void Table::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Table.size)
}

// .p4.config.v1.Table.IdleTimeoutBehavior idle_timeout_behavior = 9;
void Table::clear_idle_timeout_behavior() {
  idle_timeout_behavior_ = 0;
}
::p4::config::v1::Table_IdleTimeoutBehavior Table::idle_timeout_behavior() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.idle_timeout_behavior)
  return static_cast< ::p4::config::v1::Table_IdleTimeoutBehavior >(idle_timeout_behavior_);
}
void Table::set_idle_timeout_behavior(::p4::config::v1::Table_IdleTimeoutBehavior value) {
  
  idle_timeout_behavior_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Table.idle_timeout_behavior)
}

// bool is_const_table = 10;
void Table::clear_is_const_table() {
  is_const_table_ = false;
}
bool Table::is_const_table() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.is_const_table)
  return is_const_table_;
}
void Table::set_is_const_table(bool value) {
  
  is_const_table_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Table.is_const_table)
}

// .google.protobuf.Any other_properties = 100;
bool Table::has_other_properties() const {
  return this != internal_default_instance() && other_properties_ != NULL;
}
void Table::clear_other_properties() {
  if (GetArenaNoVirtual() == NULL && other_properties_ != NULL) delete other_properties_;
  other_properties_ = NULL;
}
const ::google::protobuf::Any& Table::other_properties() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Table.other_properties)
  return other_properties_ != NULL ? *other_properties_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* Table::mutable_other_properties() {
  
  if (other_properties_ == NULL) {
    other_properties_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Table.other_properties)
  return other_properties_;
}
::google::protobuf::Any* Table::release_other_properties() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Table.other_properties)
  
  ::google::protobuf::Any* temp = other_properties_;
  other_properties_ = NULL;
  return temp;
}
void Table::set_allocated_other_properties(::google::protobuf::Any* other_properties) {
  delete other_properties_;
  other_properties_ = other_properties;
  if (other_properties) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Table.other_properties)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionRef::kIdFieldNumber;
const int ActionRef::kScopeFieldNumber;
const int ActionRef::kAnnotationsFieldNumber;
const int ActionRef::kStructuredAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionRef::ActionRef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.ActionRef)
}
ActionRef::ActionRef(const ActionRef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      annotations_(from.annotations_),
      structured_annotations_(from.structured_annotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&scope_) -
    reinterpret_cast<char*>(&id_) + sizeof(scope_));
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.ActionRef)
}

void ActionRef::SharedCtor() {
  ::memset(&id_, 0, reinterpret_cast<char*>(&scope_) -
    reinterpret_cast<char*>(&id_) + sizeof(scope_));
  _cached_size_ = 0;
}

ActionRef::~ActionRef() {
  // @@protoc_insertion_point(destructor:p4.config.v1.ActionRef)
  SharedDtor();
}

void ActionRef::SharedDtor() {
}

void ActionRef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionRef::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[9].descriptor;
}

const ActionRef& ActionRef::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActionRef* ActionRef::New(::google::protobuf::Arena* arena) const {
  ActionRef* n = new ActionRef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActionRef::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.ActionRef)
  annotations_.Clear();
  structured_annotations_.Clear();
  ::memset(&id_, 0, reinterpret_cast<char*>(&scope_) -
    reinterpret_cast<char*>(&id_) + sizeof(scope_));
}

bool ActionRef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.ActionRef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string annotations = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_annotations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotations(this->annotations_size() - 1).data(),
            this->annotations(this->annotations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.ActionRef.annotations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.ActionRef.Scope scope = 3;
      case 3: {
        if (tag == 24u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_scope(static_cast< ::p4::config::v1::ActionRef_Scope >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_structured_annotations()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.ActionRef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.ActionRef)
  return false;
#undef DO_
}

void ActionRef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.ActionRef)
  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // repeated string annotations = 2;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.ActionRef.annotations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->annotations(i), output);
  }

  // .p4.config.v1.ActionRef.Scope scope = 3;
  if (this->scope() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->scope(), output);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->structured_annotations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.ActionRef)
}

::google::protobuf::uint8* ActionRef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.ActionRef)
  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // repeated string annotations = 2;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.ActionRef.annotations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->annotations(i), target);
  }

  // .p4.config.v1.ActionRef.Scope scope = 3;
  if (this->scope() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->scope(), target);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->structured_annotations(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.ActionRef)
  return target;
}

size_t ActionRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.ActionRef)
  size_t total_size = 0;

  // repeated string annotations = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  for (int i = 0; i < this->annotations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->annotations(i));
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
  {
    unsigned int count = this->structured_annotations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->structured_annotations(i));
    }
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // .p4.config.v1.ActionRef.Scope scope = 3;
  if (this->scope() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->scope());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionRef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.ActionRef)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionRef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionRef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.ActionRef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.ActionRef)
    MergeFrom(*source);
  }
}

void ActionRef::MergeFrom(const ActionRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.ActionRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotations_.MergeFrom(from.annotations_);
  structured_annotations_.MergeFrom(from.structured_annotations_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.scope() != 0) {
    set_scope(from.scope());
  }
}

void ActionRef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.ActionRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionRef::CopyFrom(const ActionRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.ActionRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionRef::IsInitialized() const {
  return true;
}

void ActionRef::Swap(ActionRef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionRef::InternalSwap(ActionRef* other) {
  annotations_.UnsafeArenaSwap(&other->annotations_);
  structured_annotations_.UnsafeArenaSwap(&other->structured_annotations_);
  std::swap(id_, other->id_);
  std::swap(scope_, other->scope_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActionRef::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActionRef

// uint32 id = 1;
void ActionRef::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 ActionRef::id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionRef.id)
  return id_;
}
void ActionRef::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.ActionRef.id)
}

// .p4.config.v1.ActionRef.Scope scope = 3;
void ActionRef::clear_scope() {
  scope_ = 0;
}
::p4::config::v1::ActionRef_Scope ActionRef::scope() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionRef.scope)
  return static_cast< ::p4::config::v1::ActionRef_Scope >(scope_);
}
void ActionRef::set_scope(::p4::config::v1::ActionRef_Scope value) {
  
  scope_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.ActionRef.scope)
}

// repeated string annotations = 2;
int ActionRef::annotations_size() const {
  return annotations_.size();
}
void ActionRef::clear_annotations() {
  annotations_.Clear();
}
const ::std::string& ActionRef::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionRef.annotations)
  return annotations_.Get(index);
}
::std::string* ActionRef::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ActionRef.annotations)
  return annotations_.Mutable(index);
}
void ActionRef::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.ActionRef.annotations)
  annotations_.Mutable(index)->assign(value);
}
void ActionRef::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.ActionRef.annotations)
}
void ActionRef::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.ActionRef.annotations)
}
::std::string* ActionRef::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.ActionRef.annotations)
  return annotations_.Add();
}
void ActionRef::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.ActionRef.annotations)
}
void ActionRef::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.ActionRef.annotations)
}
void ActionRef::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.ActionRef.annotations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ActionRef::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.ActionRef.annotations)
  return annotations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ActionRef::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.ActionRef.annotations)
  return &annotations_;
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
int ActionRef::structured_annotations_size() const {
  return structured_annotations_.size();
}
void ActionRef::clear_structured_annotations() {
  structured_annotations_.Clear();
}
const ::p4::config::v1::StructuredAnnotation& ActionRef::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionRef.structured_annotations)
  return structured_annotations_.Get(index);
}
::p4::config::v1::StructuredAnnotation* ActionRef::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ActionRef.structured_annotations)
  return structured_annotations_.Mutable(index);
}
::p4::config::v1::StructuredAnnotation* ActionRef::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.ActionRef.structured_annotations)
  return structured_annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
ActionRef::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.ActionRef.structured_annotations)
  return &structured_annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
ActionRef::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.ActionRef.structured_annotations)
  return structured_annotations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Action_Param::kIdFieldNumber;
const int Action_Param::kNameFieldNumber;
const int Action_Param::kAnnotationsFieldNumber;
const int Action_Param::kBitwidthFieldNumber;
const int Action_Param::kDocFieldNumber;
const int Action_Param::kTypeNameFieldNumber;
const int Action_Param::kStructuredAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Action_Param::Action_Param()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.Action.Param)
}
Action_Param::Action_Param(const Action_Param& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      annotations_(from.annotations_),
      structured_annotations_(from.structured_annotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_doc()) {
    doc_ = new ::p4::config::v1::Documentation(*from.doc_);
  } else {
    doc_ = NULL;
  }
  if (from.has_type_name()) {
    type_name_ = new ::p4::config::v1::P4NamedType(*from.type_name_);
  } else {
    type_name_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&bitwidth_) -
    reinterpret_cast<char*>(&id_) + sizeof(bitwidth_));
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.Action.Param)
}

void Action_Param::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&doc_, 0, reinterpret_cast<char*>(&bitwidth_) -
    reinterpret_cast<char*>(&doc_) + sizeof(bitwidth_));
  _cached_size_ = 0;
}

Action_Param::~Action_Param() {
  // @@protoc_insertion_point(destructor:p4.config.v1.Action.Param)
  SharedDtor();
}

void Action_Param::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete doc_;
  }
  if (this != internal_default_instance()) {
    delete type_name_;
  }
}

void Action_Param::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Action_Param::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[10].descriptor;
}

const Action_Param& Action_Param::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

Action_Param* Action_Param::New(::google::protobuf::Arena* arena) const {
  Action_Param* n = new Action_Param;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Action_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.Action.Param)
  annotations_.Clear();
  structured_annotations_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && doc_ != NULL) {
    delete doc_;
  }
  doc_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_name_ != NULL) {
    delete type_name_;
  }
  type_name_ = NULL;
  ::memset(&id_, 0, reinterpret_cast<char*>(&bitwidth_) -
    reinterpret_cast<char*>(&id_) + sizeof(bitwidth_));
}

bool Action_Param::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.Action.Param)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.Action.Param.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string annotations = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_annotations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotations(this->annotations_size() - 1).data(),
            this->annotations(this->annotations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.Action.Param.annotations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bitwidth = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bitwidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.Documentation doc = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_doc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4NamedType type_name = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 7;
      case 7: {
        if (tag == 58u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_structured_annotations()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.Action.Param)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.Action.Param)
  return false;
#undef DO_
}

void Action_Param::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.Action.Param)
  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Action.Param.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated string annotations = 3;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Action.Param.annotations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->annotations(i), output);
  }

  // int32 bitwidth = 4;
  if (this->bitwidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bitwidth(), output);
  }

  // .p4.config.v1.Documentation doc = 5;
  if (this->has_doc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->doc_, output);
  }

  // .p4.config.v1.P4NamedType type_name = 6;
  if (this->has_type_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->type_name_, output);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 7;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->structured_annotations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.Action.Param)
}

::google::protobuf::uint8* Action_Param::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.Action.Param)
  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Action.Param.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated string annotations = 3;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Action.Param.annotations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->annotations(i), target);
  }

  // int32 bitwidth = 4;
  if (this->bitwidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bitwidth(), target);
  }

  // .p4.config.v1.Documentation doc = 5;
  if (this->has_doc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->doc_, false, target);
  }

  // .p4.config.v1.P4NamedType type_name = 6;
  if (this->has_type_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->type_name_, false, target);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 7;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->structured_annotations(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.Action.Param)
  return target;
}

size_t Action_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.Action.Param)
  size_t total_size = 0;

  // repeated string annotations = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  for (int i = 0; i < this->annotations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->annotations(i));
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 7;
  {
    unsigned int count = this->structured_annotations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->structured_annotations(i));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .p4.config.v1.Documentation doc = 5;
  if (this->has_doc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->doc_);
  }

  // .p4.config.v1.P4NamedType type_name = 6;
  if (this->has_type_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_name_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // int32 bitwidth = 4;
  if (this->bitwidth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bitwidth());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Action_Param::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.Action.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const Action_Param* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Action_Param>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.Action.Param)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.Action.Param)
    MergeFrom(*source);
  }
}

void Action_Param::MergeFrom(const Action_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.Action.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotations_.MergeFrom(from.annotations_);
  structured_annotations_.MergeFrom(from.structured_annotations_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_doc()) {
    mutable_doc()->::p4::config::v1::Documentation::MergeFrom(from.doc());
  }
  if (from.has_type_name()) {
    mutable_type_name()->::p4::config::v1::P4NamedType::MergeFrom(from.type_name());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.bitwidth() != 0) {
    set_bitwidth(from.bitwidth());
  }
}

void Action_Param::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.Action.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action_Param::CopyFrom(const Action_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.Action.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action_Param::IsInitialized() const {
  return true;
}

void Action_Param::Swap(Action_Param* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Action_Param::InternalSwap(Action_Param* other) {
  annotations_.UnsafeArenaSwap(&other->annotations_);
  structured_annotations_.UnsafeArenaSwap(&other->structured_annotations_);
  name_.Swap(&other->name_);
  std::swap(doc_, other->doc_);
  std::swap(type_name_, other->type_name_);
  std::swap(id_, other->id_);
  std::swap(bitwidth_, other->bitwidth_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Action_Param::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Action_Param

// uint32 id = 1;
void Action_Param::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 Action_Param::id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.Param.id)
  return id_;
}
void Action_Param::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Action.Param.id)
}

// string name = 2;
void Action_Param::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Action_Param::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.Param.name)
  return name_.GetNoArena();
}
void Action_Param::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.Action.Param.name)
}
#if LANG_CXX11
void Action_Param::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.Action.Param.name)
}
#endif
void Action_Param::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Action.Param.name)
}
void Action_Param::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Action.Param.name)
}
::std::string* Action_Param::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Action.Param.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Action_Param::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Action.Param.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Action_Param::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Action.Param.name)
}

// repeated string annotations = 3;
int Action_Param::annotations_size() const {
  return annotations_.size();
}
void Action_Param::clear_annotations() {
  annotations_.Clear();
}
const ::std::string& Action_Param::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.Param.annotations)
  return annotations_.Get(index);
}
::std::string* Action_Param::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Action.Param.annotations)
  return annotations_.Mutable(index);
}
void Action_Param::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.Action.Param.annotations)
  annotations_.Mutable(index)->assign(value);
}
void Action_Param::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Action.Param.annotations)
}
void Action_Param::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Action.Param.annotations)
}
::std::string* Action_Param::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.Action.Param.annotations)
  return annotations_.Add();
}
void Action_Param::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.Action.Param.annotations)
}
void Action_Param::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.Action.Param.annotations)
}
void Action_Param::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.Action.Param.annotations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Action_Param::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Action.Param.annotations)
  return annotations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Action_Param::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Action.Param.annotations)
  return &annotations_;
}

// int32 bitwidth = 4;
void Action_Param::clear_bitwidth() {
  bitwidth_ = 0;
}
::google::protobuf::int32 Action_Param::bitwidth() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.Param.bitwidth)
  return bitwidth_;
}
void Action_Param::set_bitwidth(::google::protobuf::int32 value) {
  
  bitwidth_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Action.Param.bitwidth)
}

// .p4.config.v1.Documentation doc = 5;
bool Action_Param::has_doc() const {
  return this != internal_default_instance() && doc_ != NULL;
}
void Action_Param::clear_doc() {
  if (GetArenaNoVirtual() == NULL && doc_ != NULL) delete doc_;
  doc_ = NULL;
}
const ::p4::config::v1::Documentation& Action_Param::doc() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.Param.doc)
  return doc_ != NULL ? *doc_
                         : *::p4::config::v1::Documentation::internal_default_instance();
}
::p4::config::v1::Documentation* Action_Param::mutable_doc() {
  
  if (doc_ == NULL) {
    doc_ = new ::p4::config::v1::Documentation;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Action.Param.doc)
  return doc_;
}
::p4::config::v1::Documentation* Action_Param::release_doc() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Action.Param.doc)
  
  ::p4::config::v1::Documentation* temp = doc_;
  doc_ = NULL;
  return temp;
}
void Action_Param::set_allocated_doc(::p4::config::v1::Documentation* doc) {
  delete doc_;
  doc_ = doc;
  if (doc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Action.Param.doc)
}

// .p4.config.v1.P4NamedType type_name = 6;
bool Action_Param::has_type_name() const {
  return this != internal_default_instance() && type_name_ != NULL;
}
void Action_Param::clear_type_name() {
  if (GetArenaNoVirtual() == NULL && type_name_ != NULL) delete type_name_;
  type_name_ = NULL;
}
const ::p4::config::v1::P4NamedType& Action_Param::type_name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.Param.type_name)
  return type_name_ != NULL ? *type_name_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
::p4::config::v1::P4NamedType* Action_Param::mutable_type_name() {
  
  if (type_name_ == NULL) {
    type_name_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Action.Param.type_name)
  return type_name_;
}
::p4::config::v1::P4NamedType* Action_Param::release_type_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Action.Param.type_name)
  
  ::p4::config::v1::P4NamedType* temp = type_name_;
  type_name_ = NULL;
  return temp;
}
void Action_Param::set_allocated_type_name(::p4::config::v1::P4NamedType* type_name) {
  delete type_name_;
  type_name_ = type_name;
  if (type_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Action.Param.type_name)
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 7;
int Action_Param::structured_annotations_size() const {
  return structured_annotations_.size();
}
void Action_Param::clear_structured_annotations() {
  structured_annotations_.Clear();
}
const ::p4::config::v1::StructuredAnnotation& Action_Param::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.Param.structured_annotations)
  return structured_annotations_.Get(index);
}
::p4::config::v1::StructuredAnnotation* Action_Param::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Action.Param.structured_annotations)
  return structured_annotations_.Mutable(index);
}
::p4::config::v1::StructuredAnnotation* Action_Param::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.Action.Param.structured_annotations)
  return structured_annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
Action_Param::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Action.Param.structured_annotations)
  return &structured_annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
Action_Param::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Action.Param.structured_annotations)
  return structured_annotations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Action::kPreambleFieldNumber;
const int Action::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Action::Action()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.Action)
}
Action::Action(const Action& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    preamble_ = new ::p4::config::v1::Preamble(*from.preamble_);
  } else {
    preamble_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.Action)
}

void Action::SharedCtor() {
  preamble_ = NULL;
  _cached_size_ = 0;
}

Action::~Action() {
  // @@protoc_insertion_point(destructor:p4.config.v1.Action)
  SharedDtor();
}

void Action::SharedDtor() {
  if (this != internal_default_instance()) {
    delete preamble_;
  }
}

void Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Action::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[11].descriptor;
}

const Action& Action::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

Action* Action::New(::google::protobuf::Arena* arena) const {
  Action* n = new Action;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Action::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.Action)
  params_.Clear();
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) {
    delete preamble_;
  }
  preamble_ = NULL;
}

bool Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.Action)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.Preamble preamble = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_preamble()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.Action.Param params = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.Action)
  return false;
#undef DO_
}

void Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.Action)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->preamble_, output);
  }

  // repeated .p4.config.v1.Action.Param params = 2;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->params(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.Action)
}

::google::protobuf::uint8* Action::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.Action)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->preamble_, false, target);
  }

  // repeated .p4.config.v1.Action.Param params = 2;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->params(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.Action)
  return target;
}

size_t Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.Action)
  size_t total_size = 0;

  // repeated .p4.config.v1.Action.Param params = 2;
  {
    unsigned int count = this->params_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params(i));
    }
  }

  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->preamble_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Action::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.Action)
  GOOGLE_DCHECK_NE(&from, this);
  const Action* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Action>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.Action)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.Action)
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.Action)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  params_.MergeFrom(from.params_);
  if (from.has_preamble()) {
    mutable_preamble()->::p4::config::v1::Preamble::MergeFrom(from.preamble());
  }
}

void Action::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  return true;
}

void Action::Swap(Action* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Action::InternalSwap(Action* other) {
  params_.UnsafeArenaSwap(&other->params_);
  std::swap(preamble_, other->preamble_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Action::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Action

// .p4.config.v1.Preamble preamble = 1;
bool Action::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
void Action::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
const ::p4::config::v1::Preamble& Action::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
::p4::config::v1::Preamble* Action::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Action.preamble)
  return preamble_;
}
::p4::config::v1::Preamble* Action::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Action.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
void Action::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Action.preamble)
}

// repeated .p4.config.v1.Action.Param params = 2;
int Action::params_size() const {
  return params_.size();
}
void Action::clear_params() {
  params_.Clear();
}
const ::p4::config::v1::Action_Param& Action::params(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Action.params)
  return params_.Get(index);
}
::p4::config::v1::Action_Param* Action::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Action.params)
  return params_.Mutable(index);
}
::p4::config::v1::Action_Param* Action::add_params() {
  // @@protoc_insertion_point(field_add:p4.config.v1.Action.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::Action_Param >*
Action::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.Action.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Action_Param >&
Action::params() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.Action.params)
  return params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionProfile::kPreambleFieldNumber;
const int ActionProfile::kTableIdsFieldNumber;
const int ActionProfile::kWithSelectorFieldNumber;
const int ActionProfile::kSizeFieldNumber;
const int ActionProfile::kMaxGroupSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionProfile::ActionProfile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.ActionProfile)
}
ActionProfile::ActionProfile(const ActionProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      table_ids_(from.table_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    preamble_ = new ::p4::config::v1::Preamble(*from.preamble_);
  } else {
    preamble_ = NULL;
  }
  ::memcpy(&size_, &from.size_,
    reinterpret_cast<char*>(&max_group_size_) -
    reinterpret_cast<char*>(&size_) + sizeof(max_group_size_));
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.ActionProfile)
}

void ActionProfile::SharedCtor() {
  ::memset(&preamble_, 0, reinterpret_cast<char*>(&max_group_size_) -
    reinterpret_cast<char*>(&preamble_) + sizeof(max_group_size_));
  _cached_size_ = 0;
}

ActionProfile::~ActionProfile() {
  // @@protoc_insertion_point(destructor:p4.config.v1.ActionProfile)
  SharedDtor();
}

void ActionProfile::SharedDtor() {
  if (this != internal_default_instance()) {
    delete preamble_;
  }
}

void ActionProfile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionProfile::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[12].descriptor;
}

const ActionProfile& ActionProfile::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActionProfile* ActionProfile::New(::google::protobuf::Arena* arena) const {
  ActionProfile* n = new ActionProfile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActionProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.ActionProfile)
  table_ids_.Clear();
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) {
    delete preamble_;
  }
  preamble_ = NULL;
  ::memset(&size_, 0, reinterpret_cast<char*>(&max_group_size_) -
    reinterpret_cast<char*>(&size_) + sizeof(max_group_size_));
}

bool ActionProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.ActionProfile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.Preamble preamble = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_preamble()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 table_ids = 2;
      case 2: {
        if (tag == 18u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_table_ids())));
        } else if (tag == 16u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_table_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool with_selector = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &with_selector_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_group_size = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_group_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.ActionProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.ActionProfile)
  return false;
#undef DO_
}

void ActionProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.ActionProfile)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->preamble_, output);
  }

  // repeated uint32 table_ids = 2;
  if (this->table_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_table_ids_cached_byte_size_);
  }
  for (int i = 0; i < this->table_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->table_ids(i), output);
  }

  // bool with_selector = 3;
  if (this->with_selector() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->with_selector(), output);
  }

  // int64 size = 4;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->size(), output);
  }

  // int32 max_group_size = 5;
  if (this->max_group_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->max_group_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.ActionProfile)
}

::google::protobuf::uint8* ActionProfile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.ActionProfile)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->preamble_, false, target);
  }

  // repeated uint32 table_ids = 2;
  if (this->table_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _table_ids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->table_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->table_ids(i), target);
  }

  // bool with_selector = 3;
  if (this->with_selector() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->with_selector(), target);
  }

  // int64 size = 4;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->size(), target);
  }

  // int32 max_group_size = 5;
  if (this->max_group_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->max_group_size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.ActionProfile)
  return target;
}

size_t ActionProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.ActionProfile)
  size_t total_size = 0;

  // repeated uint32 table_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->table_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _table_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->preamble_);
  }

  // int64 size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  // bool with_selector = 3;
  if (this->with_selector() != 0) {
    total_size += 1 + 1;
  }

  // int32 max_group_size = 5;
  if (this->max_group_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_group_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.ActionProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionProfile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionProfile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.ActionProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.ActionProfile)
    MergeFrom(*source);
  }
}

void ActionProfile::MergeFrom(const ActionProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.ActionProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_ids_.MergeFrom(from.table_ids_);
  if (from.has_preamble()) {
    mutable_preamble()->::p4::config::v1::Preamble::MergeFrom(from.preamble());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.with_selector() != 0) {
    set_with_selector(from.with_selector());
  }
  if (from.max_group_size() != 0) {
    set_max_group_size(from.max_group_size());
  }
}

void ActionProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.ActionProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionProfile::CopyFrom(const ActionProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.ActionProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionProfile::IsInitialized() const {
  return true;
}

void ActionProfile::Swap(ActionProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionProfile::InternalSwap(ActionProfile* other) {
  table_ids_.UnsafeArenaSwap(&other->table_ids_);
  std::swap(preamble_, other->preamble_);
  std::swap(size_, other->size_);
  std::swap(with_selector_, other->with_selector_);
  std::swap(max_group_size_, other->max_group_size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActionProfile::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActionProfile

// .p4.config.v1.Preamble preamble = 1;
bool ActionProfile::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
void ActionProfile::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
const ::p4::config::v1::Preamble& ActionProfile::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionProfile.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
::p4::config::v1::Preamble* ActionProfile::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ActionProfile.preamble)
  return preamble_;
}
::p4::config::v1::Preamble* ActionProfile::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.ActionProfile.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
void ActionProfile::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.ActionProfile.preamble)
}

// repeated uint32 table_ids = 2;
int ActionProfile::table_ids_size() const {
  return table_ids_.size();
}
void ActionProfile::clear_table_ids() {
  table_ids_.Clear();
}
::google::protobuf::uint32 ActionProfile::table_ids(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionProfile.table_ids)
  return table_ids_.Get(index);
}
void ActionProfile::set_table_ids(int index, ::google::protobuf::uint32 value) {
  table_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:p4.config.v1.ActionProfile.table_ids)
}
void ActionProfile::add_table_ids(::google::protobuf::uint32 value) {
  table_ids_.Add(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.ActionProfile.table_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ActionProfile::table_ids() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.ActionProfile.table_ids)
  return table_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ActionProfile::mutable_table_ids() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.ActionProfile.table_ids)
  return &table_ids_;
}

// bool with_selector = 3;
void ActionProfile::clear_with_selector() {
  with_selector_ = false;
}
bool ActionProfile::with_selector() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionProfile.with_selector)
  return with_selector_;
}
void ActionProfile::set_with_selector(bool value) {
  
  with_selector_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.ActionProfile.with_selector)
}

// int64 size = 4;
void ActionProfile::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ActionProfile::size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionProfile.size)
  return size_;
}
void ActionProfile::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.ActionProfile.size)
}

// int32 max_group_size = 5;
void ActionProfile::clear_max_group_size() {
  max_group_size_ = 0;
}
::google::protobuf::int32 ActionProfile::max_group_size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ActionProfile.max_group_size)
  return max_group_size_;
}
void ActionProfile::set_max_group_size(::google::protobuf::int32 value) {
  
  max_group_size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.ActionProfile.max_group_size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CounterSpec::kUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CounterSpec::CounterSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.CounterSpec)
}
CounterSpec::CounterSpec(const CounterSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unit_ = from.unit_;
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.CounterSpec)
}

void CounterSpec::SharedCtor() {
  unit_ = 0;
  _cached_size_ = 0;
}

CounterSpec::~CounterSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.CounterSpec)
  SharedDtor();
}

void CounterSpec::SharedDtor() {
}

void CounterSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CounterSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[13].descriptor;
}

const CounterSpec& CounterSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

CounterSpec* CounterSpec::New(::google::protobuf::Arena* arena) const {
  CounterSpec* n = new CounterSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CounterSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.CounterSpec)
  unit_ = 0;
}

bool CounterSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.CounterSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.CounterSpec.Unit unit = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_unit(static_cast< ::p4::config::v1::CounterSpec_Unit >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.CounterSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.CounterSpec)
  return false;
#undef DO_
}

void CounterSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.CounterSpec)
  // .p4.config.v1.CounterSpec.Unit unit = 1;
  if (this->unit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->unit(), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.CounterSpec)
}

::google::protobuf::uint8* CounterSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.CounterSpec)
  // .p4.config.v1.CounterSpec.Unit unit = 1;
  if (this->unit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->unit(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.CounterSpec)
  return target;
}

size_t CounterSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.CounterSpec)
  size_t total_size = 0;

  // .p4.config.v1.CounterSpec.Unit unit = 1;
  if (this->unit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->unit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CounterSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.CounterSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const CounterSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CounterSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.CounterSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.CounterSpec)
    MergeFrom(*source);
  }
}

void CounterSpec::MergeFrom(const CounterSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.CounterSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.unit() != 0) {
    set_unit(from.unit());
  }
}

void CounterSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.CounterSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CounterSpec::CopyFrom(const CounterSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.CounterSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CounterSpec::IsInitialized() const {
  return true;
}

void CounterSpec::Swap(CounterSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CounterSpec::InternalSwap(CounterSpec* other) {
  std::swap(unit_, other->unit_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CounterSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CounterSpec

// .p4.config.v1.CounterSpec.Unit unit = 1;
void CounterSpec::clear_unit() {
  unit_ = 0;
}
::p4::config::v1::CounterSpec_Unit CounterSpec::unit() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.CounterSpec.unit)
  return static_cast< ::p4::config::v1::CounterSpec_Unit >(unit_);
}
void CounterSpec::set_unit(::p4::config::v1::CounterSpec_Unit value) {
  
  unit_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.CounterSpec.unit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Counter::kPreambleFieldNumber;
const int Counter::kSpecFieldNumber;
const int Counter::kSizeFieldNumber;
const int Counter::kIndexTypeNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Counter::Counter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.Counter)
}
Counter::Counter(const Counter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    preamble_ = new ::p4::config::v1::Preamble(*from.preamble_);
  } else {
    preamble_ = NULL;
  }
  if (from.has_spec()) {
    spec_ = new ::p4::config::v1::CounterSpec(*from.spec_);
  } else {
    spec_ = NULL;
  }
  if (from.has_index_type_name()) {
    index_type_name_ = new ::p4::config::v1::P4NamedType(*from.index_type_name_);
  } else {
    index_type_name_ = NULL;
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.Counter)
}

void Counter::SharedCtor() {
  ::memset(&preamble_, 0, reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&preamble_) + sizeof(size_));
  _cached_size_ = 0;
}

Counter::~Counter() {
  // @@protoc_insertion_point(destructor:p4.config.v1.Counter)
  SharedDtor();
}

void Counter::SharedDtor() {
  if (this != internal_default_instance()) {
    delete preamble_;
  }
  if (this != internal_default_instance()) {
    delete spec_;
  }
  if (this != internal_default_instance()) {
    delete index_type_name_;
  }
}

void Counter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Counter::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[14].descriptor;
}

const Counter& Counter::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

Counter* Counter::New(::google::protobuf::Arena* arena) const {
  Counter* n = new Counter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Counter::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.Counter)
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) {
    delete preamble_;
  }
  preamble_ = NULL;
  if (GetArenaNoVirtual() == NULL && spec_ != NULL) {
    delete spec_;
  }
  spec_ = NULL;
  if (GetArenaNoVirtual() == NULL && index_type_name_ != NULL) {
    delete index_type_name_;
  }
  index_type_name_ = NULL;
  size_ = GOOGLE_LONGLONG(0);
}

bool Counter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.Counter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.Preamble preamble = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_preamble()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.CounterSpec spec = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4NamedType index_type_name = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_index_type_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.Counter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.Counter)
  return false;
#undef DO_
}

void Counter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.Counter)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->preamble_, output);
  }

  // .p4.config.v1.CounterSpec spec = 2;
  if (this->has_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->spec_, output);
  }

  // int64 size = 3;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->size(), output);
  }

  // .p4.config.v1.P4NamedType index_type_name = 4;
  if (this->has_index_type_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->index_type_name_, output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.Counter)
}

::google::protobuf::uint8* Counter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.Counter)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->preamble_, false, target);
  }

  // .p4.config.v1.CounterSpec spec = 2;
  if (this->has_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->spec_, false, target);
  }

  // int64 size = 3;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->size(), target);
  }

  // .p4.config.v1.P4NamedType index_type_name = 4;
  if (this->has_index_type_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->index_type_name_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.Counter)
  return target;
}

size_t Counter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.Counter)
  size_t total_size = 0;

  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->preamble_);
  }

  // .p4.config.v1.CounterSpec spec = 2;
  if (this->has_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spec_);
  }

  // .p4.config.v1.P4NamedType index_type_name = 4;
  if (this->has_index_type_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->index_type_name_);
  }

  // int64 size = 3;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Counter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.Counter)
  GOOGLE_DCHECK_NE(&from, this);
  const Counter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Counter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.Counter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.Counter)
    MergeFrom(*source);
  }
}

void Counter::MergeFrom(const Counter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.Counter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    mutable_preamble()->::p4::config::v1::Preamble::MergeFrom(from.preamble());
  }
  if (from.has_spec()) {
    mutable_spec()->::p4::config::v1::CounterSpec::MergeFrom(from.spec());
  }
  if (from.has_index_type_name()) {
    mutable_index_type_name()->::p4::config::v1::P4NamedType::MergeFrom(from.index_type_name());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void Counter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.Counter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Counter::CopyFrom(const Counter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.Counter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Counter::IsInitialized() const {
  return true;
}

void Counter::Swap(Counter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Counter::InternalSwap(Counter* other) {
  std::swap(preamble_, other->preamble_);
  std::swap(spec_, other->spec_);
  std::swap(index_type_name_, other->index_type_name_);
  std::swap(size_, other->size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Counter::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Counter

// .p4.config.v1.Preamble preamble = 1;
bool Counter::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
void Counter::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
const ::p4::config::v1::Preamble& Counter::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Counter.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
::p4::config::v1::Preamble* Counter::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Counter.preamble)
  return preamble_;
}
::p4::config::v1::Preamble* Counter::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Counter.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
void Counter::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Counter.preamble)
}

// .p4.config.v1.CounterSpec spec = 2;
bool Counter::has_spec() const {
  return this != internal_default_instance() && spec_ != NULL;
}
void Counter::clear_spec() {
  if (GetArenaNoVirtual() == NULL && spec_ != NULL) delete spec_;
  spec_ = NULL;
}
const ::p4::config::v1::CounterSpec& Counter::spec() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Counter.spec)
  return spec_ != NULL ? *spec_
                         : *::p4::config::v1::CounterSpec::internal_default_instance();
}
::p4::config::v1::CounterSpec* Counter::mutable_spec() {
  
  if (spec_ == NULL) {
    spec_ = new ::p4::config::v1::CounterSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Counter.spec)
  return spec_;
}
::p4::config::v1::CounterSpec* Counter::release_spec() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Counter.spec)
  
  ::p4::config::v1::CounterSpec* temp = spec_;
  spec_ = NULL;
  return temp;
}
void Counter::set_allocated_spec(::p4::config::v1::CounterSpec* spec) {
  delete spec_;
  spec_ = spec;
  if (spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Counter.spec)
}

// int64 size = 3;
void Counter::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Counter::size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Counter.size)
  return size_;
}
void Counter::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Counter.size)
}

// .p4.config.v1.P4NamedType index_type_name = 4;
bool Counter::has_index_type_name() const {
  return this != internal_default_instance() && index_type_name_ != NULL;
}
void Counter::clear_index_type_name() {
  if (GetArenaNoVirtual() == NULL && index_type_name_ != NULL) delete index_type_name_;
  index_type_name_ = NULL;
}
const ::p4::config::v1::P4NamedType& Counter::index_type_name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Counter.index_type_name)
  return index_type_name_ != NULL ? *index_type_name_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
::p4::config::v1::P4NamedType* Counter::mutable_index_type_name() {
  
  if (index_type_name_ == NULL) {
    index_type_name_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Counter.index_type_name)
  return index_type_name_;
}
::p4::config::v1::P4NamedType* Counter::release_index_type_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Counter.index_type_name)
  
  ::p4::config::v1::P4NamedType* temp = index_type_name_;
  index_type_name_ = NULL;
  return temp;
}
void Counter::set_allocated_index_type_name(::p4::config::v1::P4NamedType* index_type_name) {
  delete index_type_name_;
  index_type_name_ = index_type_name;
  if (index_type_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Counter.index_type_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DirectCounter::kPreambleFieldNumber;
const int DirectCounter::kSpecFieldNumber;
const int DirectCounter::kDirectTableIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DirectCounter::DirectCounter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.DirectCounter)
}
DirectCounter::DirectCounter(const DirectCounter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    preamble_ = new ::p4::config::v1::Preamble(*from.preamble_);
  } else {
    preamble_ = NULL;
  }
  if (from.has_spec()) {
    spec_ = new ::p4::config::v1::CounterSpec(*from.spec_);
  } else {
    spec_ = NULL;
  }
  direct_table_id_ = from.direct_table_id_;
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.DirectCounter)
}

void DirectCounter::SharedCtor() {
  ::memset(&preamble_, 0, reinterpret_cast<char*>(&direct_table_id_) -
    reinterpret_cast<char*>(&preamble_) + sizeof(direct_table_id_));
  _cached_size_ = 0;
}

DirectCounter::~DirectCounter() {
  // @@protoc_insertion_point(destructor:p4.config.v1.DirectCounter)
  SharedDtor();
}

void DirectCounter::SharedDtor() {
  if (this != internal_default_instance()) {
    delete preamble_;
  }
  if (this != internal_default_instance()) {
    delete spec_;
  }
}

void DirectCounter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DirectCounter::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[15].descriptor;
}

const DirectCounter& DirectCounter::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

DirectCounter* DirectCounter::New(::google::protobuf::Arena* arena) const {
  DirectCounter* n = new DirectCounter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DirectCounter::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.DirectCounter)
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) {
    delete preamble_;
  }
  preamble_ = NULL;
  if (GetArenaNoVirtual() == NULL && spec_ != NULL) {
    delete spec_;
  }
  spec_ = NULL;
  direct_table_id_ = 0u;
}

bool DirectCounter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.DirectCounter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.Preamble preamble = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_preamble()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.CounterSpec spec = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 direct_table_id = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &direct_table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.DirectCounter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.DirectCounter)
  return false;
#undef DO_
}

void DirectCounter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.DirectCounter)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->preamble_, output);
  }

  // .p4.config.v1.CounterSpec spec = 2;
  if (this->has_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->spec_, output);
  }

  // uint32 direct_table_id = 3;
  if (this->direct_table_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->direct_table_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.DirectCounter)
}

::google::protobuf::uint8* DirectCounter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.DirectCounter)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->preamble_, false, target);
  }

  // .p4.config.v1.CounterSpec spec = 2;
  if (this->has_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->spec_, false, target);
  }

  // uint32 direct_table_id = 3;
  if (this->direct_table_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->direct_table_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.DirectCounter)
  return target;
}

size_t DirectCounter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.DirectCounter)
  size_t total_size = 0;

  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->preamble_);
  }

  // .p4.config.v1.CounterSpec spec = 2;
  if (this->has_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spec_);
  }

  // uint32 direct_table_id = 3;
  if (this->direct_table_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->direct_table_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DirectCounter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.DirectCounter)
  GOOGLE_DCHECK_NE(&from, this);
  const DirectCounter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DirectCounter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.DirectCounter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.DirectCounter)
    MergeFrom(*source);
  }
}

void DirectCounter::MergeFrom(const DirectCounter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.DirectCounter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    mutable_preamble()->::p4::config::v1::Preamble::MergeFrom(from.preamble());
  }
  if (from.has_spec()) {
    mutable_spec()->::p4::config::v1::CounterSpec::MergeFrom(from.spec());
  }
  if (from.direct_table_id() != 0) {
    set_direct_table_id(from.direct_table_id());
  }
}

void DirectCounter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.DirectCounter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DirectCounter::CopyFrom(const DirectCounter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.DirectCounter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DirectCounter::IsInitialized() const {
  return true;
}

void DirectCounter::Swap(DirectCounter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DirectCounter::InternalSwap(DirectCounter* other) {
  std::swap(preamble_, other->preamble_);
  std::swap(spec_, other->spec_);
  std::swap(direct_table_id_, other->direct_table_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DirectCounter::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DirectCounter

// .p4.config.v1.Preamble preamble = 1;
bool DirectCounter::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
void DirectCounter::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
const ::p4::config::v1::Preamble& DirectCounter::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.DirectCounter.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
::p4::config::v1::Preamble* DirectCounter::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.DirectCounter.preamble)
  return preamble_;
}
::p4::config::v1::Preamble* DirectCounter::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.DirectCounter.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
void DirectCounter::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.DirectCounter.preamble)
}

// .p4.config.v1.CounterSpec spec = 2;
bool DirectCounter::has_spec() const {
  return this != internal_default_instance() && spec_ != NULL;
}
void DirectCounter::clear_spec() {
  if (GetArenaNoVirtual() == NULL && spec_ != NULL) delete spec_;
  spec_ = NULL;
}
const ::p4::config::v1::CounterSpec& DirectCounter::spec() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.DirectCounter.spec)
  return spec_ != NULL ? *spec_
                         : *::p4::config::v1::CounterSpec::internal_default_instance();
}
::p4::config::v1::CounterSpec* DirectCounter::mutable_spec() {
  
  if (spec_ == NULL) {
    spec_ = new ::p4::config::v1::CounterSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.DirectCounter.spec)
  return spec_;
}
::p4::config::v1::CounterSpec* DirectCounter::release_spec() {
  // @@protoc_insertion_point(field_release:p4.config.v1.DirectCounter.spec)
  
  ::p4::config::v1::CounterSpec* temp = spec_;
  spec_ = NULL;
  return temp;
}
void DirectCounter::set_allocated_spec(::p4::config::v1::CounterSpec* spec) {
  delete spec_;
  spec_ = spec;
  if (spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.DirectCounter.spec)
}

// uint32 direct_table_id = 3;
void DirectCounter::clear_direct_table_id() {
  direct_table_id_ = 0u;
}
::google::protobuf::uint32 DirectCounter::direct_table_id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.DirectCounter.direct_table_id)
  return direct_table_id_;
}
void DirectCounter::set_direct_table_id(::google::protobuf::uint32 value) {
  
  direct_table_id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.DirectCounter.direct_table_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeterSpec::kUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeterSpec::MeterSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.MeterSpec)
}
MeterSpec::MeterSpec(const MeterSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unit_ = from.unit_;
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.MeterSpec)
}

void MeterSpec::SharedCtor() {
  unit_ = 0;
  _cached_size_ = 0;
}

MeterSpec::~MeterSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.MeterSpec)
  SharedDtor();
}

void MeterSpec::SharedDtor() {
}

void MeterSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeterSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[16].descriptor;
}

const MeterSpec& MeterSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

MeterSpec* MeterSpec::New(::google::protobuf::Arena* arena) const {
  MeterSpec* n = new MeterSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MeterSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.MeterSpec)
  unit_ = 0;
}

bool MeterSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.MeterSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.MeterSpec.Unit unit = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_unit(static_cast< ::p4::config::v1::MeterSpec_Unit >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.MeterSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.MeterSpec)
  return false;
#undef DO_
}

void MeterSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.MeterSpec)
  // .p4.config.v1.MeterSpec.Unit unit = 1;
  if (this->unit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->unit(), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.MeterSpec)
}

::google::protobuf::uint8* MeterSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.MeterSpec)
  // .p4.config.v1.MeterSpec.Unit unit = 1;
  if (this->unit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->unit(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.MeterSpec)
  return target;
}

size_t MeterSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.MeterSpec)
  size_t total_size = 0;

  // .p4.config.v1.MeterSpec.Unit unit = 1;
  if (this->unit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->unit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeterSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.MeterSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const MeterSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeterSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.MeterSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.MeterSpec)
    MergeFrom(*source);
  }
}

void MeterSpec::MergeFrom(const MeterSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.MeterSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.unit() != 0) {
    set_unit(from.unit());
  }
}

void MeterSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.MeterSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeterSpec::CopyFrom(const MeterSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.MeterSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeterSpec::IsInitialized() const {
  return true;
}

void MeterSpec::Swap(MeterSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeterSpec::InternalSwap(MeterSpec* other) {
  std::swap(unit_, other->unit_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MeterSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[16];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MeterSpec

// .p4.config.v1.MeterSpec.Unit unit = 1;
void MeterSpec::clear_unit() {
  unit_ = 0;
}
::p4::config::v1::MeterSpec_Unit MeterSpec::unit() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.MeterSpec.unit)
  return static_cast< ::p4::config::v1::MeterSpec_Unit >(unit_);
}
void MeterSpec::set_unit(::p4::config::v1::MeterSpec_Unit value) {
  
  unit_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.MeterSpec.unit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Meter::kPreambleFieldNumber;
const int Meter::kSpecFieldNumber;
const int Meter::kSizeFieldNumber;
const int Meter::kIndexTypeNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Meter::Meter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.Meter)
}
Meter::Meter(const Meter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    preamble_ = new ::p4::config::v1::Preamble(*from.preamble_);
  } else {
    preamble_ = NULL;
  }
  if (from.has_spec()) {
    spec_ = new ::p4::config::v1::MeterSpec(*from.spec_);
  } else {
    spec_ = NULL;
  }
  if (from.has_index_type_name()) {
    index_type_name_ = new ::p4::config::v1::P4NamedType(*from.index_type_name_);
  } else {
    index_type_name_ = NULL;
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.Meter)
}

void Meter::SharedCtor() {
  ::memset(&preamble_, 0, reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&preamble_) + sizeof(size_));
  _cached_size_ = 0;
}

Meter::~Meter() {
  // @@protoc_insertion_point(destructor:p4.config.v1.Meter)
  SharedDtor();
}

void Meter::SharedDtor() {
  if (this != internal_default_instance()) {
    delete preamble_;
  }
  if (this != internal_default_instance()) {
    delete spec_;
  }
  if (this != internal_default_instance()) {
    delete index_type_name_;
  }
}

void Meter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Meter::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[17].descriptor;
}

const Meter& Meter::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

Meter* Meter::New(::google::protobuf::Arena* arena) const {
  Meter* n = new Meter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Meter::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.Meter)
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) {
    delete preamble_;
  }
  preamble_ = NULL;
  if (GetArenaNoVirtual() == NULL && spec_ != NULL) {
    delete spec_;
  }
  spec_ = NULL;
  if (GetArenaNoVirtual() == NULL && index_type_name_ != NULL) {
    delete index_type_name_;
  }
  index_type_name_ = NULL;
  size_ = GOOGLE_LONGLONG(0);
}

bool Meter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.Meter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.Preamble preamble = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_preamble()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.MeterSpec spec = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4NamedType index_type_name = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_index_type_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.Meter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.Meter)
  return false;
#undef DO_
}

void Meter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.Meter)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->preamble_, output);
  }

  // .p4.config.v1.MeterSpec spec = 2;
  if (this->has_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->spec_, output);
  }

  // int64 size = 3;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->size(), output);
  }

  // .p4.config.v1.P4NamedType index_type_name = 4;
  if (this->has_index_type_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->index_type_name_, output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.Meter)
}

::google::protobuf::uint8* Meter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.Meter)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->preamble_, false, target);
  }

  // .p4.config.v1.MeterSpec spec = 2;
  if (this->has_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->spec_, false, target);
  }

  // int64 size = 3;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->size(), target);
  }

  // .p4.config.v1.P4NamedType index_type_name = 4;
  if (this->has_index_type_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->index_type_name_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.Meter)
  return target;
}

size_t Meter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.Meter)
  size_t total_size = 0;

  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->preamble_);
  }

  // .p4.config.v1.MeterSpec spec = 2;
  if (this->has_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spec_);
  }

  // .p4.config.v1.P4NamedType index_type_name = 4;
  if (this->has_index_type_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->index_type_name_);
  }

  // int64 size = 3;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Meter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.Meter)
  GOOGLE_DCHECK_NE(&from, this);
  const Meter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Meter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.Meter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.Meter)
    MergeFrom(*source);
  }
}

void Meter::MergeFrom(const Meter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.Meter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    mutable_preamble()->::p4::config::v1::Preamble::MergeFrom(from.preamble());
  }
  if (from.has_spec()) {
    mutable_spec()->::p4::config::v1::MeterSpec::MergeFrom(from.spec());
  }
  if (from.has_index_type_name()) {
    mutable_index_type_name()->::p4::config::v1::P4NamedType::MergeFrom(from.index_type_name());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void Meter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.Meter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Meter::CopyFrom(const Meter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.Meter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Meter::IsInitialized() const {
  return true;
}

void Meter::Swap(Meter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Meter::InternalSwap(Meter* other) {
  std::swap(preamble_, other->preamble_);
  std::swap(spec_, other->spec_);
  std::swap(index_type_name_, other->index_type_name_);
  std::swap(size_, other->size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Meter::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[17];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Meter

// .p4.config.v1.Preamble preamble = 1;
bool Meter::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
void Meter::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
const ::p4::config::v1::Preamble& Meter::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Meter.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
::p4::config::v1::Preamble* Meter::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Meter.preamble)
  return preamble_;
}
::p4::config::v1::Preamble* Meter::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Meter.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
void Meter::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Meter.preamble)
}

// .p4.config.v1.MeterSpec spec = 2;
bool Meter::has_spec() const {
  return this != internal_default_instance() && spec_ != NULL;
}
void Meter::clear_spec() {
  if (GetArenaNoVirtual() == NULL && spec_ != NULL) delete spec_;
  spec_ = NULL;
}
const ::p4::config::v1::MeterSpec& Meter::spec() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Meter.spec)
  return spec_ != NULL ? *spec_
                         : *::p4::config::v1::MeterSpec::internal_default_instance();
}
::p4::config::v1::MeterSpec* Meter::mutable_spec() {
  
  if (spec_ == NULL) {
    spec_ = new ::p4::config::v1::MeterSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Meter.spec)
  return spec_;
}
::p4::config::v1::MeterSpec* Meter::release_spec() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Meter.spec)
  
  ::p4::config::v1::MeterSpec* temp = spec_;
  spec_ = NULL;
  return temp;
}
void Meter::set_allocated_spec(::p4::config::v1::MeterSpec* spec) {
  delete spec_;
  spec_ = spec;
  if (spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Meter.spec)
}

// int64 size = 3;
void Meter::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Meter::size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Meter.size)
  return size_;
}
void Meter::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Meter.size)
}

// .p4.config.v1.P4NamedType index_type_name = 4;
bool Meter::has_index_type_name() const {
  return this != internal_default_instance() && index_type_name_ != NULL;
}
void Meter::clear_index_type_name() {
  if (GetArenaNoVirtual() == NULL && index_type_name_ != NULL) delete index_type_name_;
  index_type_name_ = NULL;
}
const ::p4::config::v1::P4NamedType& Meter::index_type_name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Meter.index_type_name)
  return index_type_name_ != NULL ? *index_type_name_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
::p4::config::v1::P4NamedType* Meter::mutable_index_type_name() {
  
  if (index_type_name_ == NULL) {
    index_type_name_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Meter.index_type_name)
  return index_type_name_;
}
::p4::config::v1::P4NamedType* Meter::release_index_type_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Meter.index_type_name)
  
  ::p4::config::v1::P4NamedType* temp = index_type_name_;
  index_type_name_ = NULL;
  return temp;
}
void Meter::set_allocated_index_type_name(::p4::config::v1::P4NamedType* index_type_name) {
  delete index_type_name_;
  index_type_name_ = index_type_name;
  if (index_type_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Meter.index_type_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DirectMeter::kPreambleFieldNumber;
const int DirectMeter::kSpecFieldNumber;
const int DirectMeter::kDirectTableIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DirectMeter::DirectMeter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.DirectMeter)
}
DirectMeter::DirectMeter(const DirectMeter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    preamble_ = new ::p4::config::v1::Preamble(*from.preamble_);
  } else {
    preamble_ = NULL;
  }
  if (from.has_spec()) {
    spec_ = new ::p4::config::v1::MeterSpec(*from.spec_);
  } else {
    spec_ = NULL;
  }
  direct_table_id_ = from.direct_table_id_;
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.DirectMeter)
}

void DirectMeter::SharedCtor() {
  ::memset(&preamble_, 0, reinterpret_cast<char*>(&direct_table_id_) -
    reinterpret_cast<char*>(&preamble_) + sizeof(direct_table_id_));
  _cached_size_ = 0;
}

DirectMeter::~DirectMeter() {
  // @@protoc_insertion_point(destructor:p4.config.v1.DirectMeter)
  SharedDtor();
}

void DirectMeter::SharedDtor() {
  if (this != internal_default_instance()) {
    delete preamble_;
  }
  if (this != internal_default_instance()) {
    delete spec_;
  }
}

void DirectMeter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DirectMeter::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[18].descriptor;
}

const DirectMeter& DirectMeter::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

DirectMeter* DirectMeter::New(::google::protobuf::Arena* arena) const {
  DirectMeter* n = new DirectMeter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DirectMeter::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.DirectMeter)
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) {
    delete preamble_;
  }
  preamble_ = NULL;
  if (GetArenaNoVirtual() == NULL && spec_ != NULL) {
    delete spec_;
  }
  spec_ = NULL;
  direct_table_id_ = 0u;
}

bool DirectMeter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.DirectMeter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.Preamble preamble = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_preamble()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.MeterSpec spec = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 direct_table_id = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &direct_table_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.DirectMeter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.DirectMeter)
  return false;
#undef DO_
}

void DirectMeter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.DirectMeter)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->preamble_, output);
  }

  // .p4.config.v1.MeterSpec spec = 2;
  if (this->has_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->spec_, output);
  }

  // uint32 direct_table_id = 3;
  if (this->direct_table_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->direct_table_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.DirectMeter)
}

::google::protobuf::uint8* DirectMeter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.DirectMeter)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->preamble_, false, target);
  }

  // .p4.config.v1.MeterSpec spec = 2;
  if (this->has_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->spec_, false, target);
  }

  // uint32 direct_table_id = 3;
  if (this->direct_table_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->direct_table_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.DirectMeter)
  return target;
}

size_t DirectMeter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.DirectMeter)
  size_t total_size = 0;

  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->preamble_);
  }

  // .p4.config.v1.MeterSpec spec = 2;
  if (this->has_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spec_);
  }

  // uint32 direct_table_id = 3;
  if (this->direct_table_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->direct_table_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DirectMeter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.DirectMeter)
  GOOGLE_DCHECK_NE(&from, this);
  const DirectMeter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DirectMeter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.DirectMeter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.DirectMeter)
    MergeFrom(*source);
  }
}

void DirectMeter::MergeFrom(const DirectMeter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.DirectMeter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    mutable_preamble()->::p4::config::v1::Preamble::MergeFrom(from.preamble());
  }
  if (from.has_spec()) {
    mutable_spec()->::p4::config::v1::MeterSpec::MergeFrom(from.spec());
  }
  if (from.direct_table_id() != 0) {
    set_direct_table_id(from.direct_table_id());
  }
}

void DirectMeter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.DirectMeter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DirectMeter::CopyFrom(const DirectMeter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.DirectMeter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DirectMeter::IsInitialized() const {
  return true;
}

void DirectMeter::Swap(DirectMeter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DirectMeter::InternalSwap(DirectMeter* other) {
  std::swap(preamble_, other->preamble_);
  std::swap(spec_, other->spec_);
  std::swap(direct_table_id_, other->direct_table_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DirectMeter::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[18];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DirectMeter

// .p4.config.v1.Preamble preamble = 1;
bool DirectMeter::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
void DirectMeter::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
const ::p4::config::v1::Preamble& DirectMeter::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.DirectMeter.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
::p4::config::v1::Preamble* DirectMeter::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.DirectMeter.preamble)
  return preamble_;
}
::p4::config::v1::Preamble* DirectMeter::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.DirectMeter.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
void DirectMeter::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.DirectMeter.preamble)
}

// .p4.config.v1.MeterSpec spec = 2;
bool DirectMeter::has_spec() const {
  return this != internal_default_instance() && spec_ != NULL;
}
void DirectMeter::clear_spec() {
  if (GetArenaNoVirtual() == NULL && spec_ != NULL) delete spec_;
  spec_ = NULL;
}
const ::p4::config::v1::MeterSpec& DirectMeter::spec() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.DirectMeter.spec)
  return spec_ != NULL ? *spec_
                         : *::p4::config::v1::MeterSpec::internal_default_instance();
}
::p4::config::v1::MeterSpec* DirectMeter::mutable_spec() {
  
  if (spec_ == NULL) {
    spec_ = new ::p4::config::v1::MeterSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.DirectMeter.spec)
  return spec_;
}
::p4::config::v1::MeterSpec* DirectMeter::release_spec() {
  // @@protoc_insertion_point(field_release:p4.config.v1.DirectMeter.spec)
  
  ::p4::config::v1::MeterSpec* temp = spec_;
  spec_ = NULL;
  return temp;
}
void DirectMeter::set_allocated_spec(::p4::config::v1::MeterSpec* spec) {
  delete spec_;
  spec_ = spec;
  if (spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.DirectMeter.spec)
}

// uint32 direct_table_id = 3;
void DirectMeter::clear_direct_table_id() {
  direct_table_id_ = 0u;
}
::google::protobuf::uint32 DirectMeter::direct_table_id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.DirectMeter.direct_table_id)
  return direct_table_id_;
}
void DirectMeter::set_direct_table_id(::google::protobuf::uint32 value) {
  
  direct_table_id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.DirectMeter.direct_table_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControllerPacketMetadata_Metadata::kIdFieldNumber;
const int ControllerPacketMetadata_Metadata::kNameFieldNumber;
const int ControllerPacketMetadata_Metadata::kAnnotationsFieldNumber;
const int ControllerPacketMetadata_Metadata::kBitwidthFieldNumber;
const int ControllerPacketMetadata_Metadata::kTypeNameFieldNumber;
const int ControllerPacketMetadata_Metadata::kStructuredAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControllerPacketMetadata_Metadata::ControllerPacketMetadata_Metadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.ControllerPacketMetadata.Metadata)
}
ControllerPacketMetadata_Metadata::ControllerPacketMetadata_Metadata(const ControllerPacketMetadata_Metadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      annotations_(from.annotations_),
      structured_annotations_(from.structured_annotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type_name()) {
    type_name_ = new ::p4::config::v1::P4NamedType(*from.type_name_);
  } else {
    type_name_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&bitwidth_) -
    reinterpret_cast<char*>(&id_) + sizeof(bitwidth_));
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.ControllerPacketMetadata.Metadata)
}

void ControllerPacketMetadata_Metadata::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_name_, 0, reinterpret_cast<char*>(&bitwidth_) -
    reinterpret_cast<char*>(&type_name_) + sizeof(bitwidth_));
  _cached_size_ = 0;
}

ControllerPacketMetadata_Metadata::~ControllerPacketMetadata_Metadata() {
  // @@protoc_insertion_point(destructor:p4.config.v1.ControllerPacketMetadata.Metadata)
  SharedDtor();
}

void ControllerPacketMetadata_Metadata::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete type_name_;
  }
}

void ControllerPacketMetadata_Metadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControllerPacketMetadata_Metadata::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[19].descriptor;
}

const ControllerPacketMetadata_Metadata& ControllerPacketMetadata_Metadata::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

ControllerPacketMetadata_Metadata* ControllerPacketMetadata_Metadata::New(::google::protobuf::Arena* arena) const {
  ControllerPacketMetadata_Metadata* n = new ControllerPacketMetadata_Metadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ControllerPacketMetadata_Metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.ControllerPacketMetadata.Metadata)
  annotations_.Clear();
  structured_annotations_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && type_name_ != NULL) {
    delete type_name_;
  }
  type_name_ = NULL;
  ::memset(&id_, 0, reinterpret_cast<char*>(&bitwidth_) -
    reinterpret_cast<char*>(&id_) + sizeof(bitwidth_));
}

bool ControllerPacketMetadata_Metadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.ControllerPacketMetadata.Metadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.ControllerPacketMetadata.Metadata.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string annotations = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_annotations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotations(this->annotations_size() - 1).data(),
            this->annotations(this->annotations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.ControllerPacketMetadata.Metadata.annotations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bitwidth = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bitwidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4NamedType type_name = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 6;
      case 6: {
        if (tag == 50u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_structured_annotations()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.ControllerPacketMetadata.Metadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.ControllerPacketMetadata.Metadata)
  return false;
#undef DO_
}

void ControllerPacketMetadata_Metadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.ControllerPacketMetadata.Metadata)
  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.ControllerPacketMetadata.Metadata.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated string annotations = 3;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.ControllerPacketMetadata.Metadata.annotations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->annotations(i), output);
  }

  // int32 bitwidth = 4;
  if (this->bitwidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bitwidth(), output);
  }

  // .p4.config.v1.P4NamedType type_name = 5;
  if (this->has_type_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->type_name_, output);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 6;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->structured_annotations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.ControllerPacketMetadata.Metadata)
}

::google::protobuf::uint8* ControllerPacketMetadata_Metadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.ControllerPacketMetadata.Metadata)
  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.ControllerPacketMetadata.Metadata.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated string annotations = 3;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.ControllerPacketMetadata.Metadata.annotations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->annotations(i), target);
  }

  // int32 bitwidth = 4;
  if (this->bitwidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bitwidth(), target);
  }

  // .p4.config.v1.P4NamedType type_name = 5;
  if (this->has_type_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->type_name_, false, target);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 6;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->structured_annotations(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.ControllerPacketMetadata.Metadata)
  return target;
}

size_t ControllerPacketMetadata_Metadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.ControllerPacketMetadata.Metadata)
  size_t total_size = 0;

  // repeated string annotations = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  for (int i = 0; i < this->annotations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->annotations(i));
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 6;
  {
    unsigned int count = this->structured_annotations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->structured_annotations(i));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .p4.config.v1.P4NamedType type_name = 5;
  if (this->has_type_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_name_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // int32 bitwidth = 4;
  if (this->bitwidth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bitwidth());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControllerPacketMetadata_Metadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.ControllerPacketMetadata.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  const ControllerPacketMetadata_Metadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControllerPacketMetadata_Metadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.ControllerPacketMetadata.Metadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.ControllerPacketMetadata.Metadata)
    MergeFrom(*source);
  }
}

void ControllerPacketMetadata_Metadata::MergeFrom(const ControllerPacketMetadata_Metadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.ControllerPacketMetadata.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotations_.MergeFrom(from.annotations_);
  structured_annotations_.MergeFrom(from.structured_annotations_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type_name()) {
    mutable_type_name()->::p4::config::v1::P4NamedType::MergeFrom(from.type_name());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.bitwidth() != 0) {
    set_bitwidth(from.bitwidth());
  }
}

void ControllerPacketMetadata_Metadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.ControllerPacketMetadata.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControllerPacketMetadata_Metadata::CopyFrom(const ControllerPacketMetadata_Metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.ControllerPacketMetadata.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControllerPacketMetadata_Metadata::IsInitialized() const {
  return true;
}

void ControllerPacketMetadata_Metadata::Swap(ControllerPacketMetadata_Metadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControllerPacketMetadata_Metadata::InternalSwap(ControllerPacketMetadata_Metadata* other) {
  annotations_.UnsafeArenaSwap(&other->annotations_);
  structured_annotations_.UnsafeArenaSwap(&other->structured_annotations_);
  name_.Swap(&other->name_);
  std::swap(type_name_, other->type_name_);
  std::swap(id_, other->id_);
  std::swap(bitwidth_, other->bitwidth_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ControllerPacketMetadata_Metadata::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[19];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ControllerPacketMetadata_Metadata

// uint32 id = 1;
void ControllerPacketMetadata_Metadata::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 ControllerPacketMetadata_Metadata::id() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ControllerPacketMetadata.Metadata.id)
  return id_;
}
void ControllerPacketMetadata_Metadata::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.ControllerPacketMetadata.Metadata.id)
}

// string name = 2;
void ControllerPacketMetadata_Metadata::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ControllerPacketMetadata_Metadata::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ControllerPacketMetadata.Metadata.name)
  return name_.GetNoArena();
}
void ControllerPacketMetadata_Metadata::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.ControllerPacketMetadata.Metadata.name)
}
#if LANG_CXX11
void ControllerPacketMetadata_Metadata::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.ControllerPacketMetadata.Metadata.name)
}
#endif
void ControllerPacketMetadata_Metadata::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.ControllerPacketMetadata.Metadata.name)
}
void ControllerPacketMetadata_Metadata::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.ControllerPacketMetadata.Metadata.name)
}
::std::string* ControllerPacketMetadata_Metadata::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ControllerPacketMetadata.Metadata.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ControllerPacketMetadata_Metadata::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.ControllerPacketMetadata.Metadata.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ControllerPacketMetadata_Metadata::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.ControllerPacketMetadata.Metadata.name)
}

// repeated string annotations = 3;
int ControllerPacketMetadata_Metadata::annotations_size() const {
  return annotations_.size();
}
void ControllerPacketMetadata_Metadata::clear_annotations() {
  annotations_.Clear();
}
const ::std::string& ControllerPacketMetadata_Metadata::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
  return annotations_.Get(index);
}
::std::string* ControllerPacketMetadata_Metadata::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
  return annotations_.Mutable(index);
}
void ControllerPacketMetadata_Metadata::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
  annotations_.Mutable(index)->assign(value);
}
void ControllerPacketMetadata_Metadata::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
}
void ControllerPacketMetadata_Metadata::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
}
::std::string* ControllerPacketMetadata_Metadata::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
  return annotations_.Add();
}
void ControllerPacketMetadata_Metadata::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
}
void ControllerPacketMetadata_Metadata::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
}
void ControllerPacketMetadata_Metadata::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ControllerPacketMetadata_Metadata::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
  return annotations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ControllerPacketMetadata_Metadata::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.ControllerPacketMetadata.Metadata.annotations)
  return &annotations_;
}

// int32 bitwidth = 4;
void ControllerPacketMetadata_Metadata::clear_bitwidth() {
  bitwidth_ = 0;
}
::google::protobuf::int32 ControllerPacketMetadata_Metadata::bitwidth() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ControllerPacketMetadata.Metadata.bitwidth)
  return bitwidth_;
}
void ControllerPacketMetadata_Metadata::set_bitwidth(::google::protobuf::int32 value) {
  
  bitwidth_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.ControllerPacketMetadata.Metadata.bitwidth)
}

// .p4.config.v1.P4NamedType type_name = 5;
bool ControllerPacketMetadata_Metadata::has_type_name() const {
  return this != internal_default_instance() && type_name_ != NULL;
}
void ControllerPacketMetadata_Metadata::clear_type_name() {
  if (GetArenaNoVirtual() == NULL && type_name_ != NULL) delete type_name_;
  type_name_ = NULL;
}
const ::p4::config::v1::P4NamedType& ControllerPacketMetadata_Metadata::type_name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ControllerPacketMetadata.Metadata.type_name)
  return type_name_ != NULL ? *type_name_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
::p4::config::v1::P4NamedType* ControllerPacketMetadata_Metadata::mutable_type_name() {
  
  if (type_name_ == NULL) {
    type_name_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ControllerPacketMetadata.Metadata.type_name)
  return type_name_;
}
::p4::config::v1::P4NamedType* ControllerPacketMetadata_Metadata::release_type_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.ControllerPacketMetadata.Metadata.type_name)
  
  ::p4::config::v1::P4NamedType* temp = type_name_;
  type_name_ = NULL;
  return temp;
}
void ControllerPacketMetadata_Metadata::set_allocated_type_name(::p4::config::v1::P4NamedType* type_name) {
  delete type_name_;
  type_name_ = type_name;
  if (type_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.ControllerPacketMetadata.Metadata.type_name)
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 6;
int ControllerPacketMetadata_Metadata::structured_annotations_size() const {
  return structured_annotations_.size();
}
void ControllerPacketMetadata_Metadata::clear_structured_annotations() {
  structured_annotations_.Clear();
}
const ::p4::config::v1::StructuredAnnotation& ControllerPacketMetadata_Metadata::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ControllerPacketMetadata.Metadata.structured_annotations)
  return structured_annotations_.Get(index);
}
::p4::config::v1::StructuredAnnotation* ControllerPacketMetadata_Metadata::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ControllerPacketMetadata.Metadata.structured_annotations)
  return structured_annotations_.Mutable(index);
}
::p4::config::v1::StructuredAnnotation* ControllerPacketMetadata_Metadata::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.ControllerPacketMetadata.Metadata.structured_annotations)
  return structured_annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
ControllerPacketMetadata_Metadata::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.ControllerPacketMetadata.Metadata.structured_annotations)
  return &structured_annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
ControllerPacketMetadata_Metadata::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.ControllerPacketMetadata.Metadata.structured_annotations)
  return structured_annotations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControllerPacketMetadata::kPreambleFieldNumber;
const int ControllerPacketMetadata::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControllerPacketMetadata::ControllerPacketMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.ControllerPacketMetadata)
}
ControllerPacketMetadata::ControllerPacketMetadata(const ControllerPacketMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      metadata_(from.metadata_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    preamble_ = new ::p4::config::v1::Preamble(*from.preamble_);
  } else {
    preamble_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.ControllerPacketMetadata)
}

void ControllerPacketMetadata::SharedCtor() {
  preamble_ = NULL;
  _cached_size_ = 0;
}

ControllerPacketMetadata::~ControllerPacketMetadata() {
  // @@protoc_insertion_point(destructor:p4.config.v1.ControllerPacketMetadata)
  SharedDtor();
}

void ControllerPacketMetadata::SharedDtor() {
  if (this != internal_default_instance()) {
    delete preamble_;
  }
}

void ControllerPacketMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControllerPacketMetadata::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[20].descriptor;
}

const ControllerPacketMetadata& ControllerPacketMetadata::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

ControllerPacketMetadata* ControllerPacketMetadata::New(::google::protobuf::Arena* arena) const {
  ControllerPacketMetadata* n = new ControllerPacketMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ControllerPacketMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.ControllerPacketMetadata)
  metadata_.Clear();
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) {
    delete preamble_;
  }
  preamble_ = NULL;
}

bool ControllerPacketMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.ControllerPacketMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.Preamble preamble = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_preamble()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.ControllerPacketMetadata.Metadata metadata = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_metadata()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.ControllerPacketMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.ControllerPacketMetadata)
  return false;
#undef DO_
}

void ControllerPacketMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.ControllerPacketMetadata)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->preamble_, output);
  }

  // repeated .p4.config.v1.ControllerPacketMetadata.Metadata metadata = 2;
  for (unsigned int i = 0, n = this->metadata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->metadata(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.ControllerPacketMetadata)
}

::google::protobuf::uint8* ControllerPacketMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.ControllerPacketMetadata)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->preamble_, false, target);
  }

  // repeated .p4.config.v1.ControllerPacketMetadata.Metadata metadata = 2;
  for (unsigned int i = 0, n = this->metadata_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->metadata(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.ControllerPacketMetadata)
  return target;
}

size_t ControllerPacketMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.ControllerPacketMetadata)
  size_t total_size = 0;

  // repeated .p4.config.v1.ControllerPacketMetadata.Metadata metadata = 2;
  {
    unsigned int count = this->metadata_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->metadata(i));
    }
  }

  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->preamble_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControllerPacketMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.ControllerPacketMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const ControllerPacketMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControllerPacketMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.ControllerPacketMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.ControllerPacketMetadata)
    MergeFrom(*source);
  }
}

void ControllerPacketMetadata::MergeFrom(const ControllerPacketMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.ControllerPacketMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  if (from.has_preamble()) {
    mutable_preamble()->::p4::config::v1::Preamble::MergeFrom(from.preamble());
  }
}

void ControllerPacketMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.ControllerPacketMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControllerPacketMetadata::CopyFrom(const ControllerPacketMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.ControllerPacketMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControllerPacketMetadata::IsInitialized() const {
  return true;
}

void ControllerPacketMetadata::Swap(ControllerPacketMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControllerPacketMetadata::InternalSwap(ControllerPacketMetadata* other) {
  metadata_.UnsafeArenaSwap(&other->metadata_);
  std::swap(preamble_, other->preamble_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ControllerPacketMetadata::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[20];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ControllerPacketMetadata

// .p4.config.v1.Preamble preamble = 1;
bool ControllerPacketMetadata::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
void ControllerPacketMetadata::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
const ::p4::config::v1::Preamble& ControllerPacketMetadata::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ControllerPacketMetadata.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
::p4::config::v1::Preamble* ControllerPacketMetadata::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ControllerPacketMetadata.preamble)
  return preamble_;
}
::p4::config::v1::Preamble* ControllerPacketMetadata::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.ControllerPacketMetadata.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
void ControllerPacketMetadata::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.ControllerPacketMetadata.preamble)
}

// repeated .p4.config.v1.ControllerPacketMetadata.Metadata metadata = 2;
int ControllerPacketMetadata::metadata_size() const {
  return metadata_.size();
}
void ControllerPacketMetadata::clear_metadata() {
  metadata_.Clear();
}
const ::p4::config::v1::ControllerPacketMetadata_Metadata& ControllerPacketMetadata::metadata(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ControllerPacketMetadata.metadata)
  return metadata_.Get(index);
}
::p4::config::v1::ControllerPacketMetadata_Metadata* ControllerPacketMetadata::mutable_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ControllerPacketMetadata.metadata)
  return metadata_.Mutable(index);
}
::p4::config::v1::ControllerPacketMetadata_Metadata* ControllerPacketMetadata::add_metadata() {
  // @@protoc_insertion_point(field_add:p4.config.v1.ControllerPacketMetadata.metadata)
  return metadata_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::ControllerPacketMetadata_Metadata >*
ControllerPacketMetadata::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.ControllerPacketMetadata.metadata)
  return &metadata_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::ControllerPacketMetadata_Metadata >&
ControllerPacketMetadata::metadata() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.ControllerPacketMetadata.metadata)
  return metadata_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueSet::kPreambleFieldNumber;
const int ValueSet::kMatchFieldNumber;
const int ValueSet::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueSet::ValueSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.ValueSet)
}
ValueSet::ValueSet(const ValueSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      match_(from.match_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    preamble_ = new ::p4::config::v1::Preamble(*from.preamble_);
  } else {
    preamble_ = NULL;
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.ValueSet)
}

void ValueSet::SharedCtor() {
  ::memset(&preamble_, 0, reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&preamble_) + sizeof(size_));
  _cached_size_ = 0;
}

ValueSet::~ValueSet() {
  // @@protoc_insertion_point(destructor:p4.config.v1.ValueSet)
  SharedDtor();
}

void ValueSet::SharedDtor() {
  if (this != internal_default_instance()) {
    delete preamble_;
  }
}

void ValueSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValueSet::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[21].descriptor;
}

const ValueSet& ValueSet::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

ValueSet* ValueSet::New(::google::protobuf::Arena* arena) const {
  ValueSet* n = new ValueSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValueSet::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.ValueSet)
  match_.Clear();
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) {
    delete preamble_;
  }
  preamble_ = NULL;
  size_ = 0;
}

bool ValueSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.ValueSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.Preamble preamble = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_preamble()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.MatchField match = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_match()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // int32 size = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.ValueSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.ValueSet)
  return false;
#undef DO_
}

void ValueSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.ValueSet)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->preamble_, output);
  }

  // repeated .p4.config.v1.MatchField match = 2;
  for (unsigned int i = 0, n = this->match_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->match(i), output);
  }

  // int32 size = 3;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->size(), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.ValueSet)
}

::google::protobuf::uint8* ValueSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.ValueSet)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->preamble_, false, target);
  }

  // repeated .p4.config.v1.MatchField match = 2;
  for (unsigned int i = 0, n = this->match_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->match(i), false, target);
  }

  // int32 size = 3;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.ValueSet)
  return target;
}

size_t ValueSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.ValueSet)
  size_t total_size = 0;

  // repeated .p4.config.v1.MatchField match = 2;
  {
    unsigned int count = this->match_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->match(i));
    }
  }

  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->preamble_);
  }

  // int32 size = 3;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValueSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.ValueSet)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.ValueSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.ValueSet)
    MergeFrom(*source);
  }
}

void ValueSet::MergeFrom(const ValueSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.ValueSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  match_.MergeFrom(from.match_);
  if (from.has_preamble()) {
    mutable_preamble()->::p4::config::v1::Preamble::MergeFrom(from.preamble());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void ValueSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.ValueSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueSet::CopyFrom(const ValueSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.ValueSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueSet::IsInitialized() const {
  return true;
}

void ValueSet::Swap(ValueSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueSet::InternalSwap(ValueSet* other) {
  match_.UnsafeArenaSwap(&other->match_);
  std::swap(preamble_, other->preamble_);
  std::swap(size_, other->size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValueSet::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[21];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ValueSet

// .p4.config.v1.Preamble preamble = 1;
bool ValueSet::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
void ValueSet::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
const ::p4::config::v1::Preamble& ValueSet::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ValueSet.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
::p4::config::v1::Preamble* ValueSet::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ValueSet.preamble)
  return preamble_;
}
::p4::config::v1::Preamble* ValueSet::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.ValueSet.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
void ValueSet::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.ValueSet.preamble)
}

// repeated .p4.config.v1.MatchField match = 2;
int ValueSet::match_size() const {
  return match_.size();
}
void ValueSet::clear_match() {
  match_.Clear();
}
const ::p4::config::v1::MatchField& ValueSet::match(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ValueSet.match)
  return match_.Get(index);
}
::p4::config::v1::MatchField* ValueSet::mutable_match(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ValueSet.match)
  return match_.Mutable(index);
}
::p4::config::v1::MatchField* ValueSet::add_match() {
  // @@protoc_insertion_point(field_add:p4.config.v1.ValueSet.match)
  return match_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::MatchField >*
ValueSet::mutable_match() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.ValueSet.match)
  return &match_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::MatchField >&
ValueSet::match() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.ValueSet.match)
  return match_;
}

// int32 size = 3;
void ValueSet::clear_size() {
  size_ = 0;
}
::google::protobuf::int32 ValueSet::size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ValueSet.size)
  return size_;
}
void ValueSet::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.ValueSet.size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Register::kPreambleFieldNumber;
const int Register::kTypeSpecFieldNumber;
const int Register::kSizeFieldNumber;
const int Register::kIndexTypeNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Register::Register()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.Register)
}
Register::Register(const Register& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    preamble_ = new ::p4::config::v1::Preamble(*from.preamble_);
  } else {
    preamble_ = NULL;
  }
  if (from.has_type_spec()) {
    type_spec_ = new ::p4::config::v1::P4DataTypeSpec(*from.type_spec_);
  } else {
    type_spec_ = NULL;
  }
  if (from.has_index_type_name()) {
    index_type_name_ = new ::p4::config::v1::P4NamedType(*from.index_type_name_);
  } else {
    index_type_name_ = NULL;
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.Register)
}

void Register::SharedCtor() {
  ::memset(&preamble_, 0, reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&preamble_) + sizeof(size_));
  _cached_size_ = 0;
}

Register::~Register() {
  // @@protoc_insertion_point(destructor:p4.config.v1.Register)
  SharedDtor();
}

void Register::SharedDtor() {
  if (this != internal_default_instance()) {
    delete preamble_;
  }
  if (this != internal_default_instance()) {
    delete type_spec_;
  }
  if (this != internal_default_instance()) {
    delete index_type_name_;
  }
}

void Register::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Register::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[22].descriptor;
}

const Register& Register::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

Register* Register::New(::google::protobuf::Arena* arena) const {
  Register* n = new Register;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Register::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.Register)
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) {
    delete preamble_;
  }
  preamble_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_spec_ != NULL) {
    delete type_spec_;
  }
  type_spec_ = NULL;
  if (GetArenaNoVirtual() == NULL && index_type_name_ != NULL) {
    delete index_type_name_;
  }
  index_type_name_ = NULL;
  size_ = 0;
}

bool Register::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.Register)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.Preamble preamble = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_preamble()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4DataTypeSpec type_spec = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 size = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4NamedType index_type_name = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_index_type_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.Register)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.Register)
  return false;
#undef DO_
}

void Register::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.Register)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->preamble_, output);
  }

  // .p4.config.v1.P4DataTypeSpec type_spec = 2;
  if (this->has_type_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->type_spec_, output);
  }

  // int32 size = 3;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->size(), output);
  }

  // .p4.config.v1.P4NamedType index_type_name = 4;
  if (this->has_index_type_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->index_type_name_, output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.Register)
}

::google::protobuf::uint8* Register::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.Register)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->preamble_, false, target);
  }

  // .p4.config.v1.P4DataTypeSpec type_spec = 2;
  if (this->has_type_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->type_spec_, false, target);
  }

  // int32 size = 3;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->size(), target);
  }

  // .p4.config.v1.P4NamedType index_type_name = 4;
  if (this->has_index_type_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->index_type_name_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.Register)
  return target;
}

size_t Register::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.Register)
  size_t total_size = 0;

  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->preamble_);
  }

  // .p4.config.v1.P4DataTypeSpec type_spec = 2;
  if (this->has_type_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_spec_);
  }

  // .p4.config.v1.P4NamedType index_type_name = 4;
  if (this->has_index_type_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->index_type_name_);
  }

  // int32 size = 3;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Register::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.Register)
  GOOGLE_DCHECK_NE(&from, this);
  const Register* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Register>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.Register)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.Register)
    MergeFrom(*source);
  }
}

void Register::MergeFrom(const Register& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.Register)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    mutable_preamble()->::p4::config::v1::Preamble::MergeFrom(from.preamble());
  }
  if (from.has_type_spec()) {
    mutable_type_spec()->::p4::config::v1::P4DataTypeSpec::MergeFrom(from.type_spec());
  }
  if (from.has_index_type_name()) {
    mutable_index_type_name()->::p4::config::v1::P4NamedType::MergeFrom(from.index_type_name());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void Register::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.Register)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Register::CopyFrom(const Register& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.Register)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Register::IsInitialized() const {
  return true;
}

void Register::Swap(Register* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Register::InternalSwap(Register* other) {
  std::swap(preamble_, other->preamble_);
  std::swap(type_spec_, other->type_spec_);
  std::swap(index_type_name_, other->index_type_name_);
  std::swap(size_, other->size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Register::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[22];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Register

// .p4.config.v1.Preamble preamble = 1;
bool Register::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
void Register::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
const ::p4::config::v1::Preamble& Register::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Register.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
::p4::config::v1::Preamble* Register::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Register.preamble)
  return preamble_;
}
::p4::config::v1::Preamble* Register::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Register.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
void Register::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Register.preamble)
}

// .p4.config.v1.P4DataTypeSpec type_spec = 2;
bool Register::has_type_spec() const {
  return this != internal_default_instance() && type_spec_ != NULL;
}
void Register::clear_type_spec() {
  if (GetArenaNoVirtual() == NULL && type_spec_ != NULL) delete type_spec_;
  type_spec_ = NULL;
}
const ::p4::config::v1::P4DataTypeSpec& Register::type_spec() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Register.type_spec)
  return type_spec_ != NULL ? *type_spec_
                         : *::p4::config::v1::P4DataTypeSpec::internal_default_instance();
}
::p4::config::v1::P4DataTypeSpec* Register::mutable_type_spec() {
  
  if (type_spec_ == NULL) {
    type_spec_ = new ::p4::config::v1::P4DataTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Register.type_spec)
  return type_spec_;
}
::p4::config::v1::P4DataTypeSpec* Register::release_type_spec() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Register.type_spec)
  
  ::p4::config::v1::P4DataTypeSpec* temp = type_spec_;
  type_spec_ = NULL;
  return temp;
}
void Register::set_allocated_type_spec(::p4::config::v1::P4DataTypeSpec* type_spec) {
  delete type_spec_;
  type_spec_ = type_spec;
  if (type_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Register.type_spec)
}

// int32 size = 3;
void Register::clear_size() {
  size_ = 0;
}
::google::protobuf::int32 Register::size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Register.size)
  return size_;
}
void Register::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Register.size)
}

// .p4.config.v1.P4NamedType index_type_name = 4;
bool Register::has_index_type_name() const {
  return this != internal_default_instance() && index_type_name_ != NULL;
}
void Register::clear_index_type_name() {
  if (GetArenaNoVirtual() == NULL && index_type_name_ != NULL) delete index_type_name_;
  index_type_name_ = NULL;
}
const ::p4::config::v1::P4NamedType& Register::index_type_name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Register.index_type_name)
  return index_type_name_ != NULL ? *index_type_name_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
::p4::config::v1::P4NamedType* Register::mutable_index_type_name() {
  
  if (index_type_name_ == NULL) {
    index_type_name_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Register.index_type_name)
  return index_type_name_;
}
::p4::config::v1::P4NamedType* Register::release_index_type_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Register.index_type_name)
  
  ::p4::config::v1::P4NamedType* temp = index_type_name_;
  index_type_name_ = NULL;
  return temp;
}
void Register::set_allocated_index_type_name(::p4::config::v1::P4NamedType* index_type_name) {
  delete index_type_name_;
  index_type_name_ = index_type_name;
  if (index_type_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Register.index_type_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Digest::kPreambleFieldNumber;
const int Digest::kTypeSpecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Digest::Digest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.Digest)
}
Digest::Digest(const Digest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    preamble_ = new ::p4::config::v1::Preamble(*from.preamble_);
  } else {
    preamble_ = NULL;
  }
  if (from.has_type_spec()) {
    type_spec_ = new ::p4::config::v1::P4DataTypeSpec(*from.type_spec_);
  } else {
    type_spec_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.Digest)
}

void Digest::SharedCtor() {
  ::memset(&preamble_, 0, reinterpret_cast<char*>(&type_spec_) -
    reinterpret_cast<char*>(&preamble_) + sizeof(type_spec_));
  _cached_size_ = 0;
}

Digest::~Digest() {
  // @@protoc_insertion_point(destructor:p4.config.v1.Digest)
  SharedDtor();
}

void Digest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete preamble_;
  }
  if (this != internal_default_instance()) {
    delete type_spec_;
  }
}

void Digest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Digest::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[23].descriptor;
}

const Digest& Digest::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::InitDefaults();
  return *internal_default_instance();
}

Digest* Digest::New(::google::protobuf::Arena* arena) const {
  Digest* n = new Digest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Digest::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.Digest)
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) {
    delete preamble_;
  }
  preamble_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_spec_ != NULL) {
    delete type_spec_;
  }
  type_spec_ = NULL;
}

bool Digest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.Digest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.Preamble preamble = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_preamble()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4DataTypeSpec type_spec = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.Digest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.Digest)
  return false;
#undef DO_
}

void Digest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.Digest)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->preamble_, output);
  }

  // .p4.config.v1.P4DataTypeSpec type_spec = 2;
  if (this->has_type_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->type_spec_, output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.Digest)
}

::google::protobuf::uint8* Digest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.Digest)
  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->preamble_, false, target);
  }

  // .p4.config.v1.P4DataTypeSpec type_spec = 2;
  if (this->has_type_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->type_spec_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.Digest)
  return target;
}

size_t Digest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.Digest)
  size_t total_size = 0;

  // .p4.config.v1.Preamble preamble = 1;
  if (this->has_preamble()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->preamble_);
  }

  // .p4.config.v1.P4DataTypeSpec type_spec = 2;
  if (this->has_type_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_spec_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Digest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.Digest)
  GOOGLE_DCHECK_NE(&from, this);
  const Digest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Digest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.Digest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.Digest)
    MergeFrom(*source);
  }
}

void Digest::MergeFrom(const Digest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.Digest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preamble()) {
    mutable_preamble()->::p4::config::v1::Preamble::MergeFrom(from.preamble());
  }
  if (from.has_type_spec()) {
    mutable_type_spec()->::p4::config::v1::P4DataTypeSpec::MergeFrom(from.type_spec());
  }
}

void Digest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.Digest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Digest::CopyFrom(const Digest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.Digest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Digest::IsInitialized() const {
  return true;
}

void Digest::Swap(Digest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Digest::InternalSwap(Digest* other) {
  std::swap(preamble_, other->preamble_);
  std::swap(type_spec_, other->type_spec_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Digest::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4info_2eproto::file_level_metadata[23];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Digest

// .p4.config.v1.Preamble preamble = 1;
bool Digest::has_preamble() const {
  return this != internal_default_instance() && preamble_ != NULL;
}
void Digest::clear_preamble() {
  if (GetArenaNoVirtual() == NULL && preamble_ != NULL) delete preamble_;
  preamble_ = NULL;
}
const ::p4::config::v1::Preamble& Digest::preamble() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Digest.preamble)
  return preamble_ != NULL ? *preamble_
                         : *::p4::config::v1::Preamble::internal_default_instance();
}
::p4::config::v1::Preamble* Digest::mutable_preamble() {
  
  if (preamble_ == NULL) {
    preamble_ = new ::p4::config::v1::Preamble;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Digest.preamble)
  return preamble_;
}
::p4::config::v1::Preamble* Digest::release_preamble() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Digest.preamble)
  
  ::p4::config::v1::Preamble* temp = preamble_;
  preamble_ = NULL;
  return temp;
}
void Digest::set_allocated_preamble(::p4::config::v1::Preamble* preamble) {
  delete preamble_;
  preamble_ = preamble;
  if (preamble) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Digest.preamble)
}

// .p4.config.v1.P4DataTypeSpec type_spec = 2;
bool Digest::has_type_spec() const {
  return this != internal_default_instance() && type_spec_ != NULL;
}
void Digest::clear_type_spec() {
  if (GetArenaNoVirtual() == NULL && type_spec_ != NULL) delete type_spec_;
  type_spec_ = NULL;
}
const ::p4::config::v1::P4DataTypeSpec& Digest::type_spec() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Digest.type_spec)
  return type_spec_ != NULL ? *type_spec_
                         : *::p4::config::v1::P4DataTypeSpec::internal_default_instance();
}
::p4::config::v1::P4DataTypeSpec* Digest::mutable_type_spec() {
  
  if (type_spec_ == NULL) {
    type_spec_ = new ::p4::config::v1::P4DataTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Digest.type_spec)
  return type_spec_;
}
::p4::config::v1::P4DataTypeSpec* Digest::release_type_spec() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Digest.type_spec)
  
  ::p4::config::v1::P4DataTypeSpec* temp = type_spec_;
  type_spec_ = NULL;
  return temp;
}
void Digest::set_allocated_type_spec(::p4::config::v1::P4DataTypeSpec* type_spec) {
  delete type_spec_;
  type_spec_ = type_spec;
  if (type_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Digest.type_spec)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace config
}  // namespace p4

// @@protoc_insertion_point(global_scope)
