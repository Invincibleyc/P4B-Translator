// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: p4/config/v1/p4types.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "p4/config/v1/p4types.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace p4 {
namespace config {
namespace v1 {
class P4TypeInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4TypeInfo> {
} _P4TypeInfo_default_instance_;
class P4DataTypeSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4DataTypeSpec> {
  public:
  const ::p4::config::v1::P4BitstringLikeTypeSpec* bitstring_;
  const ::p4::config::v1::P4BoolType* bool__;
  const ::p4::config::v1::P4TupleTypeSpec* tuple_;
  const ::p4::config::v1::P4NamedType* struct__;
  const ::p4::config::v1::P4NamedType* header_;
  const ::p4::config::v1::P4NamedType* header_union_;
  const ::p4::config::v1::P4HeaderStackTypeSpec* header_stack_;
  const ::p4::config::v1::P4HeaderUnionStackTypeSpec* header_union_stack_;
  const ::p4::config::v1::P4NamedType* enum__;
  const ::p4::config::v1::P4ErrorType* error_;
  const ::p4::config::v1::P4NamedType* serializable_enum_;
  const ::p4::config::v1::P4NamedType* new_type_;
} _P4DataTypeSpec_default_instance_;
class P4NamedTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4NamedType> {
} _P4NamedType_default_instance_;
class P4BoolTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4BoolType> {
} _P4BoolType_default_instance_;
class P4ErrorTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4ErrorType> {
} _P4ErrorType_default_instance_;
class P4BitstringLikeTypeSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4BitstringLikeTypeSpec> {
  public:
  const ::p4::config::v1::P4BitTypeSpec* bit_;
  const ::p4::config::v1::P4IntTypeSpec* int__;
  const ::p4::config::v1::P4VarbitTypeSpec* varbit_;
} _P4BitstringLikeTypeSpec_default_instance_;
class P4BitTypeSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4BitTypeSpec> {
} _P4BitTypeSpec_default_instance_;
class P4IntTypeSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4IntTypeSpec> {
} _P4IntTypeSpec_default_instance_;
class P4VarbitTypeSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4VarbitTypeSpec> {
} _P4VarbitTypeSpec_default_instance_;
class P4TupleTypeSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4TupleTypeSpec> {
} _P4TupleTypeSpec_default_instance_;
class P4StructTypeSpec_MemberDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4StructTypeSpec_Member> {
} _P4StructTypeSpec_Member_default_instance_;
class P4StructTypeSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4StructTypeSpec> {
} _P4StructTypeSpec_default_instance_;
class P4HeaderTypeSpec_MemberDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4HeaderTypeSpec_Member> {
} _P4HeaderTypeSpec_Member_default_instance_;
class P4HeaderTypeSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4HeaderTypeSpec> {
} _P4HeaderTypeSpec_default_instance_;
class P4HeaderUnionTypeSpec_MemberDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4HeaderUnionTypeSpec_Member> {
} _P4HeaderUnionTypeSpec_Member_default_instance_;
class P4HeaderUnionTypeSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4HeaderUnionTypeSpec> {
} _P4HeaderUnionTypeSpec_default_instance_;
class P4HeaderStackTypeSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4HeaderStackTypeSpec> {
} _P4HeaderStackTypeSpec_default_instance_;
class P4HeaderUnionStackTypeSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4HeaderUnionStackTypeSpec> {
} _P4HeaderUnionStackTypeSpec_default_instance_;
class KeyValuePairDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<KeyValuePair> {
} _KeyValuePair_default_instance_;
class KeyValuePairListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<KeyValuePairList> {
} _KeyValuePairList_default_instance_;
class ExpressionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Expression> {
  public:
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  ::google::protobuf::int64 int64_value_;
  bool bool_value_;
} _Expression_default_instance_;
class ExpressionListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ExpressionList> {
} _ExpressionList_default_instance_;
class StructuredAnnotationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StructuredAnnotation> {
  public:
  const ::p4::config::v1::ExpressionList* expression_list_;
  const ::p4::config::v1::KeyValuePairList* kv_pair_list_;
} _StructuredAnnotation_default_instance_;
class P4EnumTypeSpec_MemberDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4EnumTypeSpec_Member> {
} _P4EnumTypeSpec_Member_default_instance_;
class P4EnumTypeSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4EnumTypeSpec> {
} _P4EnumTypeSpec_default_instance_;
class P4SerializableEnumTypeSpec_MemberDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4SerializableEnumTypeSpec_Member> {
} _P4SerializableEnumTypeSpec_Member_default_instance_;
class P4SerializableEnumTypeSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4SerializableEnumTypeSpec> {
} _P4SerializableEnumTypeSpec_default_instance_;
class P4ErrorTypeSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4ErrorTypeSpec> {
} _P4ErrorTypeSpec_default_instance_;
class P4NewTypeTranslation_SdnStringDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4NewTypeTranslation_SdnString> {
} _P4NewTypeTranslation_SdnString_default_instance_;
class P4NewTypeTranslationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4NewTypeTranslation> {
  public:
  ::google::protobuf::int32 sdn_bitwidth_;
  const ::p4::config::v1::P4NewTypeTranslation_SdnString* sdn_string_;
} _P4NewTypeTranslation_default_instance_;
class P4NewTypeSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<P4NewTypeSpec> {
  public:
  const ::p4::config::v1::P4DataTypeSpec* original_type_;
  const ::p4::config::v1::P4NewTypeTranslation* translated_type_;
} _P4NewTypeSpec_default_instance_;

namespace protobuf_p4_2fconfig_2fv1_2fp4types_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[37];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4TypeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4TypeInfo, structs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4TypeInfo, headers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4TypeInfo, header_unions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4TypeInfo, enums_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4TypeInfo, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4TypeInfo, serializable_enums_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4TypeInfo, new_types_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4DataTypeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4DataTypeSpec, _oneof_case_[0]),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4DataTypeSpec_default_instance_), bitstring_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4DataTypeSpec_default_instance_), bool__),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4DataTypeSpec_default_instance_), tuple_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4DataTypeSpec_default_instance_), struct__),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4DataTypeSpec_default_instance_), header_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4DataTypeSpec_default_instance_), header_union_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4DataTypeSpec_default_instance_), header_stack_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4DataTypeSpec_default_instance_), header_union_stack_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4DataTypeSpec_default_instance_), enum__),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4DataTypeSpec_default_instance_), error_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4DataTypeSpec_default_instance_), serializable_enum_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4DataTypeSpec_default_instance_), new_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4DataTypeSpec, type_spec_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4NamedType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4NamedType, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4BoolType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4ErrorType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4BitstringLikeTypeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4BitstringLikeTypeSpec, _oneof_case_[0]),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4BitstringLikeTypeSpec_default_instance_), bit_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4BitstringLikeTypeSpec_default_instance_), int__),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4BitstringLikeTypeSpec_default_instance_), varbit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4BitstringLikeTypeSpec, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4BitstringLikeTypeSpec, type_spec_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4BitTypeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4BitTypeSpec, bitwidth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4IntTypeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4IntTypeSpec, bitwidth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4VarbitTypeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4VarbitTypeSpec, max_bitwidth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4TupleTypeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4TupleTypeSpec, members_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4StructTypeSpec_Member, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4StructTypeSpec_Member, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4StructTypeSpec_Member, type_spec_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4StructTypeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4StructTypeSpec, members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4StructTypeSpec, annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderTypeSpec_Member, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderTypeSpec_Member, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderTypeSpec_Member, type_spec_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderTypeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderTypeSpec, members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderTypeSpec, annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderUnionTypeSpec_Member, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderUnionTypeSpec_Member, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderUnionTypeSpec_Member, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderUnionTypeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderUnionTypeSpec, members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderUnionTypeSpec, annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderStackTypeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderStackTypeSpec, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderStackTypeSpec, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderUnionStackTypeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderUnionStackTypeSpec, header_union_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4HeaderUnionStackTypeSpec, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValuePair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValuePair, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValuePair, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValuePairList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValuePairList, kv_pairs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Expression, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Expression, _oneof_case_[0]),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Expression_default_instance_), string_value_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Expression_default_instance_), int64_value_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Expression_default_instance_), bool_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Expression, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExpressionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExpressionList, expressions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredAnnotation, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredAnnotation, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredAnnotation, name_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_StructuredAnnotation_default_instance_), expression_list_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_StructuredAnnotation_default_instance_), kv_pair_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StructuredAnnotation, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4EnumTypeSpec_Member, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4EnumTypeSpec_Member, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4EnumTypeSpec_Member, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4EnumTypeSpec_Member, structured_annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4EnumTypeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4EnumTypeSpec, members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4EnumTypeSpec, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4EnumTypeSpec, structured_annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4SerializableEnumTypeSpec_Member, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4SerializableEnumTypeSpec_Member, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4SerializableEnumTypeSpec_Member, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4SerializableEnumTypeSpec_Member, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4SerializableEnumTypeSpec_Member, structured_annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4SerializableEnumTypeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4SerializableEnumTypeSpec, underlying_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4SerializableEnumTypeSpec, members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4SerializableEnumTypeSpec, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4SerializableEnumTypeSpec, structured_annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4ErrorTypeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4ErrorTypeSpec, members_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4NewTypeTranslation_SdnString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4NewTypeTranslation, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4NewTypeTranslation, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4NewTypeTranslation, uri_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4NewTypeTranslation_default_instance_), sdn_bitwidth_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4NewTypeTranslation_default_instance_), sdn_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4NewTypeTranslation, sdn_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4NewTypeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4NewTypeSpec, _oneof_case_[0]),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4NewTypeSpec_default_instance_), original_type_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_P4NewTypeSpec_default_instance_), translated_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4NewTypeSpec, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4NewTypeSpec, structured_annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(P4NewTypeSpec, representation_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(P4TypeInfo)},
  { 11, -1, sizeof(P4DataTypeSpec)},
  { 28, -1, sizeof(P4NamedType)},
  { 33, -1, sizeof(P4BoolType)},
  { 37, -1, sizeof(P4ErrorType)},
  { 41, -1, sizeof(P4BitstringLikeTypeSpec)},
  { 50, -1, sizeof(P4BitTypeSpec)},
  { 55, -1, sizeof(P4IntTypeSpec)},
  { 60, -1, sizeof(P4VarbitTypeSpec)},
  { 65, -1, sizeof(P4TupleTypeSpec)},
  { 70, -1, sizeof(P4StructTypeSpec_Member)},
  { 76, -1, sizeof(P4StructTypeSpec)},
  { 82, -1, sizeof(P4HeaderTypeSpec_Member)},
  { 88, -1, sizeof(P4HeaderTypeSpec)},
  { 94, -1, sizeof(P4HeaderUnionTypeSpec_Member)},
  { 100, -1, sizeof(P4HeaderUnionTypeSpec)},
  { 106, -1, sizeof(P4HeaderStackTypeSpec)},
  { 112, -1, sizeof(P4HeaderUnionStackTypeSpec)},
  { 118, -1, sizeof(KeyValuePair)},
  { 124, -1, sizeof(KeyValuePairList)},
  { 129, -1, sizeof(Expression)},
  { 137, -1, sizeof(ExpressionList)},
  { 142, -1, sizeof(StructuredAnnotation)},
  { 150, -1, sizeof(P4EnumTypeSpec_Member)},
  { 157, -1, sizeof(P4EnumTypeSpec)},
  { 164, -1, sizeof(P4SerializableEnumTypeSpec_Member)},
  { 172, -1, sizeof(P4SerializableEnumTypeSpec)},
  { 180, -1, sizeof(P4ErrorTypeSpec)},
  { 185, -1, sizeof(P4NewTypeTranslation_SdnString)},
  { 189, -1, sizeof(P4NewTypeTranslation)},
  { 197, -1, sizeof(P4NewTypeSpec)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4TypeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4DataTypeSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4NamedType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4BoolType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4ErrorType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4BitstringLikeTypeSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4BitTypeSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4IntTypeSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4VarbitTypeSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4TupleTypeSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4StructTypeSpec_Member_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4StructTypeSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4HeaderTypeSpec_Member_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4HeaderTypeSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4HeaderUnionTypeSpec_Member_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4HeaderUnionTypeSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4HeaderStackTypeSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4HeaderUnionStackTypeSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_KeyValuePair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_KeyValuePairList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Expression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExpressionList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StructuredAnnotation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4EnumTypeSpec_Member_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4EnumTypeSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4SerializableEnumTypeSpec_Member_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4SerializableEnumTypeSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4ErrorTypeSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4NewTypeTranslation_SdnString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4NewTypeTranslation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_P4NewTypeSpec_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "p4/config/v1/p4types.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 37);
  const ::google::protobuf::Descriptor* P4TypeInfo_StructsEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[0].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        P4TypeInfo_StructsEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::p4::config::v1::P4StructTypeSpec,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                P4TypeInfo_StructsEntry_descriptor));
  const ::google::protobuf::Descriptor* P4TypeInfo_HeadersEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[1].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        P4TypeInfo_HeadersEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::p4::config::v1::P4HeaderTypeSpec,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                P4TypeInfo_HeadersEntry_descriptor));
  const ::google::protobuf::Descriptor* P4TypeInfo_HeaderUnionsEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[2].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        P4TypeInfo_HeaderUnionsEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::p4::config::v1::P4HeaderUnionTypeSpec,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                P4TypeInfo_HeaderUnionsEntry_descriptor));
  const ::google::protobuf::Descriptor* P4TypeInfo_EnumsEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[3].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        P4TypeInfo_EnumsEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::p4::config::v1::P4EnumTypeSpec,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                P4TypeInfo_EnumsEntry_descriptor));
  const ::google::protobuf::Descriptor* P4TypeInfo_SerializableEnumsEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[4].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        P4TypeInfo_SerializableEnumsEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::p4::config::v1::P4SerializableEnumTypeSpec,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                P4TypeInfo_SerializableEnumsEntry_descriptor));
  const ::google::protobuf::Descriptor* P4TypeInfo_NewTypesEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[5].descriptor;
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        P4TypeInfo_NewTypesEntry_descriptor,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::p4::config::v1::P4NewTypeSpec,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                P4TypeInfo_NewTypesEntry_descriptor));
}

}  // namespace

void TableStruct::Shutdown() {
  _P4TypeInfo_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _P4DataTypeSpec_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _P4NamedType_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _P4BoolType_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _P4ErrorType_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _P4BitstringLikeTypeSpec_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _P4BitTypeSpec_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _P4IntTypeSpec_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _P4VarbitTypeSpec_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _P4TupleTypeSpec_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _P4StructTypeSpec_Member_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _P4StructTypeSpec_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _P4HeaderTypeSpec_Member_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _P4HeaderTypeSpec_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _P4HeaderUnionTypeSpec_Member_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _P4HeaderUnionTypeSpec_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _P4HeaderStackTypeSpec_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _P4HeaderUnionStackTypeSpec_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _KeyValuePair_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _KeyValuePairList_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _Expression_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _ExpressionList_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _StructuredAnnotation_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _P4EnumTypeSpec_Member_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _P4EnumTypeSpec_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _P4SerializableEnumTypeSpec_Member_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _P4SerializableEnumTypeSpec_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _P4ErrorTypeSpec_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _P4NewTypeTranslation_SdnString_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _P4NewTypeTranslation_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _P4NewTypeSpec_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _P4TypeInfo_default_instance_.DefaultConstruct();
  _P4DataTypeSpec_default_instance_.DefaultConstruct();
  _P4NamedType_default_instance_.DefaultConstruct();
  _P4BoolType_default_instance_.DefaultConstruct();
  _P4ErrorType_default_instance_.DefaultConstruct();
  _P4BitstringLikeTypeSpec_default_instance_.DefaultConstruct();
  _P4BitTypeSpec_default_instance_.DefaultConstruct();
  _P4IntTypeSpec_default_instance_.DefaultConstruct();
  _P4VarbitTypeSpec_default_instance_.DefaultConstruct();
  _P4TupleTypeSpec_default_instance_.DefaultConstruct();
  _P4StructTypeSpec_Member_default_instance_.DefaultConstruct();
  _P4StructTypeSpec_default_instance_.DefaultConstruct();
  _P4HeaderTypeSpec_Member_default_instance_.DefaultConstruct();
  _P4HeaderTypeSpec_default_instance_.DefaultConstruct();
  _P4HeaderUnionTypeSpec_Member_default_instance_.DefaultConstruct();
  _P4HeaderUnionTypeSpec_default_instance_.DefaultConstruct();
  _P4HeaderStackTypeSpec_default_instance_.DefaultConstruct();
  _P4HeaderUnionStackTypeSpec_default_instance_.DefaultConstruct();
  _KeyValuePair_default_instance_.DefaultConstruct();
  _KeyValuePairList_default_instance_.DefaultConstruct();
  _Expression_default_instance_.DefaultConstruct();
  _ExpressionList_default_instance_.DefaultConstruct();
  _StructuredAnnotation_default_instance_.DefaultConstruct();
  _P4EnumTypeSpec_Member_default_instance_.DefaultConstruct();
  _P4EnumTypeSpec_default_instance_.DefaultConstruct();
  _P4SerializableEnumTypeSpec_Member_default_instance_.DefaultConstruct();
  _P4SerializableEnumTypeSpec_default_instance_.DefaultConstruct();
  _P4ErrorTypeSpec_default_instance_.DefaultConstruct();
  _P4NewTypeTranslation_SdnString_default_instance_.DefaultConstruct();
  _P4NewTypeTranslation_default_instance_.DefaultConstruct();
  _P4NewTypeSpec_default_instance_.DefaultConstruct();
  _P4TypeInfo_default_instance_.get_mutable()->error_ = const_cast< ::p4::config::v1::P4ErrorTypeSpec*>(
      ::p4::config::v1::P4ErrorTypeSpec::internal_default_instance());
  _P4DataTypeSpec_default_instance_.bitstring_ = const_cast< ::p4::config::v1::P4BitstringLikeTypeSpec*>(
      ::p4::config::v1::P4BitstringLikeTypeSpec::internal_default_instance());
  _P4DataTypeSpec_default_instance_.bool__ = const_cast< ::p4::config::v1::P4BoolType*>(
      ::p4::config::v1::P4BoolType::internal_default_instance());
  _P4DataTypeSpec_default_instance_.tuple_ = const_cast< ::p4::config::v1::P4TupleTypeSpec*>(
      ::p4::config::v1::P4TupleTypeSpec::internal_default_instance());
  _P4DataTypeSpec_default_instance_.struct__ = const_cast< ::p4::config::v1::P4NamedType*>(
      ::p4::config::v1::P4NamedType::internal_default_instance());
  _P4DataTypeSpec_default_instance_.header_ = const_cast< ::p4::config::v1::P4NamedType*>(
      ::p4::config::v1::P4NamedType::internal_default_instance());
  _P4DataTypeSpec_default_instance_.header_union_ = const_cast< ::p4::config::v1::P4NamedType*>(
      ::p4::config::v1::P4NamedType::internal_default_instance());
  _P4DataTypeSpec_default_instance_.header_stack_ = const_cast< ::p4::config::v1::P4HeaderStackTypeSpec*>(
      ::p4::config::v1::P4HeaderStackTypeSpec::internal_default_instance());
  _P4DataTypeSpec_default_instance_.header_union_stack_ = const_cast< ::p4::config::v1::P4HeaderUnionStackTypeSpec*>(
      ::p4::config::v1::P4HeaderUnionStackTypeSpec::internal_default_instance());
  _P4DataTypeSpec_default_instance_.enum__ = const_cast< ::p4::config::v1::P4NamedType*>(
      ::p4::config::v1::P4NamedType::internal_default_instance());
  _P4DataTypeSpec_default_instance_.error_ = const_cast< ::p4::config::v1::P4ErrorType*>(
      ::p4::config::v1::P4ErrorType::internal_default_instance());
  _P4DataTypeSpec_default_instance_.serializable_enum_ = const_cast< ::p4::config::v1::P4NamedType*>(
      ::p4::config::v1::P4NamedType::internal_default_instance());
  _P4DataTypeSpec_default_instance_.new_type_ = const_cast< ::p4::config::v1::P4NamedType*>(
      ::p4::config::v1::P4NamedType::internal_default_instance());
  _P4BitstringLikeTypeSpec_default_instance_.bit_ = const_cast< ::p4::config::v1::P4BitTypeSpec*>(
      ::p4::config::v1::P4BitTypeSpec::internal_default_instance());
  _P4BitstringLikeTypeSpec_default_instance_.int__ = const_cast< ::p4::config::v1::P4IntTypeSpec*>(
      ::p4::config::v1::P4IntTypeSpec::internal_default_instance());
  _P4BitstringLikeTypeSpec_default_instance_.varbit_ = const_cast< ::p4::config::v1::P4VarbitTypeSpec*>(
      ::p4::config::v1::P4VarbitTypeSpec::internal_default_instance());
  _P4StructTypeSpec_Member_default_instance_.get_mutable()->type_spec_ = const_cast< ::p4::config::v1::P4DataTypeSpec*>(
      ::p4::config::v1::P4DataTypeSpec::internal_default_instance());
  _P4HeaderTypeSpec_Member_default_instance_.get_mutable()->type_spec_ = const_cast< ::p4::config::v1::P4BitstringLikeTypeSpec*>(
      ::p4::config::v1::P4BitstringLikeTypeSpec::internal_default_instance());
  _P4HeaderUnionTypeSpec_Member_default_instance_.get_mutable()->header_ = const_cast< ::p4::config::v1::P4NamedType*>(
      ::p4::config::v1::P4NamedType::internal_default_instance());
  _P4HeaderStackTypeSpec_default_instance_.get_mutable()->header_ = const_cast< ::p4::config::v1::P4NamedType*>(
      ::p4::config::v1::P4NamedType::internal_default_instance());
  _P4HeaderUnionStackTypeSpec_default_instance_.get_mutable()->header_union_ = const_cast< ::p4::config::v1::P4NamedType*>(
      ::p4::config::v1::P4NamedType::internal_default_instance());
  _KeyValuePair_default_instance_.get_mutable()->value_ = const_cast< ::p4::config::v1::Expression*>(
      ::p4::config::v1::Expression::internal_default_instance());
  _Expression_default_instance_.string_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _Expression_default_instance_.int64_value_ = GOOGLE_LONGLONG(0);
  _Expression_default_instance_.bool_value_ = false;
  _StructuredAnnotation_default_instance_.expression_list_ = const_cast< ::p4::config::v1::ExpressionList*>(
      ::p4::config::v1::ExpressionList::internal_default_instance());
  _StructuredAnnotation_default_instance_.kv_pair_list_ = const_cast< ::p4::config::v1::KeyValuePairList*>(
      ::p4::config::v1::KeyValuePairList::internal_default_instance());
  _P4SerializableEnumTypeSpec_default_instance_.get_mutable()->underlying_type_ = const_cast< ::p4::config::v1::P4BitTypeSpec*>(
      ::p4::config::v1::P4BitTypeSpec::internal_default_instance());
  _P4NewTypeTranslation_default_instance_.sdn_bitwidth_ = 0;
  _P4NewTypeTranslation_default_instance_.sdn_string_ = const_cast< ::p4::config::v1::P4NewTypeTranslation_SdnString*>(
      ::p4::config::v1::P4NewTypeTranslation_SdnString::internal_default_instance());
  _P4NewTypeSpec_default_instance_.original_type_ = const_cast< ::p4::config::v1::P4DataTypeSpec*>(
      ::p4::config::v1::P4DataTypeSpec::internal_default_instance());
  _P4NewTypeSpec_default_instance_.translated_type_ = const_cast< ::p4::config::v1::P4NewTypeTranslation*>(
      ::p4::config::v1::P4NewTypeTranslation::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\032p4/config/v1/p4types.proto\022\014p4.config."
      "v1\"\241\007\n\nP4TypeInfo\0226\n\007structs\030\001 \003(\0132%.p4."
      "config.v1.P4TypeInfo.StructsEntry\0226\n\007hea"
      "ders\030\002 \003(\0132%.p4.config.v1.P4TypeInfo.Hea"
      "dersEntry\022A\n\rheader_unions\030\003 \003(\0132*.p4.co"
      "nfig.v1.P4TypeInfo.HeaderUnionsEntry\0222\n\005"
      "enums\030\004 \003(\0132#.p4.config.v1.P4TypeInfo.En"
      "umsEntry\022,\n\005error\030\005 \001(\0132\035.p4.config.v1.P"
      "4ErrorTypeSpec\022K\n\022serializable_enums\030\006 \003"
      "(\0132/.p4.config.v1.P4TypeInfo.Serializabl"
      "eEnumsEntry\0229\n\tnew_types\030\007 \003(\0132&.p4.conf"
      "ig.v1.P4TypeInfo.NewTypesEntry\032N\n\014Struct"
      "sEntry\022\013\n\003key\030\001 \001(\t\022-\n\005value\030\002 \001(\0132\036.p4."
      "config.v1.P4StructTypeSpec:\0028\001\032N\n\014Header"
      "sEntry\022\013\n\003key\030\001 \001(\t\022-\n\005value\030\002 \001(\0132\036.p4."
      "config.v1.P4HeaderTypeSpec:\0028\001\032X\n\021Header"
      "UnionsEntry\022\013\n\003key\030\001 \001(\t\0222\n\005value\030\002 \001(\0132"
      "#.p4.config.v1.P4HeaderUnionTypeSpec:\0028\001"
      "\032J\n\nEnumsEntry\022\013\n\003key\030\001 \001(\t\022+\n\005value\030\002 \001"
      "(\0132\034.p4.config.v1.P4EnumTypeSpec:\0028\001\032b\n\026"
      "SerializableEnumsEntry\022\013\n\003key\030\001 \001(\t\0227\n\005v"
      "alue\030\002 \001(\0132(.p4.config.v1.P4Serializable"
      "EnumTypeSpec:\0028\001\032L\n\rNewTypesEntry\022\013\n\003key"
      "\030\001 \001(\t\022*\n\005value\030\002 \001(\0132\033.p4.config.v1.P4N"
      "ewTypeSpec:\0028\001\"\203\005\n\016P4DataTypeSpec\022:\n\tbit"
      "string\030\001 \001(\0132%.p4.config.v1.P4BitstringL"
      "ikeTypeSpecH\000\022(\n\004bool\030\002 \001(\0132\030.p4.config."
      "v1.P4BoolTypeH\000\022.\n\005tuple\030\003 \001(\0132\035.p4.conf"
      "ig.v1.P4TupleTypeSpecH\000\022+\n\006struct\030\004 \001(\0132"
      "\031.p4.config.v1.P4NamedTypeH\000\022+\n\006header\030\005"
      " \001(\0132\031.p4.config.v1.P4NamedTypeH\000\0221\n\014hea"
      "der_union\030\006 \001(\0132\031.p4.config.v1.P4NamedTy"
      "peH\000\022;\n\014header_stack\030\007 \001(\0132#.p4.config.v"
      "1.P4HeaderStackTypeSpecH\000\022F\n\022header_unio"
      "n_stack\030\010 \001(\0132(.p4.config.v1.P4HeaderUni"
      "onStackTypeSpecH\000\022)\n\004enum\030\t \001(\0132\031.p4.con"
      "fig.v1.P4NamedTypeH\000\022*\n\005error\030\n \001(\0132\031.p4"
      ".config.v1.P4ErrorTypeH\000\0226\n\021serializable"
      "_enum\030\013 \001(\0132\031.p4.config.v1.P4NamedTypeH\000"
      "\022-\n\010new_type\030\014 \001(\0132\031.p4.config.v1.P4Name"
      "dTypeH\000B\013\n\ttype_spec\"\033\n\013P4NamedType\022\014\n\004n"
      "ame\030\001 \001(\t\"\014\n\nP4BoolType\"\r\n\013P4ErrorType\"\305"
      "\001\n\027P4BitstringLikeTypeSpec\022*\n\003bit\030\001 \001(\0132"
      "\033.p4.config.v1.P4BitTypeSpecH\000\022*\n\003int\030\002 "
      "\001(\0132\033.p4.config.v1.P4IntTypeSpecH\000\0220\n\006va"
      "rbit\030\003 \001(\0132\036.p4.config.v1.P4VarbitTypeSp"
      "ecH\000\022\023\n\013annotations\030\004 \003(\tB\013\n\ttype_spec\"!"
      "\n\rP4BitTypeSpec\022\020\n\010bitwidth\030\001 \001(\005\"!\n\rP4I"
      "ntTypeSpec\022\020\n\010bitwidth\030\001 \001(\005\"(\n\020P4Varbit"
      "TypeSpec\022\024\n\014max_bitwidth\030\001 \001(\005\"@\n\017P4Tupl"
      "eTypeSpec\022-\n\007members\030\001 \003(\0132\034.p4.config.v"
      "1.P4DataTypeSpec\"\250\001\n\020P4StructTypeSpec\0226\n"
      "\007members\030\001 \003(\0132%.p4.config.v1.P4StructTy"
      "peSpec.Member\022\023\n\013annotations\030\002 \003(\t\032G\n\006Me"
      "mber\022\014\n\004name\030\001 \001(\t\022/\n\ttype_spec\030\002 \001(\0132\034."
      "p4.config.v1.P4DataTypeSpec\"\261\001\n\020P4Header"
      "TypeSpec\0226\n\007members\030\001 \003(\0132%.p4.config.v1"
      ".P4HeaderTypeSpec.Member\022\023\n\013annotations\030"
      "\002 \003(\t\032P\n\006Member\022\014\n\004name\030\001 \001(\t\0228\n\ttype_sp"
      "ec\030\002 \001(\0132%.p4.config.v1.P4BitstringLikeT"
      "ypeSpec\"\254\001\n\025P4HeaderUnionTypeSpec\022;\n\007mem"
      "bers\030\001 \003(\0132*.p4.config.v1.P4HeaderUnionT"
      "ypeSpec.Member\022\023\n\013annotations\030\002 \003(\t\032A\n\006M"
      "ember\022\014\n\004name\030\001 \001(\t\022)\n\006header\030\002 \001(\0132\031.p4"
      ".config.v1.P4NamedType\"P\n\025P4HeaderStackT"
      "ypeSpec\022)\n\006header\030\001 \001(\0132\031.p4.config.v1.P"
      "4NamedType\022\014\n\004size\030\002 \001(\005\"[\n\032P4HeaderUnio"
      "nStackTypeSpec\022/\n\014header_union\030\001 \001(\0132\031.p"
      "4.config.v1.P4NamedType\022\014\n\004size\030\002 \001(\005\"D\n"
      "\014KeyValuePair\022\013\n\003key\030\001 \001(\t\022\'\n\005value\030\002 \001("
      "\0132\030.p4.config.v1.Expression\"@\n\020KeyValueP"
      "airList\022,\n\010kv_pairs\030\001 \003(\0132\032.p4.config.v1"
      ".KeyValuePair\"Z\n\nExpression\022\026\n\014string_va"
      "lue\030\001 \001(\tH\000\022\025\n\013int64_value\030\002 \001(\003H\000\022\024\n\nbo"
      "ol_value\030\003 \001(\010H\000B\007\n\005value\"\?\n\016ExpressionL"
      "ist\022-\n\013expressions\030\001 \003(\0132\030.p4.config.v1."
      "Expression\"\235\001\n\024StructuredAnnotation\022\014\n\004n"
      "ame\030\001 \001(\t\0227\n\017expression_list\030\002 \001(\0132\034.p4."
      "config.v1.ExpressionListH\000\0226\n\014kv_pair_li"
      "st\030\003 \001(\0132\036.p4.config.v1.KeyValuePairList"
      "H\000B\006\n\004body\"\220\002\n\016P4EnumTypeSpec\0224\n\007members"
      "\030\001 \003(\0132#.p4.config.v1.P4EnumTypeSpec.Mem"
      "ber\022\023\n\013annotations\030\002 \003(\t\022B\n\026structured_a"
      "nnotations\030\003 \003(\0132\".p4.config.v1.Structur"
      "edAnnotation\032o\n\006Member\022\014\n\004name\030\001 \001(\t\022\023\n\013"
      "annotations\030\002 \003(\t\022B\n\026structured_annotati"
      "ons\030\003 \003(\0132\".p4.config.v1.StructuredAnnot"
      "ation\"\355\002\n\032P4SerializableEnumTypeSpec\0224\n\017"
      "underlying_type\030\001 \001(\0132\033.p4.config.v1.P4B"
      "itTypeSpec\022@\n\007members\030\002 \003(\0132/.p4.config."
      "v1.P4SerializableEnumTypeSpec.Member\022\023\n\013"
      "annotations\030\003 \003(\t\022B\n\026structured_annotati"
      "ons\030\004 \003(\0132\".p4.config.v1.StructuredAnnot"
      "ation\032~\n\006Member\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002"
      " \001(\014\022\023\n\013annotations\030\003 \003(\t\022B\n\026structured_"
      "annotations\030\004 \003(\0132\".p4.config.v1.Structu"
      "redAnnotation\"\"\n\017P4ErrorTypeSpec\022\017\n\007memb"
      "ers\030\001 \003(\t\"\230\001\n\024P4NewTypeTranslation\022\013\n\003ur"
      "i\030\001 \001(\t\022\026\n\014sdn_bitwidth\030\002 \001(\005H\000\022B\n\nsdn_s"
      "tring\030\003 \001(\0132,.p4.config.v1.P4NewTypeTran"
      "slation.SdnStringH\000\032\013\n\tSdnStringB\n\n\010sdn_"
      "type\"\360\001\n\rP4NewTypeSpec\0225\n\roriginal_type\030"
      "\001 \001(\0132\034.p4.config.v1.P4DataTypeSpecH\000\022=\n"
      "\017translated_type\030\002 \001(\0132\".p4.config.v1.P4"
      "NewTypeTranslationH\000\022\023\n\013annotations\030\003 \003("
      "\t\022B\n\026structured_annotations\030\004 \003(\0132\".p4.c"
      "onfig.v1.StructuredAnnotationB\020\n\016represe"
      "ntationb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4295);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "p4/config/v1/p4types.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_p4_2fconfig_2fv1_2fp4types_2eproto


// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4TypeInfo::kStructsFieldNumber;
const int P4TypeInfo::kHeadersFieldNumber;
const int P4TypeInfo::kHeaderUnionsFieldNumber;
const int P4TypeInfo::kEnumsFieldNumber;
const int P4TypeInfo::kErrorFieldNumber;
const int P4TypeInfo::kSerializableEnumsFieldNumber;
const int P4TypeInfo::kNewTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4TypeInfo::P4TypeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4TypeInfo)
}
P4TypeInfo::P4TypeInfo(const P4TypeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  const ::google::protobuf::Descriptor*& P4TypeInfo_StructsEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[0].descriptor;
  const ::google::protobuf::Descriptor*& P4TypeInfo_HeadersEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[1].descriptor;
  const ::google::protobuf::Descriptor*& P4TypeInfo_HeaderUnionsEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[2].descriptor;
  const ::google::protobuf::Descriptor*& P4TypeInfo_EnumsEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[3].descriptor;
  const ::google::protobuf::Descriptor*& P4TypeInfo_SerializableEnumsEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[4].descriptor;
  const ::google::protobuf::Descriptor*& P4TypeInfo_NewTypesEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[5].descriptor;
  structs_.SetAssignDescriptorCallback(
      protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce);
  structs_.SetEntryDescriptor(
      &P4TypeInfo_StructsEntry_descriptor);
  structs_.MergeFrom(from.structs_);
  headers_.SetAssignDescriptorCallback(
      protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce);
  headers_.SetEntryDescriptor(
      &P4TypeInfo_HeadersEntry_descriptor);
  headers_.MergeFrom(from.headers_);
  header_unions_.SetAssignDescriptorCallback(
      protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce);
  header_unions_.SetEntryDescriptor(
      &P4TypeInfo_HeaderUnionsEntry_descriptor);
  header_unions_.MergeFrom(from.header_unions_);
  enums_.SetAssignDescriptorCallback(
      protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce);
  enums_.SetEntryDescriptor(
      &P4TypeInfo_EnumsEntry_descriptor);
  enums_.MergeFrom(from.enums_);
  serializable_enums_.SetAssignDescriptorCallback(
      protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce);
  serializable_enums_.SetEntryDescriptor(
      &P4TypeInfo_SerializableEnumsEntry_descriptor);
  serializable_enums_.MergeFrom(from.serializable_enums_);
  new_types_.SetAssignDescriptorCallback(
      protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce);
  new_types_.SetEntryDescriptor(
      &P4TypeInfo_NewTypesEntry_descriptor);
  new_types_.MergeFrom(from.new_types_);
  if (from.has_error()) {
    error_ = new ::p4::config::v1::P4ErrorTypeSpec(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4TypeInfo)
}

void P4TypeInfo::SharedCtor() {
  const ::google::protobuf::Descriptor*& P4TypeInfo_StructsEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[0].descriptor;
  const ::google::protobuf::Descriptor*& P4TypeInfo_HeadersEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[1].descriptor;
  const ::google::protobuf::Descriptor*& P4TypeInfo_HeaderUnionsEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[2].descriptor;
  const ::google::protobuf::Descriptor*& P4TypeInfo_EnumsEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[3].descriptor;
  const ::google::protobuf::Descriptor*& P4TypeInfo_SerializableEnumsEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[4].descriptor;
  const ::google::protobuf::Descriptor*& P4TypeInfo_NewTypesEntry_descriptor = protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[5].descriptor;
  structs_.SetAssignDescriptorCallback(
      protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce);
  structs_.SetEntryDescriptor(
      &P4TypeInfo_StructsEntry_descriptor);
  headers_.SetAssignDescriptorCallback(
      protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce);
  headers_.SetEntryDescriptor(
      &P4TypeInfo_HeadersEntry_descriptor);
  header_unions_.SetAssignDescriptorCallback(
      protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce);
  header_unions_.SetEntryDescriptor(
      &P4TypeInfo_HeaderUnionsEntry_descriptor);
  enums_.SetAssignDescriptorCallback(
      protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce);
  enums_.SetEntryDescriptor(
      &P4TypeInfo_EnumsEntry_descriptor);
  serializable_enums_.SetAssignDescriptorCallback(
      protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce);
  serializable_enums_.SetEntryDescriptor(
      &P4TypeInfo_SerializableEnumsEntry_descriptor);
  new_types_.SetAssignDescriptorCallback(
      protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce);
  new_types_.SetEntryDescriptor(
      &P4TypeInfo_NewTypesEntry_descriptor);
  error_ = NULL;
  _cached_size_ = 0;
}

P4TypeInfo::~P4TypeInfo() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4TypeInfo)
  SharedDtor();
}

void P4TypeInfo::SharedDtor() {
  if (this != internal_default_instance()) {
    delete error_;
  }
}

void P4TypeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4TypeInfo::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[6].descriptor;
}

const P4TypeInfo& P4TypeInfo::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4TypeInfo* P4TypeInfo::New(::google::protobuf::Arena* arena) const {
  P4TypeInfo* n = new P4TypeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4TypeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4TypeInfo)
  structs_.Clear();
  headers_.Clear();
  header_unions_.Clear();
  enums_.Clear();
  serializable_enums_.Clear();
  new_types_.Clear();
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}

bool P4TypeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4TypeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .p4.config.v1.P4StructTypeSpec> structs = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          P4TypeInfo_StructsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::p4::config::v1::P4StructTypeSpec,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4StructTypeSpec > > parser(&structs_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4TypeInfo.StructsEntry.key"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, .p4.config.v1.P4HeaderTypeSpec> headers = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          P4TypeInfo_HeadersEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::p4::config::v1::P4HeaderTypeSpec,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderTypeSpec > > parser(&headers_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4TypeInfo.HeadersEntry.key"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, .p4.config.v1.P4HeaderUnionTypeSpec> header_unions = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          P4TypeInfo_HeaderUnionsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec > > parser(&header_unions_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4TypeInfo.HeaderUnionsEntry.key"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, .p4.config.v1.P4EnumTypeSpec> enums = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          P4TypeInfo_EnumsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::p4::config::v1::P4EnumTypeSpec,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4EnumTypeSpec > > parser(&enums_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4TypeInfo.EnumsEntry.key"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .p4.config.v1.P4ErrorTypeSpec error = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .p4.config.v1.P4SerializableEnumTypeSpec> serializable_enums = 6;
      case 6: {
        if (tag == 50u) {
          DO_(input->IncrementRecursionDepth());
          P4TypeInfo_SerializableEnumsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec > > parser(&serializable_enums_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4TypeInfo.SerializableEnumsEntry.key"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<string, .p4.config.v1.P4NewTypeSpec> new_types = 7;
      case 7: {
        if (tag == 58u) {
          DO_(input->IncrementRecursionDepth());
          P4TypeInfo_NewTypesEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::p4::config::v1::P4NewTypeSpec,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4NewTypeSpec > > parser(&new_types_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4TypeInfo.NewTypesEntry.key"));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4TypeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4TypeInfo)
  return false;
#undef DO_
}

void P4TypeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4TypeInfo)
  // map<string, .p4.config.v1.P4StructTypeSpec> structs = 1;
  if (!this->structs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4StructTypeSpec >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "p4.config.v1.P4TypeInfo.StructsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->structs().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->structs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4StructTypeSpec >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4StructTypeSpec >::const_iterator
          it = this->structs().begin();
          it != this->structs().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<P4TypeInfo_StructsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(structs_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<P4TypeInfo_StructsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4StructTypeSpec >::const_iterator
          it = this->structs().begin();
          it != this->structs().end(); ++it) {
        entry.reset(structs_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .p4.config.v1.P4HeaderTypeSpec> headers = 2;
  if (!this->headers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderTypeSpec >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "p4.config.v1.P4TypeInfo.HeadersEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->headers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->headers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderTypeSpec >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderTypeSpec >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<P4TypeInfo_HeadersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(headers_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<P4TypeInfo_HeadersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderTypeSpec >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it) {
        entry.reset(headers_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .p4.config.v1.P4HeaderUnionTypeSpec> header_unions = 3;
  if (!this->header_unions().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "p4.config.v1.P4TypeInfo.HeaderUnionsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->header_unions().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->header_unions().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec >::const_iterator
          it = this->header_unions().begin();
          it != this->header_unions().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<P4TypeInfo_HeaderUnionsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(header_unions_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<P4TypeInfo_HeaderUnionsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec >::const_iterator
          it = this->header_unions().begin();
          it != this->header_unions().end(); ++it) {
        entry.reset(header_unions_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .p4.config.v1.P4EnumTypeSpec> enums = 4;
  if (!this->enums().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4EnumTypeSpec >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "p4.config.v1.P4TypeInfo.EnumsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->enums().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->enums().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4EnumTypeSpec >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4EnumTypeSpec >::const_iterator
          it = this->enums().begin();
          it != this->enums().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<P4TypeInfo_EnumsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(enums_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<P4TypeInfo_EnumsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4EnumTypeSpec >::const_iterator
          it = this->enums().begin();
          it != this->enums().end(); ++it) {
        entry.reset(enums_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .p4.config.v1.P4ErrorTypeSpec error = 5;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->error_, output);
  }

  // map<string, .p4.config.v1.P4SerializableEnumTypeSpec> serializable_enums = 6;
  if (!this->serializable_enums().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "p4.config.v1.P4TypeInfo.SerializableEnumsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->serializable_enums().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->serializable_enums().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec >::const_iterator
          it = this->serializable_enums().begin();
          it != this->serializable_enums().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<P4TypeInfo_SerializableEnumsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(serializable_enums_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<P4TypeInfo_SerializableEnumsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec >::const_iterator
          it = this->serializable_enums().begin();
          it != this->serializable_enums().end(); ++it) {
        entry.reset(serializable_enums_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .p4.config.v1.P4NewTypeSpec> new_types = 7;
  if (!this->new_types().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4NewTypeSpec >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "p4.config.v1.P4TypeInfo.NewTypesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->new_types().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->new_types().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4NewTypeSpec >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4NewTypeSpec >::const_iterator
          it = this->new_types().begin();
          it != this->new_types().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<P4TypeInfo_NewTypesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(new_types_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<P4TypeInfo_NewTypesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4NewTypeSpec >::const_iterator
          it = this->new_types().begin();
          it != this->new_types().end(); ++it) {
        entry.reset(new_types_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4TypeInfo)
}

::google::protobuf::uint8* P4TypeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4TypeInfo)
  // map<string, .p4.config.v1.P4StructTypeSpec> structs = 1;
  if (!this->structs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4StructTypeSpec >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "p4.config.v1.P4TypeInfo.StructsEntry.key");
      }
    };

    if (deterministic &&
        this->structs().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->structs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4StructTypeSpec >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4StructTypeSpec >::const_iterator
          it = this->structs().begin();
          it != this->structs().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<P4TypeInfo_StructsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(structs_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<P4TypeInfo_StructsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4StructTypeSpec >::const_iterator
          it = this->structs().begin();
          it != this->structs().end(); ++it) {
        entry.reset(structs_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .p4.config.v1.P4HeaderTypeSpec> headers = 2;
  if (!this->headers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderTypeSpec >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "p4.config.v1.P4TypeInfo.HeadersEntry.key");
      }
    };

    if (deterministic &&
        this->headers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->headers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderTypeSpec >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderTypeSpec >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<P4TypeInfo_HeadersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(headers_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<P4TypeInfo_HeadersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderTypeSpec >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it) {
        entry.reset(headers_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .p4.config.v1.P4HeaderUnionTypeSpec> header_unions = 3;
  if (!this->header_unions().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "p4.config.v1.P4TypeInfo.HeaderUnionsEntry.key");
      }
    };

    if (deterministic &&
        this->header_unions().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->header_unions().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec >::const_iterator
          it = this->header_unions().begin();
          it != this->header_unions().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<P4TypeInfo_HeaderUnionsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(header_unions_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<P4TypeInfo_HeaderUnionsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec >::const_iterator
          it = this->header_unions().begin();
          it != this->header_unions().end(); ++it) {
        entry.reset(header_unions_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .p4.config.v1.P4EnumTypeSpec> enums = 4;
  if (!this->enums().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4EnumTypeSpec >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "p4.config.v1.P4TypeInfo.EnumsEntry.key");
      }
    };

    if (deterministic &&
        this->enums().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->enums().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4EnumTypeSpec >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4EnumTypeSpec >::const_iterator
          it = this->enums().begin();
          it != this->enums().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<P4TypeInfo_EnumsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(enums_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<P4TypeInfo_EnumsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4EnumTypeSpec >::const_iterator
          it = this->enums().begin();
          it != this->enums().end(); ++it) {
        entry.reset(enums_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .p4.config.v1.P4ErrorTypeSpec error = 5;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->error_, false, target);
  }

  // map<string, .p4.config.v1.P4SerializableEnumTypeSpec> serializable_enums = 6;
  if (!this->serializable_enums().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "p4.config.v1.P4TypeInfo.SerializableEnumsEntry.key");
      }
    };

    if (deterministic &&
        this->serializable_enums().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->serializable_enums().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec >::const_iterator
          it = this->serializable_enums().begin();
          it != this->serializable_enums().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<P4TypeInfo_SerializableEnumsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(serializable_enums_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<P4TypeInfo_SerializableEnumsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec >::const_iterator
          it = this->serializable_enums().begin();
          it != this->serializable_enums().end(); ++it) {
        entry.reset(serializable_enums_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .p4.config.v1.P4NewTypeSpec> new_types = 7;
  if (!this->new_types().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4NewTypeSpec >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "p4.config.v1.P4TypeInfo.NewTypesEntry.key");
      }
    };

    if (deterministic &&
        this->new_types().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->new_types().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4NewTypeSpec >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4NewTypeSpec >::const_iterator
          it = this->new_types().begin();
          it != this->new_types().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<P4TypeInfo_NewTypesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(new_types_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<P4TypeInfo_NewTypesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4NewTypeSpec >::const_iterator
          it = this->new_types().begin();
          it != this->new_types().end(); ++it) {
        entry.reset(new_types_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4TypeInfo)
  return target;
}

size_t P4TypeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4TypeInfo)
  size_t total_size = 0;

  // map<string, .p4.config.v1.P4StructTypeSpec> structs = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->structs_size());
  {
    ::google::protobuf::scoped_ptr<P4TypeInfo_StructsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4StructTypeSpec >::const_iterator
        it = this->structs().begin();
        it != this->structs().end(); ++it) {
      entry.reset(structs_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .p4.config.v1.P4HeaderTypeSpec> headers = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->headers_size());
  {
    ::google::protobuf::scoped_ptr<P4TypeInfo_HeadersEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderTypeSpec >::const_iterator
        it = this->headers().begin();
        it != this->headers().end(); ++it) {
      entry.reset(headers_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .p4.config.v1.P4HeaderUnionTypeSpec> header_unions = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->header_unions_size());
  {
    ::google::protobuf::scoped_ptr<P4TypeInfo_HeaderUnionsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec >::const_iterator
        it = this->header_unions().begin();
        it != this->header_unions().end(); ++it) {
      entry.reset(header_unions_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .p4.config.v1.P4EnumTypeSpec> enums = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->enums_size());
  {
    ::google::protobuf::scoped_ptr<P4TypeInfo_EnumsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4EnumTypeSpec >::const_iterator
        it = this->enums().begin();
        it != this->enums().end(); ++it) {
      entry.reset(enums_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .p4.config.v1.P4SerializableEnumTypeSpec> serializable_enums = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->serializable_enums_size());
  {
    ::google::protobuf::scoped_ptr<P4TypeInfo_SerializableEnumsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec >::const_iterator
        it = this->serializable_enums().begin();
        it != this->serializable_enums().end(); ++it) {
      entry.reset(serializable_enums_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .p4.config.v1.P4NewTypeSpec> new_types = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->new_types_size());
  {
    ::google::protobuf::scoped_ptr<P4TypeInfo_NewTypesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::p4::config::v1::P4NewTypeSpec >::const_iterator
        it = this->new_types().begin();
        it != this->new_types().end(); ++it) {
      entry.reset(new_types_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .p4.config.v1.P4ErrorTypeSpec error = 5;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4TypeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4TypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const P4TypeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4TypeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4TypeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4TypeInfo)
    MergeFrom(*source);
  }
}

void P4TypeInfo::MergeFrom(const P4TypeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4TypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  structs_.MergeFrom(from.structs_);
  headers_.MergeFrom(from.headers_);
  header_unions_.MergeFrom(from.header_unions_);
  enums_.MergeFrom(from.enums_);
  serializable_enums_.MergeFrom(from.serializable_enums_);
  new_types_.MergeFrom(from.new_types_);
  if (from.has_error()) {
    mutable_error()->::p4::config::v1::P4ErrorTypeSpec::MergeFrom(from.error());
  }
}

void P4TypeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4TypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4TypeInfo::CopyFrom(const P4TypeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4TypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4TypeInfo::IsInitialized() const {
  return true;
}

void P4TypeInfo::Swap(P4TypeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4TypeInfo::InternalSwap(P4TypeInfo* other) {
  structs_.Swap(&other->structs_);
  headers_.Swap(&other->headers_);
  header_unions_.Swap(&other->header_unions_);
  enums_.Swap(&other->enums_);
  serializable_enums_.Swap(&other->serializable_enums_);
  new_types_.Swap(&other->new_types_);
  std::swap(error_, other->error_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4TypeInfo::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4TypeInfo

// map<string, .p4.config.v1.P4StructTypeSpec> structs = 1;
int P4TypeInfo::structs_size() const {
  return structs_.size();
}
void P4TypeInfo::clear_structs() {
  structs_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4StructTypeSpec >&
P4TypeInfo::structs() const {
  // @@protoc_insertion_point(field_map:p4.config.v1.P4TypeInfo.structs)
  return structs_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4StructTypeSpec >*
P4TypeInfo::mutable_structs() {
  // @@protoc_insertion_point(field_mutable_map:p4.config.v1.P4TypeInfo.structs)
  return structs_.MutableMap();
}

// map<string, .p4.config.v1.P4HeaderTypeSpec> headers = 2;
int P4TypeInfo::headers_size() const {
  return headers_.size();
}
void P4TypeInfo::clear_headers() {
  headers_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderTypeSpec >&
P4TypeInfo::headers() const {
  // @@protoc_insertion_point(field_map:p4.config.v1.P4TypeInfo.headers)
  return headers_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderTypeSpec >*
P4TypeInfo::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_map:p4.config.v1.P4TypeInfo.headers)
  return headers_.MutableMap();
}

// map<string, .p4.config.v1.P4HeaderUnionTypeSpec> header_unions = 3;
int P4TypeInfo::header_unions_size() const {
  return header_unions_.size();
}
void P4TypeInfo::clear_header_unions() {
  header_unions_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec >&
P4TypeInfo::header_unions() const {
  // @@protoc_insertion_point(field_map:p4.config.v1.P4TypeInfo.header_unions)
  return header_unions_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec >*
P4TypeInfo::mutable_header_unions() {
  // @@protoc_insertion_point(field_mutable_map:p4.config.v1.P4TypeInfo.header_unions)
  return header_unions_.MutableMap();
}

// map<string, .p4.config.v1.P4EnumTypeSpec> enums = 4;
int P4TypeInfo::enums_size() const {
  return enums_.size();
}
void P4TypeInfo::clear_enums() {
  enums_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4EnumTypeSpec >&
P4TypeInfo::enums() const {
  // @@protoc_insertion_point(field_map:p4.config.v1.P4TypeInfo.enums)
  return enums_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4EnumTypeSpec >*
P4TypeInfo::mutable_enums() {
  // @@protoc_insertion_point(field_mutable_map:p4.config.v1.P4TypeInfo.enums)
  return enums_.MutableMap();
}

// .p4.config.v1.P4ErrorTypeSpec error = 5;
bool P4TypeInfo::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void P4TypeInfo::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::p4::config::v1::P4ErrorTypeSpec& P4TypeInfo::error() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4TypeInfo.error)
  return error_ != NULL ? *error_
                         : *::p4::config::v1::P4ErrorTypeSpec::internal_default_instance();
}
::p4::config::v1::P4ErrorTypeSpec* P4TypeInfo::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::p4::config::v1::P4ErrorTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4TypeInfo.error)
  return error_;
}
::p4::config::v1::P4ErrorTypeSpec* P4TypeInfo::release_error() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4TypeInfo.error)
  
  ::p4::config::v1::P4ErrorTypeSpec* temp = error_;
  error_ = NULL;
  return temp;
}
void P4TypeInfo::set_allocated_error(::p4::config::v1::P4ErrorTypeSpec* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4TypeInfo.error)
}

// map<string, .p4.config.v1.P4SerializableEnumTypeSpec> serializable_enums = 6;
int P4TypeInfo::serializable_enums_size() const {
  return serializable_enums_.size();
}
void P4TypeInfo::clear_serializable_enums() {
  serializable_enums_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec >&
P4TypeInfo::serializable_enums() const {
  // @@protoc_insertion_point(field_map:p4.config.v1.P4TypeInfo.serializable_enums)
  return serializable_enums_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec >*
P4TypeInfo::mutable_serializable_enums() {
  // @@protoc_insertion_point(field_mutable_map:p4.config.v1.P4TypeInfo.serializable_enums)
  return serializable_enums_.MutableMap();
}

// map<string, .p4.config.v1.P4NewTypeSpec> new_types = 7;
int P4TypeInfo::new_types_size() const {
  return new_types_.size();
}
void P4TypeInfo::clear_new_types() {
  new_types_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4NewTypeSpec >&
P4TypeInfo::new_types() const {
  // @@protoc_insertion_point(field_map:p4.config.v1.P4TypeInfo.new_types)
  return new_types_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4NewTypeSpec >*
P4TypeInfo::mutable_new_types() {
  // @@protoc_insertion_point(field_mutable_map:p4.config.v1.P4TypeInfo.new_types)
  return new_types_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4DataTypeSpec::kBitstringFieldNumber;
const int P4DataTypeSpec::kBoolFieldNumber;
const int P4DataTypeSpec::kTupleFieldNumber;
const int P4DataTypeSpec::kStructFieldNumber;
const int P4DataTypeSpec::kHeaderFieldNumber;
const int P4DataTypeSpec::kHeaderUnionFieldNumber;
const int P4DataTypeSpec::kHeaderStackFieldNumber;
const int P4DataTypeSpec::kHeaderUnionStackFieldNumber;
const int P4DataTypeSpec::kEnumFieldNumber;
const int P4DataTypeSpec::kErrorFieldNumber;
const int P4DataTypeSpec::kSerializableEnumFieldNumber;
const int P4DataTypeSpec::kNewTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4DataTypeSpec::P4DataTypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4DataTypeSpec)
}
P4DataTypeSpec::P4DataTypeSpec(const P4DataTypeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type_spec();
  switch (from.type_spec_case()) {
    case kBitstring: {
      mutable_bitstring()->::p4::config::v1::P4BitstringLikeTypeSpec::MergeFrom(from.bitstring());
      break;
    }
    case kBool: {
      mutable_bool_()->::p4::config::v1::P4BoolType::MergeFrom(from.bool_());
      break;
    }
    case kTuple: {
      mutable_tuple()->::p4::config::v1::P4TupleTypeSpec::MergeFrom(from.tuple());
      break;
    }
    case kStruct: {
      mutable_struct_()->::p4::config::v1::P4NamedType::MergeFrom(from.struct_());
      break;
    }
    case kHeader: {
      mutable_header()->::p4::config::v1::P4NamedType::MergeFrom(from.header());
      break;
    }
    case kHeaderUnion: {
      mutable_header_union()->::p4::config::v1::P4NamedType::MergeFrom(from.header_union());
      break;
    }
    case kHeaderStack: {
      mutable_header_stack()->::p4::config::v1::P4HeaderStackTypeSpec::MergeFrom(from.header_stack());
      break;
    }
    case kHeaderUnionStack: {
      mutable_header_union_stack()->::p4::config::v1::P4HeaderUnionStackTypeSpec::MergeFrom(from.header_union_stack());
      break;
    }
    case kEnum: {
      mutable_enum_()->::p4::config::v1::P4NamedType::MergeFrom(from.enum_());
      break;
    }
    case kError: {
      mutable_error()->::p4::config::v1::P4ErrorType::MergeFrom(from.error());
      break;
    }
    case kSerializableEnum: {
      mutable_serializable_enum()->::p4::config::v1::P4NamedType::MergeFrom(from.serializable_enum());
      break;
    }
    case kNewType: {
      mutable_new_type()->::p4::config::v1::P4NamedType::MergeFrom(from.new_type());
      break;
    }
    case TYPE_SPEC_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4DataTypeSpec)
}

void P4DataTypeSpec::SharedCtor() {
  clear_has_type_spec();
  _cached_size_ = 0;
}

P4DataTypeSpec::~P4DataTypeSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4DataTypeSpec)
  SharedDtor();
}

void P4DataTypeSpec::SharedDtor() {
  if (has_type_spec()) {
    clear_type_spec();
  }
}

void P4DataTypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4DataTypeSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[7].descriptor;
}

const P4DataTypeSpec& P4DataTypeSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4DataTypeSpec* P4DataTypeSpec::New(::google::protobuf::Arena* arena) const {
  P4DataTypeSpec* n = new P4DataTypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4DataTypeSpec::clear_type_spec() {
// @@protoc_insertion_point(one_of_clear_start:p4.config.v1.P4DataTypeSpec)
  switch (type_spec_case()) {
    case kBitstring: {
      delete type_spec_.bitstring_;
      break;
    }
    case kBool: {
      delete type_spec_.bool__;
      break;
    }
    case kTuple: {
      delete type_spec_.tuple_;
      break;
    }
    case kStruct: {
      delete type_spec_.struct__;
      break;
    }
    case kHeader: {
      delete type_spec_.header_;
      break;
    }
    case kHeaderUnion: {
      delete type_spec_.header_union_;
      break;
    }
    case kHeaderStack: {
      delete type_spec_.header_stack_;
      break;
    }
    case kHeaderUnionStack: {
      delete type_spec_.header_union_stack_;
      break;
    }
    case kEnum: {
      delete type_spec_.enum__;
      break;
    }
    case kError: {
      delete type_spec_.error_;
      break;
    }
    case kSerializableEnum: {
      delete type_spec_.serializable_enum_;
      break;
    }
    case kNewType: {
      delete type_spec_.new_type_;
      break;
    }
    case TYPE_SPEC_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_SPEC_NOT_SET;
}


void P4DataTypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4DataTypeSpec)
  clear_type_spec();
}

bool P4DataTypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4DataTypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.P4BitstringLikeTypeSpec bitstring = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bitstring()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4BoolType bool = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bool_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4TupleTypeSpec tuple = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tuple()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4NamedType struct = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_struct_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4NamedType header = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4NamedType header_union = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header_union()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4HeaderStackTypeSpec header_stack = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header_stack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4HeaderUnionStackTypeSpec header_union_stack = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header_union_stack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4NamedType enum = 9;
      case 9: {
        if (tag == 74u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_enum_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4ErrorType error = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4NamedType serializable_enum = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serializable_enum()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4NamedType new_type = 12;
      case 12: {
        if (tag == 98u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_new_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4DataTypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4DataTypeSpec)
  return false;
#undef DO_
}

void P4DataTypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4DataTypeSpec)
  // .p4.config.v1.P4BitstringLikeTypeSpec bitstring = 1;
  if (has_bitstring()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *type_spec_.bitstring_, output);
  }

  // .p4.config.v1.P4BoolType bool = 2;
  if (has_bool_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *type_spec_.bool__, output);
  }

  // .p4.config.v1.P4TupleTypeSpec tuple = 3;
  if (has_tuple()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *type_spec_.tuple_, output);
  }

  // .p4.config.v1.P4NamedType struct = 4;
  if (has_struct_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *type_spec_.struct__, output);
  }

  // .p4.config.v1.P4NamedType header = 5;
  if (has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *type_spec_.header_, output);
  }

  // .p4.config.v1.P4NamedType header_union = 6;
  if (has_header_union()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *type_spec_.header_union_, output);
  }

  // .p4.config.v1.P4HeaderStackTypeSpec header_stack = 7;
  if (has_header_stack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *type_spec_.header_stack_, output);
  }

  // .p4.config.v1.P4HeaderUnionStackTypeSpec header_union_stack = 8;
  if (has_header_union_stack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *type_spec_.header_union_stack_, output);
  }

  // .p4.config.v1.P4NamedType enum = 9;
  if (has_enum_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *type_spec_.enum__, output);
  }

  // .p4.config.v1.P4ErrorType error = 10;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *type_spec_.error_, output);
  }

  // .p4.config.v1.P4NamedType serializable_enum = 11;
  if (has_serializable_enum()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *type_spec_.serializable_enum_, output);
  }

  // .p4.config.v1.P4NamedType new_type = 12;
  if (has_new_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *type_spec_.new_type_, output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4DataTypeSpec)
}

::google::protobuf::uint8* P4DataTypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4DataTypeSpec)
  // .p4.config.v1.P4BitstringLikeTypeSpec bitstring = 1;
  if (has_bitstring()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *type_spec_.bitstring_, false, target);
  }

  // .p4.config.v1.P4BoolType bool = 2;
  if (has_bool_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *type_spec_.bool__, false, target);
  }

  // .p4.config.v1.P4TupleTypeSpec tuple = 3;
  if (has_tuple()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *type_spec_.tuple_, false, target);
  }

  // .p4.config.v1.P4NamedType struct = 4;
  if (has_struct_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *type_spec_.struct__, false, target);
  }

  // .p4.config.v1.P4NamedType header = 5;
  if (has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *type_spec_.header_, false, target);
  }

  // .p4.config.v1.P4NamedType header_union = 6;
  if (has_header_union()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *type_spec_.header_union_, false, target);
  }

  // .p4.config.v1.P4HeaderStackTypeSpec header_stack = 7;
  if (has_header_stack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *type_spec_.header_stack_, false, target);
  }

  // .p4.config.v1.P4HeaderUnionStackTypeSpec header_union_stack = 8;
  if (has_header_union_stack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *type_spec_.header_union_stack_, false, target);
  }

  // .p4.config.v1.P4NamedType enum = 9;
  if (has_enum_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *type_spec_.enum__, false, target);
  }

  // .p4.config.v1.P4ErrorType error = 10;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *type_spec_.error_, false, target);
  }

  // .p4.config.v1.P4NamedType serializable_enum = 11;
  if (has_serializable_enum()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *type_spec_.serializable_enum_, false, target);
  }

  // .p4.config.v1.P4NamedType new_type = 12;
  if (has_new_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *type_spec_.new_type_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4DataTypeSpec)
  return target;
}

size_t P4DataTypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4DataTypeSpec)
  size_t total_size = 0;

  switch (type_spec_case()) {
    // .p4.config.v1.P4BitstringLikeTypeSpec bitstring = 1;
    case kBitstring: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_spec_.bitstring_);
      break;
    }
    // .p4.config.v1.P4BoolType bool = 2;
    case kBool: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_spec_.bool__);
      break;
    }
    // .p4.config.v1.P4TupleTypeSpec tuple = 3;
    case kTuple: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_spec_.tuple_);
      break;
    }
    // .p4.config.v1.P4NamedType struct = 4;
    case kStruct: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_spec_.struct__);
      break;
    }
    // .p4.config.v1.P4NamedType header = 5;
    case kHeader: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_spec_.header_);
      break;
    }
    // .p4.config.v1.P4NamedType header_union = 6;
    case kHeaderUnion: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_spec_.header_union_);
      break;
    }
    // .p4.config.v1.P4HeaderStackTypeSpec header_stack = 7;
    case kHeaderStack: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_spec_.header_stack_);
      break;
    }
    // .p4.config.v1.P4HeaderUnionStackTypeSpec header_union_stack = 8;
    case kHeaderUnionStack: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_spec_.header_union_stack_);
      break;
    }
    // .p4.config.v1.P4NamedType enum = 9;
    case kEnum: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_spec_.enum__);
      break;
    }
    // .p4.config.v1.P4ErrorType error = 10;
    case kError: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_spec_.error_);
      break;
    }
    // .p4.config.v1.P4NamedType serializable_enum = 11;
    case kSerializableEnum: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_spec_.serializable_enum_);
      break;
    }
    // .p4.config.v1.P4NamedType new_type = 12;
    case kNewType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_spec_.new_type_);
      break;
    }
    case TYPE_SPEC_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4DataTypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4DataTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const P4DataTypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4DataTypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4DataTypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4DataTypeSpec)
    MergeFrom(*source);
  }
}

void P4DataTypeSpec::MergeFrom(const P4DataTypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4DataTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  switch (from.type_spec_case()) {
    case kBitstring: {
      mutable_bitstring()->::p4::config::v1::P4BitstringLikeTypeSpec::MergeFrom(from.bitstring());
      break;
    }
    case kBool: {
      mutable_bool_()->::p4::config::v1::P4BoolType::MergeFrom(from.bool_());
      break;
    }
    case kTuple: {
      mutable_tuple()->::p4::config::v1::P4TupleTypeSpec::MergeFrom(from.tuple());
      break;
    }
    case kStruct: {
      mutable_struct_()->::p4::config::v1::P4NamedType::MergeFrom(from.struct_());
      break;
    }
    case kHeader: {
      mutable_header()->::p4::config::v1::P4NamedType::MergeFrom(from.header());
      break;
    }
    case kHeaderUnion: {
      mutable_header_union()->::p4::config::v1::P4NamedType::MergeFrom(from.header_union());
      break;
    }
    case kHeaderStack: {
      mutable_header_stack()->::p4::config::v1::P4HeaderStackTypeSpec::MergeFrom(from.header_stack());
      break;
    }
    case kHeaderUnionStack: {
      mutable_header_union_stack()->::p4::config::v1::P4HeaderUnionStackTypeSpec::MergeFrom(from.header_union_stack());
      break;
    }
    case kEnum: {
      mutable_enum_()->::p4::config::v1::P4NamedType::MergeFrom(from.enum_());
      break;
    }
    case kError: {
      mutable_error()->::p4::config::v1::P4ErrorType::MergeFrom(from.error());
      break;
    }
    case kSerializableEnum: {
      mutable_serializable_enum()->::p4::config::v1::P4NamedType::MergeFrom(from.serializable_enum());
      break;
    }
    case kNewType: {
      mutable_new_type()->::p4::config::v1::P4NamedType::MergeFrom(from.new_type());
      break;
    }
    case TYPE_SPEC_NOT_SET: {
      break;
    }
  }
}

void P4DataTypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4DataTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4DataTypeSpec::CopyFrom(const P4DataTypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4DataTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4DataTypeSpec::IsInitialized() const {
  return true;
}

void P4DataTypeSpec::Swap(P4DataTypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4DataTypeSpec::InternalSwap(P4DataTypeSpec* other) {
  std::swap(type_spec_, other->type_spec_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4DataTypeSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4DataTypeSpec

// .p4.config.v1.P4BitstringLikeTypeSpec bitstring = 1;
bool P4DataTypeSpec::has_bitstring() const {
  return type_spec_case() == kBitstring;
}
void P4DataTypeSpec::set_has_bitstring() {
  _oneof_case_[0] = kBitstring;
}
void P4DataTypeSpec::clear_bitstring() {
  if (has_bitstring()) {
    delete type_spec_.bitstring_;
    clear_has_type_spec();
  }
}
 const ::p4::config::v1::P4BitstringLikeTypeSpec& P4DataTypeSpec::bitstring() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.bitstring)
  return has_bitstring()
      ? *type_spec_.bitstring_
      : ::p4::config::v1::P4BitstringLikeTypeSpec::default_instance();
}
::p4::config::v1::P4BitstringLikeTypeSpec* P4DataTypeSpec::mutable_bitstring() {
  if (!has_bitstring()) {
    clear_type_spec();
    set_has_bitstring();
    type_spec_.bitstring_ = new ::p4::config::v1::P4BitstringLikeTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.bitstring)
  return type_spec_.bitstring_;
}
::p4::config::v1::P4BitstringLikeTypeSpec* P4DataTypeSpec::release_bitstring() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.bitstring)
  if (has_bitstring()) {
    clear_has_type_spec();
    ::p4::config::v1::P4BitstringLikeTypeSpec* temp = type_spec_.bitstring_;
    type_spec_.bitstring_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4DataTypeSpec::set_allocated_bitstring(::p4::config::v1::P4BitstringLikeTypeSpec* bitstring) {
  clear_type_spec();
  if (bitstring) {
    set_has_bitstring();
    type_spec_.bitstring_ = bitstring;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.bitstring)
}

// .p4.config.v1.P4BoolType bool = 2;
bool P4DataTypeSpec::has_bool_() const {
  return type_spec_case() == kBool;
}
void P4DataTypeSpec::set_has_bool_() {
  _oneof_case_[0] = kBool;
}
void P4DataTypeSpec::clear_bool_() {
  if (has_bool_()) {
    delete type_spec_.bool__;
    clear_has_type_spec();
  }
}
 const ::p4::config::v1::P4BoolType& P4DataTypeSpec::bool_() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.bool)
  return has_bool_()
      ? *type_spec_.bool__
      : ::p4::config::v1::P4BoolType::default_instance();
}
::p4::config::v1::P4BoolType* P4DataTypeSpec::mutable_bool_() {
  if (!has_bool_()) {
    clear_type_spec();
    set_has_bool_();
    type_spec_.bool__ = new ::p4::config::v1::P4BoolType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.bool)
  return type_spec_.bool__;
}
::p4::config::v1::P4BoolType* P4DataTypeSpec::release_bool_() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.bool)
  if (has_bool_()) {
    clear_has_type_spec();
    ::p4::config::v1::P4BoolType* temp = type_spec_.bool__;
    type_spec_.bool__ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4DataTypeSpec::set_allocated_bool_(::p4::config::v1::P4BoolType* bool_) {
  clear_type_spec();
  if (bool_) {
    set_has_bool_();
    type_spec_.bool__ = bool_;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.bool)
}

// .p4.config.v1.P4TupleTypeSpec tuple = 3;
bool P4DataTypeSpec::has_tuple() const {
  return type_spec_case() == kTuple;
}
void P4DataTypeSpec::set_has_tuple() {
  _oneof_case_[0] = kTuple;
}
void P4DataTypeSpec::clear_tuple() {
  if (has_tuple()) {
    delete type_spec_.tuple_;
    clear_has_type_spec();
  }
}
 const ::p4::config::v1::P4TupleTypeSpec& P4DataTypeSpec::tuple() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.tuple)
  return has_tuple()
      ? *type_spec_.tuple_
      : ::p4::config::v1::P4TupleTypeSpec::default_instance();
}
::p4::config::v1::P4TupleTypeSpec* P4DataTypeSpec::mutable_tuple() {
  if (!has_tuple()) {
    clear_type_spec();
    set_has_tuple();
    type_spec_.tuple_ = new ::p4::config::v1::P4TupleTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.tuple)
  return type_spec_.tuple_;
}
::p4::config::v1::P4TupleTypeSpec* P4DataTypeSpec::release_tuple() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.tuple)
  if (has_tuple()) {
    clear_has_type_spec();
    ::p4::config::v1::P4TupleTypeSpec* temp = type_spec_.tuple_;
    type_spec_.tuple_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4DataTypeSpec::set_allocated_tuple(::p4::config::v1::P4TupleTypeSpec* tuple) {
  clear_type_spec();
  if (tuple) {
    set_has_tuple();
    type_spec_.tuple_ = tuple;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.tuple)
}

// .p4.config.v1.P4NamedType struct = 4;
bool P4DataTypeSpec::has_struct_() const {
  return type_spec_case() == kStruct;
}
void P4DataTypeSpec::set_has_struct_() {
  _oneof_case_[0] = kStruct;
}
void P4DataTypeSpec::clear_struct_() {
  if (has_struct_()) {
    delete type_spec_.struct__;
    clear_has_type_spec();
  }
}
 const ::p4::config::v1::P4NamedType& P4DataTypeSpec::struct_() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.struct)
  return has_struct_()
      ? *type_spec_.struct__
      : ::p4::config::v1::P4NamedType::default_instance();
}
::p4::config::v1::P4NamedType* P4DataTypeSpec::mutable_struct_() {
  if (!has_struct_()) {
    clear_type_spec();
    set_has_struct_();
    type_spec_.struct__ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.struct)
  return type_spec_.struct__;
}
::p4::config::v1::P4NamedType* P4DataTypeSpec::release_struct_() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.struct)
  if (has_struct_()) {
    clear_has_type_spec();
    ::p4::config::v1::P4NamedType* temp = type_spec_.struct__;
    type_spec_.struct__ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4DataTypeSpec::set_allocated_struct_(::p4::config::v1::P4NamedType* struct_) {
  clear_type_spec();
  if (struct_) {
    set_has_struct_();
    type_spec_.struct__ = struct_;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.struct)
}

// .p4.config.v1.P4NamedType header = 5;
bool P4DataTypeSpec::has_header() const {
  return type_spec_case() == kHeader;
}
void P4DataTypeSpec::set_has_header() {
  _oneof_case_[0] = kHeader;
}
void P4DataTypeSpec::clear_header() {
  if (has_header()) {
    delete type_spec_.header_;
    clear_has_type_spec();
  }
}
 const ::p4::config::v1::P4NamedType& P4DataTypeSpec::header() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.header)
  return has_header()
      ? *type_spec_.header_
      : ::p4::config::v1::P4NamedType::default_instance();
}
::p4::config::v1::P4NamedType* P4DataTypeSpec::mutable_header() {
  if (!has_header()) {
    clear_type_spec();
    set_has_header();
    type_spec_.header_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.header)
  return type_spec_.header_;
}
::p4::config::v1::P4NamedType* P4DataTypeSpec::release_header() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.header)
  if (has_header()) {
    clear_has_type_spec();
    ::p4::config::v1::P4NamedType* temp = type_spec_.header_;
    type_spec_.header_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4DataTypeSpec::set_allocated_header(::p4::config::v1::P4NamedType* header) {
  clear_type_spec();
  if (header) {
    set_has_header();
    type_spec_.header_ = header;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.header)
}

// .p4.config.v1.P4NamedType header_union = 6;
bool P4DataTypeSpec::has_header_union() const {
  return type_spec_case() == kHeaderUnion;
}
void P4DataTypeSpec::set_has_header_union() {
  _oneof_case_[0] = kHeaderUnion;
}
void P4DataTypeSpec::clear_header_union() {
  if (has_header_union()) {
    delete type_spec_.header_union_;
    clear_has_type_spec();
  }
}
 const ::p4::config::v1::P4NamedType& P4DataTypeSpec::header_union() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.header_union)
  return has_header_union()
      ? *type_spec_.header_union_
      : ::p4::config::v1::P4NamedType::default_instance();
}
::p4::config::v1::P4NamedType* P4DataTypeSpec::mutable_header_union() {
  if (!has_header_union()) {
    clear_type_spec();
    set_has_header_union();
    type_spec_.header_union_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.header_union)
  return type_spec_.header_union_;
}
::p4::config::v1::P4NamedType* P4DataTypeSpec::release_header_union() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.header_union)
  if (has_header_union()) {
    clear_has_type_spec();
    ::p4::config::v1::P4NamedType* temp = type_spec_.header_union_;
    type_spec_.header_union_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4DataTypeSpec::set_allocated_header_union(::p4::config::v1::P4NamedType* header_union) {
  clear_type_spec();
  if (header_union) {
    set_has_header_union();
    type_spec_.header_union_ = header_union;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.header_union)
}

// .p4.config.v1.P4HeaderStackTypeSpec header_stack = 7;
bool P4DataTypeSpec::has_header_stack() const {
  return type_spec_case() == kHeaderStack;
}
void P4DataTypeSpec::set_has_header_stack() {
  _oneof_case_[0] = kHeaderStack;
}
void P4DataTypeSpec::clear_header_stack() {
  if (has_header_stack()) {
    delete type_spec_.header_stack_;
    clear_has_type_spec();
  }
}
 const ::p4::config::v1::P4HeaderStackTypeSpec& P4DataTypeSpec::header_stack() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.header_stack)
  return has_header_stack()
      ? *type_spec_.header_stack_
      : ::p4::config::v1::P4HeaderStackTypeSpec::default_instance();
}
::p4::config::v1::P4HeaderStackTypeSpec* P4DataTypeSpec::mutable_header_stack() {
  if (!has_header_stack()) {
    clear_type_spec();
    set_has_header_stack();
    type_spec_.header_stack_ = new ::p4::config::v1::P4HeaderStackTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.header_stack)
  return type_spec_.header_stack_;
}
::p4::config::v1::P4HeaderStackTypeSpec* P4DataTypeSpec::release_header_stack() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.header_stack)
  if (has_header_stack()) {
    clear_has_type_spec();
    ::p4::config::v1::P4HeaderStackTypeSpec* temp = type_spec_.header_stack_;
    type_spec_.header_stack_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4DataTypeSpec::set_allocated_header_stack(::p4::config::v1::P4HeaderStackTypeSpec* header_stack) {
  clear_type_spec();
  if (header_stack) {
    set_has_header_stack();
    type_spec_.header_stack_ = header_stack;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.header_stack)
}

// .p4.config.v1.P4HeaderUnionStackTypeSpec header_union_stack = 8;
bool P4DataTypeSpec::has_header_union_stack() const {
  return type_spec_case() == kHeaderUnionStack;
}
void P4DataTypeSpec::set_has_header_union_stack() {
  _oneof_case_[0] = kHeaderUnionStack;
}
void P4DataTypeSpec::clear_header_union_stack() {
  if (has_header_union_stack()) {
    delete type_spec_.header_union_stack_;
    clear_has_type_spec();
  }
}
 const ::p4::config::v1::P4HeaderUnionStackTypeSpec& P4DataTypeSpec::header_union_stack() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.header_union_stack)
  return has_header_union_stack()
      ? *type_spec_.header_union_stack_
      : ::p4::config::v1::P4HeaderUnionStackTypeSpec::default_instance();
}
::p4::config::v1::P4HeaderUnionStackTypeSpec* P4DataTypeSpec::mutable_header_union_stack() {
  if (!has_header_union_stack()) {
    clear_type_spec();
    set_has_header_union_stack();
    type_spec_.header_union_stack_ = new ::p4::config::v1::P4HeaderUnionStackTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.header_union_stack)
  return type_spec_.header_union_stack_;
}
::p4::config::v1::P4HeaderUnionStackTypeSpec* P4DataTypeSpec::release_header_union_stack() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.header_union_stack)
  if (has_header_union_stack()) {
    clear_has_type_spec();
    ::p4::config::v1::P4HeaderUnionStackTypeSpec* temp = type_spec_.header_union_stack_;
    type_spec_.header_union_stack_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4DataTypeSpec::set_allocated_header_union_stack(::p4::config::v1::P4HeaderUnionStackTypeSpec* header_union_stack) {
  clear_type_spec();
  if (header_union_stack) {
    set_has_header_union_stack();
    type_spec_.header_union_stack_ = header_union_stack;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.header_union_stack)
}

// .p4.config.v1.P4NamedType enum = 9;
bool P4DataTypeSpec::has_enum_() const {
  return type_spec_case() == kEnum;
}
void P4DataTypeSpec::set_has_enum_() {
  _oneof_case_[0] = kEnum;
}
void P4DataTypeSpec::clear_enum_() {
  if (has_enum_()) {
    delete type_spec_.enum__;
    clear_has_type_spec();
  }
}
 const ::p4::config::v1::P4NamedType& P4DataTypeSpec::enum_() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.enum)
  return has_enum_()
      ? *type_spec_.enum__
      : ::p4::config::v1::P4NamedType::default_instance();
}
::p4::config::v1::P4NamedType* P4DataTypeSpec::mutable_enum_() {
  if (!has_enum_()) {
    clear_type_spec();
    set_has_enum_();
    type_spec_.enum__ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.enum)
  return type_spec_.enum__;
}
::p4::config::v1::P4NamedType* P4DataTypeSpec::release_enum_() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.enum)
  if (has_enum_()) {
    clear_has_type_spec();
    ::p4::config::v1::P4NamedType* temp = type_spec_.enum__;
    type_spec_.enum__ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4DataTypeSpec::set_allocated_enum_(::p4::config::v1::P4NamedType* enum_) {
  clear_type_spec();
  if (enum_) {
    set_has_enum_();
    type_spec_.enum__ = enum_;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.enum)
}

// .p4.config.v1.P4ErrorType error = 10;
bool P4DataTypeSpec::has_error() const {
  return type_spec_case() == kError;
}
void P4DataTypeSpec::set_has_error() {
  _oneof_case_[0] = kError;
}
void P4DataTypeSpec::clear_error() {
  if (has_error()) {
    delete type_spec_.error_;
    clear_has_type_spec();
  }
}
 const ::p4::config::v1::P4ErrorType& P4DataTypeSpec::error() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.error)
  return has_error()
      ? *type_spec_.error_
      : ::p4::config::v1::P4ErrorType::default_instance();
}
::p4::config::v1::P4ErrorType* P4DataTypeSpec::mutable_error() {
  if (!has_error()) {
    clear_type_spec();
    set_has_error();
    type_spec_.error_ = new ::p4::config::v1::P4ErrorType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.error)
  return type_spec_.error_;
}
::p4::config::v1::P4ErrorType* P4DataTypeSpec::release_error() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.error)
  if (has_error()) {
    clear_has_type_spec();
    ::p4::config::v1::P4ErrorType* temp = type_spec_.error_;
    type_spec_.error_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4DataTypeSpec::set_allocated_error(::p4::config::v1::P4ErrorType* error) {
  clear_type_spec();
  if (error) {
    set_has_error();
    type_spec_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.error)
}

// .p4.config.v1.P4NamedType serializable_enum = 11;
bool P4DataTypeSpec::has_serializable_enum() const {
  return type_spec_case() == kSerializableEnum;
}
void P4DataTypeSpec::set_has_serializable_enum() {
  _oneof_case_[0] = kSerializableEnum;
}
void P4DataTypeSpec::clear_serializable_enum() {
  if (has_serializable_enum()) {
    delete type_spec_.serializable_enum_;
    clear_has_type_spec();
  }
}
 const ::p4::config::v1::P4NamedType& P4DataTypeSpec::serializable_enum() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.serializable_enum)
  return has_serializable_enum()
      ? *type_spec_.serializable_enum_
      : ::p4::config::v1::P4NamedType::default_instance();
}
::p4::config::v1::P4NamedType* P4DataTypeSpec::mutable_serializable_enum() {
  if (!has_serializable_enum()) {
    clear_type_spec();
    set_has_serializable_enum();
    type_spec_.serializable_enum_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.serializable_enum)
  return type_spec_.serializable_enum_;
}
::p4::config::v1::P4NamedType* P4DataTypeSpec::release_serializable_enum() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.serializable_enum)
  if (has_serializable_enum()) {
    clear_has_type_spec();
    ::p4::config::v1::P4NamedType* temp = type_spec_.serializable_enum_;
    type_spec_.serializable_enum_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4DataTypeSpec::set_allocated_serializable_enum(::p4::config::v1::P4NamedType* serializable_enum) {
  clear_type_spec();
  if (serializable_enum) {
    set_has_serializable_enum();
    type_spec_.serializable_enum_ = serializable_enum;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.serializable_enum)
}

// .p4.config.v1.P4NamedType new_type = 12;
bool P4DataTypeSpec::has_new_type() const {
  return type_spec_case() == kNewType;
}
void P4DataTypeSpec::set_has_new_type() {
  _oneof_case_[0] = kNewType;
}
void P4DataTypeSpec::clear_new_type() {
  if (has_new_type()) {
    delete type_spec_.new_type_;
    clear_has_type_spec();
  }
}
 const ::p4::config::v1::P4NamedType& P4DataTypeSpec::new_type() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.new_type)
  return has_new_type()
      ? *type_spec_.new_type_
      : ::p4::config::v1::P4NamedType::default_instance();
}
::p4::config::v1::P4NamedType* P4DataTypeSpec::mutable_new_type() {
  if (!has_new_type()) {
    clear_type_spec();
    set_has_new_type();
    type_spec_.new_type_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.new_type)
  return type_spec_.new_type_;
}
::p4::config::v1::P4NamedType* P4DataTypeSpec::release_new_type() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.new_type)
  if (has_new_type()) {
    clear_has_type_spec();
    ::p4::config::v1::P4NamedType* temp = type_spec_.new_type_;
    type_spec_.new_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4DataTypeSpec::set_allocated_new_type(::p4::config::v1::P4NamedType* new_type) {
  clear_type_spec();
  if (new_type) {
    set_has_new_type();
    type_spec_.new_type_ = new_type;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.new_type)
}

bool P4DataTypeSpec::has_type_spec() const {
  return type_spec_case() != TYPE_SPEC_NOT_SET;
}
void P4DataTypeSpec::clear_has_type_spec() {
  _oneof_case_[0] = TYPE_SPEC_NOT_SET;
}
P4DataTypeSpec::TypeSpecCase P4DataTypeSpec::type_spec_case() const {
  return P4DataTypeSpec::TypeSpecCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4NamedType::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4NamedType::P4NamedType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4NamedType)
}
P4NamedType::P4NamedType(const P4NamedType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4NamedType)
}

void P4NamedType::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

P4NamedType::~P4NamedType() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4NamedType)
  SharedDtor();
}

void P4NamedType::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void P4NamedType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4NamedType::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[8].descriptor;
}

const P4NamedType& P4NamedType::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4NamedType* P4NamedType::New(::google::protobuf::Arena* arena) const {
  P4NamedType* n = new P4NamedType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4NamedType::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4NamedType)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool P4NamedType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4NamedType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4NamedType.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4NamedType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4NamedType)
  return false;
#undef DO_
}

void P4NamedType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4NamedType)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4NamedType.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4NamedType)
}

::google::protobuf::uint8* P4NamedType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4NamedType)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4NamedType.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4NamedType)
  return target;
}

size_t P4NamedType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4NamedType)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4NamedType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4NamedType)
  GOOGLE_DCHECK_NE(&from, this);
  const P4NamedType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4NamedType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4NamedType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4NamedType)
    MergeFrom(*source);
  }
}

void P4NamedType::MergeFrom(const P4NamedType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4NamedType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void P4NamedType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4NamedType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4NamedType::CopyFrom(const P4NamedType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4NamedType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4NamedType::IsInitialized() const {
  return true;
}

void P4NamedType::Swap(P4NamedType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4NamedType::InternalSwap(P4NamedType* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4NamedType::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4NamedType

// string name = 1;
void P4NamedType::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P4NamedType::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4NamedType.name)
  return name_.GetNoArena();
}
void P4NamedType::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.P4NamedType.name)
}
#if LANG_CXX11
void P4NamedType::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.P4NamedType.name)
}
#endif
void P4NamedType::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4NamedType.name)
}
void P4NamedType::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4NamedType.name)
}
::std::string* P4NamedType::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4NamedType.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P4NamedType::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4NamedType.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P4NamedType::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4NamedType.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4BoolType::P4BoolType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4BoolType)
}
P4BoolType::P4BoolType(const P4BoolType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4BoolType)
}

void P4BoolType::SharedCtor() {
  _cached_size_ = 0;
}

P4BoolType::~P4BoolType() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4BoolType)
  SharedDtor();
}

void P4BoolType::SharedDtor() {
}

void P4BoolType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4BoolType::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[9].descriptor;
}

const P4BoolType& P4BoolType::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4BoolType* P4BoolType::New(::google::protobuf::Arena* arena) const {
  P4BoolType* n = new P4BoolType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4BoolType::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4BoolType)
}

bool P4BoolType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4BoolType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4BoolType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4BoolType)
  return false;
#undef DO_
}

void P4BoolType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4BoolType)
  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4BoolType)
}

::google::protobuf::uint8* P4BoolType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4BoolType)
  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4BoolType)
  return target;
}

size_t P4BoolType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4BoolType)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4BoolType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4BoolType)
  GOOGLE_DCHECK_NE(&from, this);
  const P4BoolType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4BoolType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4BoolType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4BoolType)
    MergeFrom(*source);
  }
}

void P4BoolType::MergeFrom(const P4BoolType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4BoolType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void P4BoolType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4BoolType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4BoolType::CopyFrom(const P4BoolType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4BoolType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4BoolType::IsInitialized() const {
  return true;
}

void P4BoolType::Swap(P4BoolType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4BoolType::InternalSwap(P4BoolType* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4BoolType::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4BoolType

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4ErrorType::P4ErrorType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4ErrorType)
}
P4ErrorType::P4ErrorType(const P4ErrorType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4ErrorType)
}

void P4ErrorType::SharedCtor() {
  _cached_size_ = 0;
}

P4ErrorType::~P4ErrorType() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4ErrorType)
  SharedDtor();
}

void P4ErrorType::SharedDtor() {
}

void P4ErrorType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4ErrorType::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[10].descriptor;
}

const P4ErrorType& P4ErrorType::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4ErrorType* P4ErrorType::New(::google::protobuf::Arena* arena) const {
  P4ErrorType* n = new P4ErrorType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4ErrorType::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4ErrorType)
}

bool P4ErrorType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4ErrorType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4ErrorType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4ErrorType)
  return false;
#undef DO_
}

void P4ErrorType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4ErrorType)
  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4ErrorType)
}

::google::protobuf::uint8* P4ErrorType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4ErrorType)
  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4ErrorType)
  return target;
}

size_t P4ErrorType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4ErrorType)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4ErrorType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4ErrorType)
  GOOGLE_DCHECK_NE(&from, this);
  const P4ErrorType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4ErrorType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4ErrorType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4ErrorType)
    MergeFrom(*source);
  }
}

void P4ErrorType::MergeFrom(const P4ErrorType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4ErrorType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void P4ErrorType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4ErrorType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4ErrorType::CopyFrom(const P4ErrorType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4ErrorType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4ErrorType::IsInitialized() const {
  return true;
}

void P4ErrorType::Swap(P4ErrorType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4ErrorType::InternalSwap(P4ErrorType* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4ErrorType::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4ErrorType

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4BitstringLikeTypeSpec::kBitFieldNumber;
const int P4BitstringLikeTypeSpec::kIntFieldNumber;
const int P4BitstringLikeTypeSpec::kVarbitFieldNumber;
const int P4BitstringLikeTypeSpec::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4BitstringLikeTypeSpec::P4BitstringLikeTypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4BitstringLikeTypeSpec)
}
P4BitstringLikeTypeSpec::P4BitstringLikeTypeSpec(const P4BitstringLikeTypeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      annotations_(from.annotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type_spec();
  switch (from.type_spec_case()) {
    case kBit: {
      mutable_bit()->::p4::config::v1::P4BitTypeSpec::MergeFrom(from.bit());
      break;
    }
    case kInt: {
      mutable_int_()->::p4::config::v1::P4IntTypeSpec::MergeFrom(from.int_());
      break;
    }
    case kVarbit: {
      mutable_varbit()->::p4::config::v1::P4VarbitTypeSpec::MergeFrom(from.varbit());
      break;
    }
    case TYPE_SPEC_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4BitstringLikeTypeSpec)
}

void P4BitstringLikeTypeSpec::SharedCtor() {
  clear_has_type_spec();
  _cached_size_ = 0;
}

P4BitstringLikeTypeSpec::~P4BitstringLikeTypeSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4BitstringLikeTypeSpec)
  SharedDtor();
}

void P4BitstringLikeTypeSpec::SharedDtor() {
  if (has_type_spec()) {
    clear_type_spec();
  }
}

void P4BitstringLikeTypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4BitstringLikeTypeSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[11].descriptor;
}

const P4BitstringLikeTypeSpec& P4BitstringLikeTypeSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4BitstringLikeTypeSpec* P4BitstringLikeTypeSpec::New(::google::protobuf::Arena* arena) const {
  P4BitstringLikeTypeSpec* n = new P4BitstringLikeTypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4BitstringLikeTypeSpec::clear_type_spec() {
// @@protoc_insertion_point(one_of_clear_start:p4.config.v1.P4BitstringLikeTypeSpec)
  switch (type_spec_case()) {
    case kBit: {
      delete type_spec_.bit_;
      break;
    }
    case kInt: {
      delete type_spec_.int__;
      break;
    }
    case kVarbit: {
      delete type_spec_.varbit_;
      break;
    }
    case TYPE_SPEC_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_SPEC_NOT_SET;
}


void P4BitstringLikeTypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4BitstringLikeTypeSpec)
  annotations_.Clear();
  clear_type_spec();
}

bool P4BitstringLikeTypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4BitstringLikeTypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.P4BitTypeSpec bit = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4IntTypeSpec int = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_int_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4VarbitTypeSpec varbit = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_varbit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string annotations = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_annotations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotations(this->annotations_size() - 1).data(),
            this->annotations(this->annotations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4BitstringLikeTypeSpec.annotations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4BitstringLikeTypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4BitstringLikeTypeSpec)
  return false;
#undef DO_
}

void P4BitstringLikeTypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4BitstringLikeTypeSpec)
  // .p4.config.v1.P4BitTypeSpec bit = 1;
  if (has_bit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *type_spec_.bit_, output);
  }

  // .p4.config.v1.P4IntTypeSpec int = 2;
  if (has_int_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *type_spec_.int__, output);
  }

  // .p4.config.v1.P4VarbitTypeSpec varbit = 3;
  if (has_varbit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *type_spec_.varbit_, output);
  }

  // repeated string annotations = 4;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4BitstringLikeTypeSpec.annotations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->annotations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4BitstringLikeTypeSpec)
}

::google::protobuf::uint8* P4BitstringLikeTypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4BitstringLikeTypeSpec)
  // .p4.config.v1.P4BitTypeSpec bit = 1;
  if (has_bit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *type_spec_.bit_, false, target);
  }

  // .p4.config.v1.P4IntTypeSpec int = 2;
  if (has_int_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *type_spec_.int__, false, target);
  }

  // .p4.config.v1.P4VarbitTypeSpec varbit = 3;
  if (has_varbit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *type_spec_.varbit_, false, target);
  }

  // repeated string annotations = 4;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4BitstringLikeTypeSpec.annotations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->annotations(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4BitstringLikeTypeSpec)
  return target;
}

size_t P4BitstringLikeTypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4BitstringLikeTypeSpec)
  size_t total_size = 0;

  // repeated string annotations = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  for (int i = 0; i < this->annotations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->annotations(i));
  }

  switch (type_spec_case()) {
    // .p4.config.v1.P4BitTypeSpec bit = 1;
    case kBit: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_spec_.bit_);
      break;
    }
    // .p4.config.v1.P4IntTypeSpec int = 2;
    case kInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_spec_.int__);
      break;
    }
    // .p4.config.v1.P4VarbitTypeSpec varbit = 3;
    case kVarbit: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *type_spec_.varbit_);
      break;
    }
    case TYPE_SPEC_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4BitstringLikeTypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4BitstringLikeTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const P4BitstringLikeTypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4BitstringLikeTypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4BitstringLikeTypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4BitstringLikeTypeSpec)
    MergeFrom(*source);
  }
}

void P4BitstringLikeTypeSpec::MergeFrom(const P4BitstringLikeTypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4BitstringLikeTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotations_.MergeFrom(from.annotations_);
  switch (from.type_spec_case()) {
    case kBit: {
      mutable_bit()->::p4::config::v1::P4BitTypeSpec::MergeFrom(from.bit());
      break;
    }
    case kInt: {
      mutable_int_()->::p4::config::v1::P4IntTypeSpec::MergeFrom(from.int_());
      break;
    }
    case kVarbit: {
      mutable_varbit()->::p4::config::v1::P4VarbitTypeSpec::MergeFrom(from.varbit());
      break;
    }
    case TYPE_SPEC_NOT_SET: {
      break;
    }
  }
}

void P4BitstringLikeTypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4BitstringLikeTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4BitstringLikeTypeSpec::CopyFrom(const P4BitstringLikeTypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4BitstringLikeTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4BitstringLikeTypeSpec::IsInitialized() const {
  return true;
}

void P4BitstringLikeTypeSpec::Swap(P4BitstringLikeTypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4BitstringLikeTypeSpec::InternalSwap(P4BitstringLikeTypeSpec* other) {
  annotations_.UnsafeArenaSwap(&other->annotations_);
  std::swap(type_spec_, other->type_spec_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4BitstringLikeTypeSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4BitstringLikeTypeSpec

// .p4.config.v1.P4BitTypeSpec bit = 1;
bool P4BitstringLikeTypeSpec::has_bit() const {
  return type_spec_case() == kBit;
}
void P4BitstringLikeTypeSpec::set_has_bit() {
  _oneof_case_[0] = kBit;
}
void P4BitstringLikeTypeSpec::clear_bit() {
  if (has_bit()) {
    delete type_spec_.bit_;
    clear_has_type_spec();
  }
}
 const ::p4::config::v1::P4BitTypeSpec& P4BitstringLikeTypeSpec::bit() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4BitstringLikeTypeSpec.bit)
  return has_bit()
      ? *type_spec_.bit_
      : ::p4::config::v1::P4BitTypeSpec::default_instance();
}
::p4::config::v1::P4BitTypeSpec* P4BitstringLikeTypeSpec::mutable_bit() {
  if (!has_bit()) {
    clear_type_spec();
    set_has_bit();
    type_spec_.bit_ = new ::p4::config::v1::P4BitTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4BitstringLikeTypeSpec.bit)
  return type_spec_.bit_;
}
::p4::config::v1::P4BitTypeSpec* P4BitstringLikeTypeSpec::release_bit() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4BitstringLikeTypeSpec.bit)
  if (has_bit()) {
    clear_has_type_spec();
    ::p4::config::v1::P4BitTypeSpec* temp = type_spec_.bit_;
    type_spec_.bit_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4BitstringLikeTypeSpec::set_allocated_bit(::p4::config::v1::P4BitTypeSpec* bit) {
  clear_type_spec();
  if (bit) {
    set_has_bit();
    type_spec_.bit_ = bit;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4BitstringLikeTypeSpec.bit)
}

// .p4.config.v1.P4IntTypeSpec int = 2;
bool P4BitstringLikeTypeSpec::has_int_() const {
  return type_spec_case() == kInt;
}
void P4BitstringLikeTypeSpec::set_has_int_() {
  _oneof_case_[0] = kInt;
}
void P4BitstringLikeTypeSpec::clear_int_() {
  if (has_int_()) {
    delete type_spec_.int__;
    clear_has_type_spec();
  }
}
 const ::p4::config::v1::P4IntTypeSpec& P4BitstringLikeTypeSpec::int_() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4BitstringLikeTypeSpec.int)
  return has_int_()
      ? *type_spec_.int__
      : ::p4::config::v1::P4IntTypeSpec::default_instance();
}
::p4::config::v1::P4IntTypeSpec* P4BitstringLikeTypeSpec::mutable_int_() {
  if (!has_int_()) {
    clear_type_spec();
    set_has_int_();
    type_spec_.int__ = new ::p4::config::v1::P4IntTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4BitstringLikeTypeSpec.int)
  return type_spec_.int__;
}
::p4::config::v1::P4IntTypeSpec* P4BitstringLikeTypeSpec::release_int_() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4BitstringLikeTypeSpec.int)
  if (has_int_()) {
    clear_has_type_spec();
    ::p4::config::v1::P4IntTypeSpec* temp = type_spec_.int__;
    type_spec_.int__ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4BitstringLikeTypeSpec::set_allocated_int_(::p4::config::v1::P4IntTypeSpec* int_) {
  clear_type_spec();
  if (int_) {
    set_has_int_();
    type_spec_.int__ = int_;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4BitstringLikeTypeSpec.int)
}

// .p4.config.v1.P4VarbitTypeSpec varbit = 3;
bool P4BitstringLikeTypeSpec::has_varbit() const {
  return type_spec_case() == kVarbit;
}
void P4BitstringLikeTypeSpec::set_has_varbit() {
  _oneof_case_[0] = kVarbit;
}
void P4BitstringLikeTypeSpec::clear_varbit() {
  if (has_varbit()) {
    delete type_spec_.varbit_;
    clear_has_type_spec();
  }
}
 const ::p4::config::v1::P4VarbitTypeSpec& P4BitstringLikeTypeSpec::varbit() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4BitstringLikeTypeSpec.varbit)
  return has_varbit()
      ? *type_spec_.varbit_
      : ::p4::config::v1::P4VarbitTypeSpec::default_instance();
}
::p4::config::v1::P4VarbitTypeSpec* P4BitstringLikeTypeSpec::mutable_varbit() {
  if (!has_varbit()) {
    clear_type_spec();
    set_has_varbit();
    type_spec_.varbit_ = new ::p4::config::v1::P4VarbitTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4BitstringLikeTypeSpec.varbit)
  return type_spec_.varbit_;
}
::p4::config::v1::P4VarbitTypeSpec* P4BitstringLikeTypeSpec::release_varbit() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4BitstringLikeTypeSpec.varbit)
  if (has_varbit()) {
    clear_has_type_spec();
    ::p4::config::v1::P4VarbitTypeSpec* temp = type_spec_.varbit_;
    type_spec_.varbit_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4BitstringLikeTypeSpec::set_allocated_varbit(::p4::config::v1::P4VarbitTypeSpec* varbit) {
  clear_type_spec();
  if (varbit) {
    set_has_varbit();
    type_spec_.varbit_ = varbit;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4BitstringLikeTypeSpec.varbit)
}

// repeated string annotations = 4;
int P4BitstringLikeTypeSpec::annotations_size() const {
  return annotations_.size();
}
void P4BitstringLikeTypeSpec::clear_annotations() {
  annotations_.Clear();
}
const ::std::string& P4BitstringLikeTypeSpec::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
  return annotations_.Get(index);
}
::std::string* P4BitstringLikeTypeSpec::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
  return annotations_.Mutable(index);
}
void P4BitstringLikeTypeSpec::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
  annotations_.Mutable(index)->assign(value);
}
void P4BitstringLikeTypeSpec::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
}
void P4BitstringLikeTypeSpec::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
}
::std::string* P4BitstringLikeTypeSpec::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
  return annotations_.Add();
}
void P4BitstringLikeTypeSpec::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
}
void P4BitstringLikeTypeSpec::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
}
void P4BitstringLikeTypeSpec::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4BitstringLikeTypeSpec::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
  return annotations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
P4BitstringLikeTypeSpec::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
  return &annotations_;
}

bool P4BitstringLikeTypeSpec::has_type_spec() const {
  return type_spec_case() != TYPE_SPEC_NOT_SET;
}
void P4BitstringLikeTypeSpec::clear_has_type_spec() {
  _oneof_case_[0] = TYPE_SPEC_NOT_SET;
}
P4BitstringLikeTypeSpec::TypeSpecCase P4BitstringLikeTypeSpec::type_spec_case() const {
  return P4BitstringLikeTypeSpec::TypeSpecCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4BitTypeSpec::kBitwidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4BitTypeSpec::P4BitTypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4BitTypeSpec)
}
P4BitTypeSpec::P4BitTypeSpec(const P4BitTypeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bitwidth_ = from.bitwidth_;
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4BitTypeSpec)
}

void P4BitTypeSpec::SharedCtor() {
  bitwidth_ = 0;
  _cached_size_ = 0;
}

P4BitTypeSpec::~P4BitTypeSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4BitTypeSpec)
  SharedDtor();
}

void P4BitTypeSpec::SharedDtor() {
}

void P4BitTypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4BitTypeSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[12].descriptor;
}

const P4BitTypeSpec& P4BitTypeSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4BitTypeSpec* P4BitTypeSpec::New(::google::protobuf::Arena* arena) const {
  P4BitTypeSpec* n = new P4BitTypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4BitTypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4BitTypeSpec)
  bitwidth_ = 0;
}

bool P4BitTypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4BitTypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 bitwidth = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bitwidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4BitTypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4BitTypeSpec)
  return false;
#undef DO_
}

void P4BitTypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4BitTypeSpec)
  // int32 bitwidth = 1;
  if (this->bitwidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bitwidth(), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4BitTypeSpec)
}

::google::protobuf::uint8* P4BitTypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4BitTypeSpec)
  // int32 bitwidth = 1;
  if (this->bitwidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bitwidth(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4BitTypeSpec)
  return target;
}

size_t P4BitTypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4BitTypeSpec)
  size_t total_size = 0;

  // int32 bitwidth = 1;
  if (this->bitwidth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bitwidth());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4BitTypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4BitTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const P4BitTypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4BitTypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4BitTypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4BitTypeSpec)
    MergeFrom(*source);
  }
}

void P4BitTypeSpec::MergeFrom(const P4BitTypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4BitTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.bitwidth() != 0) {
    set_bitwidth(from.bitwidth());
  }
}

void P4BitTypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4BitTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4BitTypeSpec::CopyFrom(const P4BitTypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4BitTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4BitTypeSpec::IsInitialized() const {
  return true;
}

void P4BitTypeSpec::Swap(P4BitTypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4BitTypeSpec::InternalSwap(P4BitTypeSpec* other) {
  std::swap(bitwidth_, other->bitwidth_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4BitTypeSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4BitTypeSpec

// int32 bitwidth = 1;
void P4BitTypeSpec::clear_bitwidth() {
  bitwidth_ = 0;
}
::google::protobuf::int32 P4BitTypeSpec::bitwidth() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4BitTypeSpec.bitwidth)
  return bitwidth_;
}
void P4BitTypeSpec::set_bitwidth(::google::protobuf::int32 value) {
  
  bitwidth_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.P4BitTypeSpec.bitwidth)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4IntTypeSpec::kBitwidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4IntTypeSpec::P4IntTypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4IntTypeSpec)
}
P4IntTypeSpec::P4IntTypeSpec(const P4IntTypeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bitwidth_ = from.bitwidth_;
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4IntTypeSpec)
}

void P4IntTypeSpec::SharedCtor() {
  bitwidth_ = 0;
  _cached_size_ = 0;
}

P4IntTypeSpec::~P4IntTypeSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4IntTypeSpec)
  SharedDtor();
}

void P4IntTypeSpec::SharedDtor() {
}

void P4IntTypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4IntTypeSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[13].descriptor;
}

const P4IntTypeSpec& P4IntTypeSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4IntTypeSpec* P4IntTypeSpec::New(::google::protobuf::Arena* arena) const {
  P4IntTypeSpec* n = new P4IntTypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4IntTypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4IntTypeSpec)
  bitwidth_ = 0;
}

bool P4IntTypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4IntTypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 bitwidth = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bitwidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4IntTypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4IntTypeSpec)
  return false;
#undef DO_
}

void P4IntTypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4IntTypeSpec)
  // int32 bitwidth = 1;
  if (this->bitwidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bitwidth(), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4IntTypeSpec)
}

::google::protobuf::uint8* P4IntTypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4IntTypeSpec)
  // int32 bitwidth = 1;
  if (this->bitwidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bitwidth(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4IntTypeSpec)
  return target;
}

size_t P4IntTypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4IntTypeSpec)
  size_t total_size = 0;

  // int32 bitwidth = 1;
  if (this->bitwidth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bitwidth());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4IntTypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4IntTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const P4IntTypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4IntTypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4IntTypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4IntTypeSpec)
    MergeFrom(*source);
  }
}

void P4IntTypeSpec::MergeFrom(const P4IntTypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4IntTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.bitwidth() != 0) {
    set_bitwidth(from.bitwidth());
  }
}

void P4IntTypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4IntTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4IntTypeSpec::CopyFrom(const P4IntTypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4IntTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4IntTypeSpec::IsInitialized() const {
  return true;
}

void P4IntTypeSpec::Swap(P4IntTypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4IntTypeSpec::InternalSwap(P4IntTypeSpec* other) {
  std::swap(bitwidth_, other->bitwidth_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4IntTypeSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4IntTypeSpec

// int32 bitwidth = 1;
void P4IntTypeSpec::clear_bitwidth() {
  bitwidth_ = 0;
}
::google::protobuf::int32 P4IntTypeSpec::bitwidth() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4IntTypeSpec.bitwidth)
  return bitwidth_;
}
void P4IntTypeSpec::set_bitwidth(::google::protobuf::int32 value) {
  
  bitwidth_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.P4IntTypeSpec.bitwidth)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4VarbitTypeSpec::kMaxBitwidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4VarbitTypeSpec::P4VarbitTypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4VarbitTypeSpec)
}
P4VarbitTypeSpec::P4VarbitTypeSpec(const P4VarbitTypeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  max_bitwidth_ = from.max_bitwidth_;
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4VarbitTypeSpec)
}

void P4VarbitTypeSpec::SharedCtor() {
  max_bitwidth_ = 0;
  _cached_size_ = 0;
}

P4VarbitTypeSpec::~P4VarbitTypeSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4VarbitTypeSpec)
  SharedDtor();
}

void P4VarbitTypeSpec::SharedDtor() {
}

void P4VarbitTypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4VarbitTypeSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[14].descriptor;
}

const P4VarbitTypeSpec& P4VarbitTypeSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4VarbitTypeSpec* P4VarbitTypeSpec::New(::google::protobuf::Arena* arena) const {
  P4VarbitTypeSpec* n = new P4VarbitTypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4VarbitTypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4VarbitTypeSpec)
  max_bitwidth_ = 0;
}

bool P4VarbitTypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4VarbitTypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 max_bitwidth = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_bitwidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4VarbitTypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4VarbitTypeSpec)
  return false;
#undef DO_
}

void P4VarbitTypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4VarbitTypeSpec)
  // int32 max_bitwidth = 1;
  if (this->max_bitwidth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->max_bitwidth(), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4VarbitTypeSpec)
}

::google::protobuf::uint8* P4VarbitTypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4VarbitTypeSpec)
  // int32 max_bitwidth = 1;
  if (this->max_bitwidth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->max_bitwidth(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4VarbitTypeSpec)
  return target;
}

size_t P4VarbitTypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4VarbitTypeSpec)
  size_t total_size = 0;

  // int32 max_bitwidth = 1;
  if (this->max_bitwidth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_bitwidth());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4VarbitTypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4VarbitTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const P4VarbitTypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4VarbitTypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4VarbitTypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4VarbitTypeSpec)
    MergeFrom(*source);
  }
}

void P4VarbitTypeSpec::MergeFrom(const P4VarbitTypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4VarbitTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.max_bitwidth() != 0) {
    set_max_bitwidth(from.max_bitwidth());
  }
}

void P4VarbitTypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4VarbitTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4VarbitTypeSpec::CopyFrom(const P4VarbitTypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4VarbitTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4VarbitTypeSpec::IsInitialized() const {
  return true;
}

void P4VarbitTypeSpec::Swap(P4VarbitTypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4VarbitTypeSpec::InternalSwap(P4VarbitTypeSpec* other) {
  std::swap(max_bitwidth_, other->max_bitwidth_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4VarbitTypeSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4VarbitTypeSpec

// int32 max_bitwidth = 1;
void P4VarbitTypeSpec::clear_max_bitwidth() {
  max_bitwidth_ = 0;
}
::google::protobuf::int32 P4VarbitTypeSpec::max_bitwidth() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4VarbitTypeSpec.max_bitwidth)
  return max_bitwidth_;
}
void P4VarbitTypeSpec::set_max_bitwidth(::google::protobuf::int32 value) {
  
  max_bitwidth_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.P4VarbitTypeSpec.max_bitwidth)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4TupleTypeSpec::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4TupleTypeSpec::P4TupleTypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4TupleTypeSpec)
}
P4TupleTypeSpec::P4TupleTypeSpec(const P4TupleTypeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4TupleTypeSpec)
}

void P4TupleTypeSpec::SharedCtor() {
  _cached_size_ = 0;
}

P4TupleTypeSpec::~P4TupleTypeSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4TupleTypeSpec)
  SharedDtor();
}

void P4TupleTypeSpec::SharedDtor() {
}

void P4TupleTypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4TupleTypeSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[15].descriptor;
}

const P4TupleTypeSpec& P4TupleTypeSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4TupleTypeSpec* P4TupleTypeSpec::New(::google::protobuf::Arena* arena) const {
  P4TupleTypeSpec* n = new P4TupleTypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4TupleTypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4TupleTypeSpec)
  members_.Clear();
}

bool P4TupleTypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4TupleTypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .p4.config.v1.P4DataTypeSpec members = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4TupleTypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4TupleTypeSpec)
  return false;
#undef DO_
}

void P4TupleTypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4TupleTypeSpec)
  // repeated .p4.config.v1.P4DataTypeSpec members = 1;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->members(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4TupleTypeSpec)
}

::google::protobuf::uint8* P4TupleTypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4TupleTypeSpec)
  // repeated .p4.config.v1.P4DataTypeSpec members = 1;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->members(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4TupleTypeSpec)
  return target;
}

size_t P4TupleTypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4TupleTypeSpec)
  size_t total_size = 0;

  // repeated .p4.config.v1.P4DataTypeSpec members = 1;
  {
    unsigned int count = this->members_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->members(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4TupleTypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4TupleTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const P4TupleTypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4TupleTypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4TupleTypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4TupleTypeSpec)
    MergeFrom(*source);
  }
}

void P4TupleTypeSpec::MergeFrom(const P4TupleTypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4TupleTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  members_.MergeFrom(from.members_);
}

void P4TupleTypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4TupleTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4TupleTypeSpec::CopyFrom(const P4TupleTypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4TupleTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4TupleTypeSpec::IsInitialized() const {
  return true;
}

void P4TupleTypeSpec::Swap(P4TupleTypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4TupleTypeSpec::InternalSwap(P4TupleTypeSpec* other) {
  members_.UnsafeArenaSwap(&other->members_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4TupleTypeSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4TupleTypeSpec

// repeated .p4.config.v1.P4DataTypeSpec members = 1;
int P4TupleTypeSpec::members_size() const {
  return members_.size();
}
void P4TupleTypeSpec::clear_members() {
  members_.Clear();
}
const ::p4::config::v1::P4DataTypeSpec& P4TupleTypeSpec::members(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4TupleTypeSpec.members)
  return members_.Get(index);
}
::p4::config::v1::P4DataTypeSpec* P4TupleTypeSpec::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4TupleTypeSpec.members)
  return members_.Mutable(index);
}
::p4::config::v1::P4DataTypeSpec* P4TupleTypeSpec::add_members() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4TupleTypeSpec.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4DataTypeSpec >*
P4TupleTypeSpec::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4TupleTypeSpec.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4DataTypeSpec >&
P4TupleTypeSpec::members() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4TupleTypeSpec.members)
  return members_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4StructTypeSpec_Member::kNameFieldNumber;
const int P4StructTypeSpec_Member::kTypeSpecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4StructTypeSpec_Member::P4StructTypeSpec_Member()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4StructTypeSpec.Member)
}
P4StructTypeSpec_Member::P4StructTypeSpec_Member(const P4StructTypeSpec_Member& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type_spec()) {
    type_spec_ = new ::p4::config::v1::P4DataTypeSpec(*from.type_spec_);
  } else {
    type_spec_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4StructTypeSpec.Member)
}

void P4StructTypeSpec_Member::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_spec_ = NULL;
  _cached_size_ = 0;
}

P4StructTypeSpec_Member::~P4StructTypeSpec_Member() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4StructTypeSpec.Member)
  SharedDtor();
}

void P4StructTypeSpec_Member::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete type_spec_;
  }
}

void P4StructTypeSpec_Member::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4StructTypeSpec_Member::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[16].descriptor;
}

const P4StructTypeSpec_Member& P4StructTypeSpec_Member::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4StructTypeSpec_Member* P4StructTypeSpec_Member::New(::google::protobuf::Arena* arena) const {
  P4StructTypeSpec_Member* n = new P4StructTypeSpec_Member;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4StructTypeSpec_Member::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4StructTypeSpec.Member)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && type_spec_ != NULL) {
    delete type_spec_;
  }
  type_spec_ = NULL;
}

bool P4StructTypeSpec_Member::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4StructTypeSpec.Member)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4StructTypeSpec.Member.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4DataTypeSpec type_spec = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4StructTypeSpec.Member)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4StructTypeSpec.Member)
  return false;
#undef DO_
}

void P4StructTypeSpec_Member::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4StructTypeSpec.Member)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4StructTypeSpec.Member.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .p4.config.v1.P4DataTypeSpec type_spec = 2;
  if (this->has_type_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->type_spec_, output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4StructTypeSpec.Member)
}

::google::protobuf::uint8* P4StructTypeSpec_Member::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4StructTypeSpec.Member)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4StructTypeSpec.Member.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .p4.config.v1.P4DataTypeSpec type_spec = 2;
  if (this->has_type_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->type_spec_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4StructTypeSpec.Member)
  return target;
}

size_t P4StructTypeSpec_Member::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4StructTypeSpec.Member)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .p4.config.v1.P4DataTypeSpec type_spec = 2;
  if (this->has_type_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_spec_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4StructTypeSpec_Member::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4StructTypeSpec.Member)
  GOOGLE_DCHECK_NE(&from, this);
  const P4StructTypeSpec_Member* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4StructTypeSpec_Member>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4StructTypeSpec.Member)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4StructTypeSpec.Member)
    MergeFrom(*source);
  }
}

void P4StructTypeSpec_Member::MergeFrom(const P4StructTypeSpec_Member& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4StructTypeSpec.Member)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type_spec()) {
    mutable_type_spec()->::p4::config::v1::P4DataTypeSpec::MergeFrom(from.type_spec());
  }
}

void P4StructTypeSpec_Member::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4StructTypeSpec.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4StructTypeSpec_Member::CopyFrom(const P4StructTypeSpec_Member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4StructTypeSpec.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4StructTypeSpec_Member::IsInitialized() const {
  return true;
}

void P4StructTypeSpec_Member::Swap(P4StructTypeSpec_Member* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4StructTypeSpec_Member::InternalSwap(P4StructTypeSpec_Member* other) {
  name_.Swap(&other->name_);
  std::swap(type_spec_, other->type_spec_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4StructTypeSpec_Member::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[16];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4StructTypeSpec_Member

// string name = 1;
void P4StructTypeSpec_Member::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P4StructTypeSpec_Member::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4StructTypeSpec.Member.name)
  return name_.GetNoArena();
}
void P4StructTypeSpec_Member::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.P4StructTypeSpec.Member.name)
}
#if LANG_CXX11
void P4StructTypeSpec_Member::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.P4StructTypeSpec.Member.name)
}
#endif
void P4StructTypeSpec_Member::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4StructTypeSpec.Member.name)
}
void P4StructTypeSpec_Member::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4StructTypeSpec.Member.name)
}
::std::string* P4StructTypeSpec_Member::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4StructTypeSpec.Member.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P4StructTypeSpec_Member::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4StructTypeSpec.Member.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P4StructTypeSpec_Member::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4StructTypeSpec.Member.name)
}

// .p4.config.v1.P4DataTypeSpec type_spec = 2;
bool P4StructTypeSpec_Member::has_type_spec() const {
  return this != internal_default_instance() && type_spec_ != NULL;
}
void P4StructTypeSpec_Member::clear_type_spec() {
  if (GetArenaNoVirtual() == NULL && type_spec_ != NULL) delete type_spec_;
  type_spec_ = NULL;
}
const ::p4::config::v1::P4DataTypeSpec& P4StructTypeSpec_Member::type_spec() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4StructTypeSpec.Member.type_spec)
  return type_spec_ != NULL ? *type_spec_
                         : *::p4::config::v1::P4DataTypeSpec::internal_default_instance();
}
::p4::config::v1::P4DataTypeSpec* P4StructTypeSpec_Member::mutable_type_spec() {
  
  if (type_spec_ == NULL) {
    type_spec_ = new ::p4::config::v1::P4DataTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4StructTypeSpec.Member.type_spec)
  return type_spec_;
}
::p4::config::v1::P4DataTypeSpec* P4StructTypeSpec_Member::release_type_spec() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4StructTypeSpec.Member.type_spec)
  
  ::p4::config::v1::P4DataTypeSpec* temp = type_spec_;
  type_spec_ = NULL;
  return temp;
}
void P4StructTypeSpec_Member::set_allocated_type_spec(::p4::config::v1::P4DataTypeSpec* type_spec) {
  delete type_spec_;
  type_spec_ = type_spec;
  if (type_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4StructTypeSpec.Member.type_spec)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4StructTypeSpec::kMembersFieldNumber;
const int P4StructTypeSpec::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4StructTypeSpec::P4StructTypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4StructTypeSpec)
}
P4StructTypeSpec::P4StructTypeSpec(const P4StructTypeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_),
      annotations_(from.annotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4StructTypeSpec)
}

void P4StructTypeSpec::SharedCtor() {
  _cached_size_ = 0;
}

P4StructTypeSpec::~P4StructTypeSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4StructTypeSpec)
  SharedDtor();
}

void P4StructTypeSpec::SharedDtor() {
}

void P4StructTypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4StructTypeSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[17].descriptor;
}

const P4StructTypeSpec& P4StructTypeSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4StructTypeSpec* P4StructTypeSpec::New(::google::protobuf::Arena* arena) const {
  P4StructTypeSpec* n = new P4StructTypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4StructTypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4StructTypeSpec)
  members_.Clear();
  annotations_.Clear();
}

bool P4StructTypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4StructTypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .p4.config.v1.P4StructTypeSpec.Member members = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated string annotations = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_annotations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotations(this->annotations_size() - 1).data(),
            this->annotations(this->annotations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4StructTypeSpec.annotations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4StructTypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4StructTypeSpec)
  return false;
#undef DO_
}

void P4StructTypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4StructTypeSpec)
  // repeated .p4.config.v1.P4StructTypeSpec.Member members = 1;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->members(i), output);
  }

  // repeated string annotations = 2;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4StructTypeSpec.annotations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->annotations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4StructTypeSpec)
}

::google::protobuf::uint8* P4StructTypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4StructTypeSpec)
  // repeated .p4.config.v1.P4StructTypeSpec.Member members = 1;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->members(i), false, target);
  }

  // repeated string annotations = 2;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4StructTypeSpec.annotations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->annotations(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4StructTypeSpec)
  return target;
}

size_t P4StructTypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4StructTypeSpec)
  size_t total_size = 0;

  // repeated .p4.config.v1.P4StructTypeSpec.Member members = 1;
  {
    unsigned int count = this->members_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->members(i));
    }
  }

  // repeated string annotations = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  for (int i = 0; i < this->annotations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->annotations(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4StructTypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4StructTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const P4StructTypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4StructTypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4StructTypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4StructTypeSpec)
    MergeFrom(*source);
  }
}

void P4StructTypeSpec::MergeFrom(const P4StructTypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4StructTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  members_.MergeFrom(from.members_);
  annotations_.MergeFrom(from.annotations_);
}

void P4StructTypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4StructTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4StructTypeSpec::CopyFrom(const P4StructTypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4StructTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4StructTypeSpec::IsInitialized() const {
  return true;
}

void P4StructTypeSpec::Swap(P4StructTypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4StructTypeSpec::InternalSwap(P4StructTypeSpec* other) {
  members_.UnsafeArenaSwap(&other->members_);
  annotations_.UnsafeArenaSwap(&other->annotations_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4StructTypeSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[17];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4StructTypeSpec

// repeated .p4.config.v1.P4StructTypeSpec.Member members = 1;
int P4StructTypeSpec::members_size() const {
  return members_.size();
}
void P4StructTypeSpec::clear_members() {
  members_.Clear();
}
const ::p4::config::v1::P4StructTypeSpec_Member& P4StructTypeSpec::members(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4StructTypeSpec.members)
  return members_.Get(index);
}
::p4::config::v1::P4StructTypeSpec_Member* P4StructTypeSpec::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4StructTypeSpec.members)
  return members_.Mutable(index);
}
::p4::config::v1::P4StructTypeSpec_Member* P4StructTypeSpec::add_members() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4StructTypeSpec.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4StructTypeSpec_Member >*
P4StructTypeSpec::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4StructTypeSpec.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4StructTypeSpec_Member >&
P4StructTypeSpec::members() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4StructTypeSpec.members)
  return members_;
}

// repeated string annotations = 2;
int P4StructTypeSpec::annotations_size() const {
  return annotations_.size();
}
void P4StructTypeSpec::clear_annotations() {
  annotations_.Clear();
}
const ::std::string& P4StructTypeSpec::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4StructTypeSpec.annotations)
  return annotations_.Get(index);
}
::std::string* P4StructTypeSpec::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4StructTypeSpec.annotations)
  return annotations_.Mutable(index);
}
void P4StructTypeSpec::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4StructTypeSpec.annotations)
  annotations_.Mutable(index)->assign(value);
}
void P4StructTypeSpec::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4StructTypeSpec.annotations)
}
void P4StructTypeSpec::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4StructTypeSpec.annotations)
}
::std::string* P4StructTypeSpec::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4StructTypeSpec.annotations)
  return annotations_.Add();
}
void P4StructTypeSpec::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4StructTypeSpec.annotations)
}
void P4StructTypeSpec::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4StructTypeSpec.annotations)
}
void P4StructTypeSpec::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4StructTypeSpec.annotations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4StructTypeSpec::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4StructTypeSpec.annotations)
  return annotations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
P4StructTypeSpec::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4StructTypeSpec.annotations)
  return &annotations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4HeaderTypeSpec_Member::kNameFieldNumber;
const int P4HeaderTypeSpec_Member::kTypeSpecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4HeaderTypeSpec_Member::P4HeaderTypeSpec_Member()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4HeaderTypeSpec.Member)
}
P4HeaderTypeSpec_Member::P4HeaderTypeSpec_Member(const P4HeaderTypeSpec_Member& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type_spec()) {
    type_spec_ = new ::p4::config::v1::P4BitstringLikeTypeSpec(*from.type_spec_);
  } else {
    type_spec_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4HeaderTypeSpec.Member)
}

void P4HeaderTypeSpec_Member::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_spec_ = NULL;
  _cached_size_ = 0;
}

P4HeaderTypeSpec_Member::~P4HeaderTypeSpec_Member() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4HeaderTypeSpec.Member)
  SharedDtor();
}

void P4HeaderTypeSpec_Member::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete type_spec_;
  }
}

void P4HeaderTypeSpec_Member::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4HeaderTypeSpec_Member::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[18].descriptor;
}

const P4HeaderTypeSpec_Member& P4HeaderTypeSpec_Member::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4HeaderTypeSpec_Member* P4HeaderTypeSpec_Member::New(::google::protobuf::Arena* arena) const {
  P4HeaderTypeSpec_Member* n = new P4HeaderTypeSpec_Member;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4HeaderTypeSpec_Member::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4HeaderTypeSpec.Member)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && type_spec_ != NULL) {
    delete type_spec_;
  }
  type_spec_ = NULL;
}

bool P4HeaderTypeSpec_Member::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4HeaderTypeSpec.Member)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4HeaderTypeSpec.Member.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4BitstringLikeTypeSpec type_spec = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4HeaderTypeSpec.Member)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4HeaderTypeSpec.Member)
  return false;
#undef DO_
}

void P4HeaderTypeSpec_Member::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4HeaderTypeSpec.Member)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4HeaderTypeSpec.Member.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .p4.config.v1.P4BitstringLikeTypeSpec type_spec = 2;
  if (this->has_type_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->type_spec_, output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4HeaderTypeSpec.Member)
}

::google::protobuf::uint8* P4HeaderTypeSpec_Member::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4HeaderTypeSpec.Member)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4HeaderTypeSpec.Member.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .p4.config.v1.P4BitstringLikeTypeSpec type_spec = 2;
  if (this->has_type_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->type_spec_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4HeaderTypeSpec.Member)
  return target;
}

size_t P4HeaderTypeSpec_Member::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4HeaderTypeSpec.Member)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .p4.config.v1.P4BitstringLikeTypeSpec type_spec = 2;
  if (this->has_type_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->type_spec_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4HeaderTypeSpec_Member::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4HeaderTypeSpec.Member)
  GOOGLE_DCHECK_NE(&from, this);
  const P4HeaderTypeSpec_Member* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4HeaderTypeSpec_Member>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4HeaderTypeSpec.Member)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4HeaderTypeSpec.Member)
    MergeFrom(*source);
  }
}

void P4HeaderTypeSpec_Member::MergeFrom(const P4HeaderTypeSpec_Member& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4HeaderTypeSpec.Member)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type_spec()) {
    mutable_type_spec()->::p4::config::v1::P4BitstringLikeTypeSpec::MergeFrom(from.type_spec());
  }
}

void P4HeaderTypeSpec_Member::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4HeaderTypeSpec.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4HeaderTypeSpec_Member::CopyFrom(const P4HeaderTypeSpec_Member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4HeaderTypeSpec.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4HeaderTypeSpec_Member::IsInitialized() const {
  return true;
}

void P4HeaderTypeSpec_Member::Swap(P4HeaderTypeSpec_Member* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4HeaderTypeSpec_Member::InternalSwap(P4HeaderTypeSpec_Member* other) {
  name_.Swap(&other->name_);
  std::swap(type_spec_, other->type_spec_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4HeaderTypeSpec_Member::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[18];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4HeaderTypeSpec_Member

// string name = 1;
void P4HeaderTypeSpec_Member::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P4HeaderTypeSpec_Member::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderTypeSpec.Member.name)
  return name_.GetNoArena();
}
void P4HeaderTypeSpec_Member::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.P4HeaderTypeSpec.Member.name)
}
#if LANG_CXX11
void P4HeaderTypeSpec_Member::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.P4HeaderTypeSpec.Member.name)
}
#endif
void P4HeaderTypeSpec_Member::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4HeaderTypeSpec.Member.name)
}
void P4HeaderTypeSpec_Member::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4HeaderTypeSpec.Member.name)
}
::std::string* P4HeaderTypeSpec_Member::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderTypeSpec.Member.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P4HeaderTypeSpec_Member::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4HeaderTypeSpec.Member.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P4HeaderTypeSpec_Member::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4HeaderTypeSpec.Member.name)
}

// .p4.config.v1.P4BitstringLikeTypeSpec type_spec = 2;
bool P4HeaderTypeSpec_Member::has_type_spec() const {
  return this != internal_default_instance() && type_spec_ != NULL;
}
void P4HeaderTypeSpec_Member::clear_type_spec() {
  if (GetArenaNoVirtual() == NULL && type_spec_ != NULL) delete type_spec_;
  type_spec_ = NULL;
}
const ::p4::config::v1::P4BitstringLikeTypeSpec& P4HeaderTypeSpec_Member::type_spec() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderTypeSpec.Member.type_spec)
  return type_spec_ != NULL ? *type_spec_
                         : *::p4::config::v1::P4BitstringLikeTypeSpec::internal_default_instance();
}
::p4::config::v1::P4BitstringLikeTypeSpec* P4HeaderTypeSpec_Member::mutable_type_spec() {
  
  if (type_spec_ == NULL) {
    type_spec_ = new ::p4::config::v1::P4BitstringLikeTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderTypeSpec.Member.type_spec)
  return type_spec_;
}
::p4::config::v1::P4BitstringLikeTypeSpec* P4HeaderTypeSpec_Member::release_type_spec() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4HeaderTypeSpec.Member.type_spec)
  
  ::p4::config::v1::P4BitstringLikeTypeSpec* temp = type_spec_;
  type_spec_ = NULL;
  return temp;
}
void P4HeaderTypeSpec_Member::set_allocated_type_spec(::p4::config::v1::P4BitstringLikeTypeSpec* type_spec) {
  delete type_spec_;
  type_spec_ = type_spec;
  if (type_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4HeaderTypeSpec.Member.type_spec)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4HeaderTypeSpec::kMembersFieldNumber;
const int P4HeaderTypeSpec::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4HeaderTypeSpec::P4HeaderTypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4HeaderTypeSpec)
}
P4HeaderTypeSpec::P4HeaderTypeSpec(const P4HeaderTypeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_),
      annotations_(from.annotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4HeaderTypeSpec)
}

void P4HeaderTypeSpec::SharedCtor() {
  _cached_size_ = 0;
}

P4HeaderTypeSpec::~P4HeaderTypeSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4HeaderTypeSpec)
  SharedDtor();
}

void P4HeaderTypeSpec::SharedDtor() {
}

void P4HeaderTypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4HeaderTypeSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[19].descriptor;
}

const P4HeaderTypeSpec& P4HeaderTypeSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4HeaderTypeSpec* P4HeaderTypeSpec::New(::google::protobuf::Arena* arena) const {
  P4HeaderTypeSpec* n = new P4HeaderTypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4HeaderTypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4HeaderTypeSpec)
  members_.Clear();
  annotations_.Clear();
}

bool P4HeaderTypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4HeaderTypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .p4.config.v1.P4HeaderTypeSpec.Member members = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated string annotations = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_annotations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotations(this->annotations_size() - 1).data(),
            this->annotations(this->annotations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4HeaderTypeSpec.annotations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4HeaderTypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4HeaderTypeSpec)
  return false;
#undef DO_
}

void P4HeaderTypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4HeaderTypeSpec)
  // repeated .p4.config.v1.P4HeaderTypeSpec.Member members = 1;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->members(i), output);
  }

  // repeated string annotations = 2;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4HeaderTypeSpec.annotations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->annotations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4HeaderTypeSpec)
}

::google::protobuf::uint8* P4HeaderTypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4HeaderTypeSpec)
  // repeated .p4.config.v1.P4HeaderTypeSpec.Member members = 1;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->members(i), false, target);
  }

  // repeated string annotations = 2;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4HeaderTypeSpec.annotations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->annotations(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4HeaderTypeSpec)
  return target;
}

size_t P4HeaderTypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4HeaderTypeSpec)
  size_t total_size = 0;

  // repeated .p4.config.v1.P4HeaderTypeSpec.Member members = 1;
  {
    unsigned int count = this->members_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->members(i));
    }
  }

  // repeated string annotations = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  for (int i = 0; i < this->annotations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->annotations(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4HeaderTypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4HeaderTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const P4HeaderTypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4HeaderTypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4HeaderTypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4HeaderTypeSpec)
    MergeFrom(*source);
  }
}

void P4HeaderTypeSpec::MergeFrom(const P4HeaderTypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4HeaderTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  members_.MergeFrom(from.members_);
  annotations_.MergeFrom(from.annotations_);
}

void P4HeaderTypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4HeaderTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4HeaderTypeSpec::CopyFrom(const P4HeaderTypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4HeaderTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4HeaderTypeSpec::IsInitialized() const {
  return true;
}

void P4HeaderTypeSpec::Swap(P4HeaderTypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4HeaderTypeSpec::InternalSwap(P4HeaderTypeSpec* other) {
  members_.UnsafeArenaSwap(&other->members_);
  annotations_.UnsafeArenaSwap(&other->annotations_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4HeaderTypeSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[19];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4HeaderTypeSpec

// repeated .p4.config.v1.P4HeaderTypeSpec.Member members = 1;
int P4HeaderTypeSpec::members_size() const {
  return members_.size();
}
void P4HeaderTypeSpec::clear_members() {
  members_.Clear();
}
const ::p4::config::v1::P4HeaderTypeSpec_Member& P4HeaderTypeSpec::members(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderTypeSpec.members)
  return members_.Get(index);
}
::p4::config::v1::P4HeaderTypeSpec_Member* P4HeaderTypeSpec::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderTypeSpec.members)
  return members_.Mutable(index);
}
::p4::config::v1::P4HeaderTypeSpec_Member* P4HeaderTypeSpec::add_members() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4HeaderTypeSpec.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4HeaderTypeSpec_Member >*
P4HeaderTypeSpec::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4HeaderTypeSpec.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4HeaderTypeSpec_Member >&
P4HeaderTypeSpec::members() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4HeaderTypeSpec.members)
  return members_;
}

// repeated string annotations = 2;
int P4HeaderTypeSpec::annotations_size() const {
  return annotations_.size();
}
void P4HeaderTypeSpec::clear_annotations() {
  annotations_.Clear();
}
const ::std::string& P4HeaderTypeSpec::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderTypeSpec.annotations)
  return annotations_.Get(index);
}
::std::string* P4HeaderTypeSpec::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderTypeSpec.annotations)
  return annotations_.Mutable(index);
}
void P4HeaderTypeSpec::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4HeaderTypeSpec.annotations)
  annotations_.Mutable(index)->assign(value);
}
void P4HeaderTypeSpec::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4HeaderTypeSpec.annotations)
}
void P4HeaderTypeSpec::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4HeaderTypeSpec.annotations)
}
::std::string* P4HeaderTypeSpec::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4HeaderTypeSpec.annotations)
  return annotations_.Add();
}
void P4HeaderTypeSpec::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4HeaderTypeSpec.annotations)
}
void P4HeaderTypeSpec::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4HeaderTypeSpec.annotations)
}
void P4HeaderTypeSpec::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4HeaderTypeSpec.annotations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4HeaderTypeSpec::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4HeaderTypeSpec.annotations)
  return annotations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
P4HeaderTypeSpec::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4HeaderTypeSpec.annotations)
  return &annotations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4HeaderUnionTypeSpec_Member::kNameFieldNumber;
const int P4HeaderUnionTypeSpec_Member::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4HeaderUnionTypeSpec_Member::P4HeaderUnionTypeSpec_Member()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4HeaderUnionTypeSpec.Member)
}
P4HeaderUnionTypeSpec_Member::P4HeaderUnionTypeSpec_Member(const P4HeaderUnionTypeSpec_Member& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_header()) {
    header_ = new ::p4::config::v1::P4NamedType(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4HeaderUnionTypeSpec.Member)
}

void P4HeaderUnionTypeSpec_Member::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_ = NULL;
  _cached_size_ = 0;
}

P4HeaderUnionTypeSpec_Member::~P4HeaderUnionTypeSpec_Member() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4HeaderUnionTypeSpec.Member)
  SharedDtor();
}

void P4HeaderUnionTypeSpec_Member::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete header_;
  }
}

void P4HeaderUnionTypeSpec_Member::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4HeaderUnionTypeSpec_Member::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[20].descriptor;
}

const P4HeaderUnionTypeSpec_Member& P4HeaderUnionTypeSpec_Member::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4HeaderUnionTypeSpec_Member* P4HeaderUnionTypeSpec_Member::New(::google::protobuf::Arena* arena) const {
  P4HeaderUnionTypeSpec_Member* n = new P4HeaderUnionTypeSpec_Member;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4HeaderUnionTypeSpec_Member::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4HeaderUnionTypeSpec.Member)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}

bool P4HeaderUnionTypeSpec_Member::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4HeaderUnionTypeSpec.Member)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4HeaderUnionTypeSpec.Member.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4NamedType header = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4HeaderUnionTypeSpec.Member)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4HeaderUnionTypeSpec.Member)
  return false;
#undef DO_
}

void P4HeaderUnionTypeSpec_Member::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4HeaderUnionTypeSpec.Member)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4HeaderUnionTypeSpec.Member.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .p4.config.v1.P4NamedType header = 2;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->header_, output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4HeaderUnionTypeSpec.Member)
}

::google::protobuf::uint8* P4HeaderUnionTypeSpec_Member::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4HeaderUnionTypeSpec.Member)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4HeaderUnionTypeSpec.Member.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .p4.config.v1.P4NamedType header = 2;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->header_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4HeaderUnionTypeSpec.Member)
  return target;
}

size_t P4HeaderUnionTypeSpec_Member::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4HeaderUnionTypeSpec.Member)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .p4.config.v1.P4NamedType header = 2;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4HeaderUnionTypeSpec_Member::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4HeaderUnionTypeSpec.Member)
  GOOGLE_DCHECK_NE(&from, this);
  const P4HeaderUnionTypeSpec_Member* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4HeaderUnionTypeSpec_Member>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4HeaderUnionTypeSpec.Member)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4HeaderUnionTypeSpec.Member)
    MergeFrom(*source);
  }
}

void P4HeaderUnionTypeSpec_Member::MergeFrom(const P4HeaderUnionTypeSpec_Member& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4HeaderUnionTypeSpec.Member)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_header()) {
    mutable_header()->::p4::config::v1::P4NamedType::MergeFrom(from.header());
  }
}

void P4HeaderUnionTypeSpec_Member::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4HeaderUnionTypeSpec.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4HeaderUnionTypeSpec_Member::CopyFrom(const P4HeaderUnionTypeSpec_Member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4HeaderUnionTypeSpec.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4HeaderUnionTypeSpec_Member::IsInitialized() const {
  return true;
}

void P4HeaderUnionTypeSpec_Member::Swap(P4HeaderUnionTypeSpec_Member* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4HeaderUnionTypeSpec_Member::InternalSwap(P4HeaderUnionTypeSpec_Member* other) {
  name_.Swap(&other->name_);
  std::swap(header_, other->header_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4HeaderUnionTypeSpec_Member::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[20];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4HeaderUnionTypeSpec_Member

// string name = 1;
void P4HeaderUnionTypeSpec_Member::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P4HeaderUnionTypeSpec_Member::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderUnionTypeSpec.Member.name)
  return name_.GetNoArena();
}
void P4HeaderUnionTypeSpec_Member::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.P4HeaderUnionTypeSpec.Member.name)
}
#if LANG_CXX11
void P4HeaderUnionTypeSpec_Member::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.P4HeaderUnionTypeSpec.Member.name)
}
#endif
void P4HeaderUnionTypeSpec_Member::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4HeaderUnionTypeSpec.Member.name)
}
void P4HeaderUnionTypeSpec_Member::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4HeaderUnionTypeSpec.Member.name)
}
::std::string* P4HeaderUnionTypeSpec_Member::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderUnionTypeSpec.Member.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P4HeaderUnionTypeSpec_Member::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4HeaderUnionTypeSpec.Member.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P4HeaderUnionTypeSpec_Member::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4HeaderUnionTypeSpec.Member.name)
}

// .p4.config.v1.P4NamedType header = 2;
bool P4HeaderUnionTypeSpec_Member::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void P4HeaderUnionTypeSpec_Member::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::p4::config::v1::P4NamedType& P4HeaderUnionTypeSpec_Member::header() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderUnionTypeSpec.Member.header)
  return header_ != NULL ? *header_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
::p4::config::v1::P4NamedType* P4HeaderUnionTypeSpec_Member::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderUnionTypeSpec.Member.header)
  return header_;
}
::p4::config::v1::P4NamedType* P4HeaderUnionTypeSpec_Member::release_header() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4HeaderUnionTypeSpec.Member.header)
  
  ::p4::config::v1::P4NamedType* temp = header_;
  header_ = NULL;
  return temp;
}
void P4HeaderUnionTypeSpec_Member::set_allocated_header(::p4::config::v1::P4NamedType* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4HeaderUnionTypeSpec.Member.header)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4HeaderUnionTypeSpec::kMembersFieldNumber;
const int P4HeaderUnionTypeSpec::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4HeaderUnionTypeSpec::P4HeaderUnionTypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4HeaderUnionTypeSpec)
}
P4HeaderUnionTypeSpec::P4HeaderUnionTypeSpec(const P4HeaderUnionTypeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_),
      annotations_(from.annotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4HeaderUnionTypeSpec)
}

void P4HeaderUnionTypeSpec::SharedCtor() {
  _cached_size_ = 0;
}

P4HeaderUnionTypeSpec::~P4HeaderUnionTypeSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4HeaderUnionTypeSpec)
  SharedDtor();
}

void P4HeaderUnionTypeSpec::SharedDtor() {
}

void P4HeaderUnionTypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4HeaderUnionTypeSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[21].descriptor;
}

const P4HeaderUnionTypeSpec& P4HeaderUnionTypeSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4HeaderUnionTypeSpec* P4HeaderUnionTypeSpec::New(::google::protobuf::Arena* arena) const {
  P4HeaderUnionTypeSpec* n = new P4HeaderUnionTypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4HeaderUnionTypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4HeaderUnionTypeSpec)
  members_.Clear();
  annotations_.Clear();
}

bool P4HeaderUnionTypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4HeaderUnionTypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .p4.config.v1.P4HeaderUnionTypeSpec.Member members = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated string annotations = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_annotations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotations(this->annotations_size() - 1).data(),
            this->annotations(this->annotations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4HeaderUnionTypeSpec.annotations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4HeaderUnionTypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4HeaderUnionTypeSpec)
  return false;
#undef DO_
}

void P4HeaderUnionTypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4HeaderUnionTypeSpec)
  // repeated .p4.config.v1.P4HeaderUnionTypeSpec.Member members = 1;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->members(i), output);
  }

  // repeated string annotations = 2;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4HeaderUnionTypeSpec.annotations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->annotations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4HeaderUnionTypeSpec)
}

::google::protobuf::uint8* P4HeaderUnionTypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4HeaderUnionTypeSpec)
  // repeated .p4.config.v1.P4HeaderUnionTypeSpec.Member members = 1;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->members(i), false, target);
  }

  // repeated string annotations = 2;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4HeaderUnionTypeSpec.annotations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->annotations(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4HeaderUnionTypeSpec)
  return target;
}

size_t P4HeaderUnionTypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4HeaderUnionTypeSpec)
  size_t total_size = 0;

  // repeated .p4.config.v1.P4HeaderUnionTypeSpec.Member members = 1;
  {
    unsigned int count = this->members_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->members(i));
    }
  }

  // repeated string annotations = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  for (int i = 0; i < this->annotations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->annotations(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4HeaderUnionTypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4HeaderUnionTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const P4HeaderUnionTypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4HeaderUnionTypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4HeaderUnionTypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4HeaderUnionTypeSpec)
    MergeFrom(*source);
  }
}

void P4HeaderUnionTypeSpec::MergeFrom(const P4HeaderUnionTypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4HeaderUnionTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  members_.MergeFrom(from.members_);
  annotations_.MergeFrom(from.annotations_);
}

void P4HeaderUnionTypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4HeaderUnionTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4HeaderUnionTypeSpec::CopyFrom(const P4HeaderUnionTypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4HeaderUnionTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4HeaderUnionTypeSpec::IsInitialized() const {
  return true;
}

void P4HeaderUnionTypeSpec::Swap(P4HeaderUnionTypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4HeaderUnionTypeSpec::InternalSwap(P4HeaderUnionTypeSpec* other) {
  members_.UnsafeArenaSwap(&other->members_);
  annotations_.UnsafeArenaSwap(&other->annotations_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4HeaderUnionTypeSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[21];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4HeaderUnionTypeSpec

// repeated .p4.config.v1.P4HeaderUnionTypeSpec.Member members = 1;
int P4HeaderUnionTypeSpec::members_size() const {
  return members_.size();
}
void P4HeaderUnionTypeSpec::clear_members() {
  members_.Clear();
}
const ::p4::config::v1::P4HeaderUnionTypeSpec_Member& P4HeaderUnionTypeSpec::members(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderUnionTypeSpec.members)
  return members_.Get(index);
}
::p4::config::v1::P4HeaderUnionTypeSpec_Member* P4HeaderUnionTypeSpec::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderUnionTypeSpec.members)
  return members_.Mutable(index);
}
::p4::config::v1::P4HeaderUnionTypeSpec_Member* P4HeaderUnionTypeSpec::add_members() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4HeaderUnionTypeSpec.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4HeaderUnionTypeSpec_Member >*
P4HeaderUnionTypeSpec::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4HeaderUnionTypeSpec.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4HeaderUnionTypeSpec_Member >&
P4HeaderUnionTypeSpec::members() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4HeaderUnionTypeSpec.members)
  return members_;
}

// repeated string annotations = 2;
int P4HeaderUnionTypeSpec::annotations_size() const {
  return annotations_.size();
}
void P4HeaderUnionTypeSpec::clear_annotations() {
  annotations_.Clear();
}
const ::std::string& P4HeaderUnionTypeSpec::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
  return annotations_.Get(index);
}
::std::string* P4HeaderUnionTypeSpec::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
  return annotations_.Mutable(index);
}
void P4HeaderUnionTypeSpec::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
  annotations_.Mutable(index)->assign(value);
}
void P4HeaderUnionTypeSpec::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
}
void P4HeaderUnionTypeSpec::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
}
::std::string* P4HeaderUnionTypeSpec::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
  return annotations_.Add();
}
void P4HeaderUnionTypeSpec::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
}
void P4HeaderUnionTypeSpec::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
}
void P4HeaderUnionTypeSpec::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4HeaderUnionTypeSpec::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
  return annotations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
P4HeaderUnionTypeSpec::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
  return &annotations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4HeaderStackTypeSpec::kHeaderFieldNumber;
const int P4HeaderStackTypeSpec::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4HeaderStackTypeSpec::P4HeaderStackTypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4HeaderStackTypeSpec)
}
P4HeaderStackTypeSpec::P4HeaderStackTypeSpec(const P4HeaderStackTypeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::p4::config::v1::P4NamedType(*from.header_);
  } else {
    header_ = NULL;
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4HeaderStackTypeSpec)
}

void P4HeaderStackTypeSpec::SharedCtor() {
  ::memset(&header_, 0, reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&header_) + sizeof(size_));
  _cached_size_ = 0;
}

P4HeaderStackTypeSpec::~P4HeaderStackTypeSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4HeaderStackTypeSpec)
  SharedDtor();
}

void P4HeaderStackTypeSpec::SharedDtor() {
  if (this != internal_default_instance()) {
    delete header_;
  }
}

void P4HeaderStackTypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4HeaderStackTypeSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[22].descriptor;
}

const P4HeaderStackTypeSpec& P4HeaderStackTypeSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4HeaderStackTypeSpec* P4HeaderStackTypeSpec::New(::google::protobuf::Arena* arena) const {
  P4HeaderStackTypeSpec* n = new P4HeaderStackTypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4HeaderStackTypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4HeaderStackTypeSpec)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  size_ = 0;
}

bool P4HeaderStackTypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4HeaderStackTypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.P4NamedType header = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 size = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4HeaderStackTypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4HeaderStackTypeSpec)
  return false;
#undef DO_
}

void P4HeaderStackTypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4HeaderStackTypeSpec)
  // .p4.config.v1.P4NamedType header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4HeaderStackTypeSpec)
}

::google::protobuf::uint8* P4HeaderStackTypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4HeaderStackTypeSpec)
  // .p4.config.v1.P4NamedType header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, false, target);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4HeaderStackTypeSpec)
  return target;
}

size_t P4HeaderStackTypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4HeaderStackTypeSpec)
  size_t total_size = 0;

  // .p4.config.v1.P4NamedType header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4HeaderStackTypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4HeaderStackTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const P4HeaderStackTypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4HeaderStackTypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4HeaderStackTypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4HeaderStackTypeSpec)
    MergeFrom(*source);
  }
}

void P4HeaderStackTypeSpec::MergeFrom(const P4HeaderStackTypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4HeaderStackTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    mutable_header()->::p4::config::v1::P4NamedType::MergeFrom(from.header());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void P4HeaderStackTypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4HeaderStackTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4HeaderStackTypeSpec::CopyFrom(const P4HeaderStackTypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4HeaderStackTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4HeaderStackTypeSpec::IsInitialized() const {
  return true;
}

void P4HeaderStackTypeSpec::Swap(P4HeaderStackTypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4HeaderStackTypeSpec::InternalSwap(P4HeaderStackTypeSpec* other) {
  std::swap(header_, other->header_);
  std::swap(size_, other->size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4HeaderStackTypeSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[22];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4HeaderStackTypeSpec

// .p4.config.v1.P4NamedType header = 1;
bool P4HeaderStackTypeSpec::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void P4HeaderStackTypeSpec::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::p4::config::v1::P4NamedType& P4HeaderStackTypeSpec::header() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderStackTypeSpec.header)
  return header_ != NULL ? *header_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
::p4::config::v1::P4NamedType* P4HeaderStackTypeSpec::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderStackTypeSpec.header)
  return header_;
}
::p4::config::v1::P4NamedType* P4HeaderStackTypeSpec::release_header() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4HeaderStackTypeSpec.header)
  
  ::p4::config::v1::P4NamedType* temp = header_;
  header_ = NULL;
  return temp;
}
void P4HeaderStackTypeSpec::set_allocated_header(::p4::config::v1::P4NamedType* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4HeaderStackTypeSpec.header)
}

// int32 size = 2;
void P4HeaderStackTypeSpec::clear_size() {
  size_ = 0;
}
::google::protobuf::int32 P4HeaderStackTypeSpec::size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderStackTypeSpec.size)
  return size_;
}
void P4HeaderStackTypeSpec::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.P4HeaderStackTypeSpec.size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4HeaderUnionStackTypeSpec::kHeaderUnionFieldNumber;
const int P4HeaderUnionStackTypeSpec::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4HeaderUnionStackTypeSpec::P4HeaderUnionStackTypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4HeaderUnionStackTypeSpec)
}
P4HeaderUnionStackTypeSpec::P4HeaderUnionStackTypeSpec(const P4HeaderUnionStackTypeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header_union()) {
    header_union_ = new ::p4::config::v1::P4NamedType(*from.header_union_);
  } else {
    header_union_ = NULL;
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4HeaderUnionStackTypeSpec)
}

void P4HeaderUnionStackTypeSpec::SharedCtor() {
  ::memset(&header_union_, 0, reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&header_union_) + sizeof(size_));
  _cached_size_ = 0;
}

P4HeaderUnionStackTypeSpec::~P4HeaderUnionStackTypeSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4HeaderUnionStackTypeSpec)
  SharedDtor();
}

void P4HeaderUnionStackTypeSpec::SharedDtor() {
  if (this != internal_default_instance()) {
    delete header_union_;
  }
}

void P4HeaderUnionStackTypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4HeaderUnionStackTypeSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[23].descriptor;
}

const P4HeaderUnionStackTypeSpec& P4HeaderUnionStackTypeSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4HeaderUnionStackTypeSpec* P4HeaderUnionStackTypeSpec::New(::google::protobuf::Arena* arena) const {
  P4HeaderUnionStackTypeSpec* n = new P4HeaderUnionStackTypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4HeaderUnionStackTypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4HeaderUnionStackTypeSpec)
  if (GetArenaNoVirtual() == NULL && header_union_ != NULL) {
    delete header_union_;
  }
  header_union_ = NULL;
  size_ = 0;
}

bool P4HeaderUnionStackTypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4HeaderUnionStackTypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.P4NamedType header_union = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header_union()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 size = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4HeaderUnionStackTypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4HeaderUnionStackTypeSpec)
  return false;
#undef DO_
}

void P4HeaderUnionStackTypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4HeaderUnionStackTypeSpec)
  // .p4.config.v1.P4NamedType header_union = 1;
  if (this->has_header_union()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_union_, output);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4HeaderUnionStackTypeSpec)
}

::google::protobuf::uint8* P4HeaderUnionStackTypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4HeaderUnionStackTypeSpec)
  // .p4.config.v1.P4NamedType header_union = 1;
  if (this->has_header_union()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_union_, false, target);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4HeaderUnionStackTypeSpec)
  return target;
}

size_t P4HeaderUnionStackTypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4HeaderUnionStackTypeSpec)
  size_t total_size = 0;

  // .p4.config.v1.P4NamedType header_union = 1;
  if (this->has_header_union()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_union_);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4HeaderUnionStackTypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4HeaderUnionStackTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const P4HeaderUnionStackTypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4HeaderUnionStackTypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4HeaderUnionStackTypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4HeaderUnionStackTypeSpec)
    MergeFrom(*source);
  }
}

void P4HeaderUnionStackTypeSpec::MergeFrom(const P4HeaderUnionStackTypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4HeaderUnionStackTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header_union()) {
    mutable_header_union()->::p4::config::v1::P4NamedType::MergeFrom(from.header_union());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void P4HeaderUnionStackTypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4HeaderUnionStackTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4HeaderUnionStackTypeSpec::CopyFrom(const P4HeaderUnionStackTypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4HeaderUnionStackTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4HeaderUnionStackTypeSpec::IsInitialized() const {
  return true;
}

void P4HeaderUnionStackTypeSpec::Swap(P4HeaderUnionStackTypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4HeaderUnionStackTypeSpec::InternalSwap(P4HeaderUnionStackTypeSpec* other) {
  std::swap(header_union_, other->header_union_);
  std::swap(size_, other->size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4HeaderUnionStackTypeSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[23];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4HeaderUnionStackTypeSpec

// .p4.config.v1.P4NamedType header_union = 1;
bool P4HeaderUnionStackTypeSpec::has_header_union() const {
  return this != internal_default_instance() && header_union_ != NULL;
}
void P4HeaderUnionStackTypeSpec::clear_header_union() {
  if (GetArenaNoVirtual() == NULL && header_union_ != NULL) delete header_union_;
  header_union_ = NULL;
}
const ::p4::config::v1::P4NamedType& P4HeaderUnionStackTypeSpec::header_union() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderUnionStackTypeSpec.header_union)
  return header_union_ != NULL ? *header_union_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
::p4::config::v1::P4NamedType* P4HeaderUnionStackTypeSpec::mutable_header_union() {
  
  if (header_union_ == NULL) {
    header_union_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderUnionStackTypeSpec.header_union)
  return header_union_;
}
::p4::config::v1::P4NamedType* P4HeaderUnionStackTypeSpec::release_header_union() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4HeaderUnionStackTypeSpec.header_union)
  
  ::p4::config::v1::P4NamedType* temp = header_union_;
  header_union_ = NULL;
  return temp;
}
void P4HeaderUnionStackTypeSpec::set_allocated_header_union(::p4::config::v1::P4NamedType* header_union) {
  delete header_union_;
  header_union_ = header_union;
  if (header_union) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4HeaderUnionStackTypeSpec.header_union)
}

// int32 size = 2;
void P4HeaderUnionStackTypeSpec::clear_size() {
  size_ = 0;
}
::google::protobuf::int32 P4HeaderUnionStackTypeSpec::size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderUnionStackTypeSpec.size)
  return size_;
}
void P4HeaderUnionStackTypeSpec::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.P4HeaderUnionStackTypeSpec.size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValuePair::kKeyFieldNumber;
const int KeyValuePair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValuePair::KeyValuePair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.KeyValuePair)
}
KeyValuePair::KeyValuePair(const KeyValuePair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_value()) {
    value_ = new ::p4::config::v1::Expression(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.KeyValuePair)
}

void KeyValuePair::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
  _cached_size_ = 0;
}

KeyValuePair::~KeyValuePair() {
  // @@protoc_insertion_point(destructor:p4.config.v1.KeyValuePair)
  SharedDtor();
}

void KeyValuePair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete value_;
  }
}

void KeyValuePair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyValuePair::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[24].descriptor;
}

const KeyValuePair& KeyValuePair::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

KeyValuePair* KeyValuePair::New(::google::protobuf::Arena* arena) const {
  KeyValuePair* n = new KeyValuePair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyValuePair::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.KeyValuePair)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}

bool KeyValuePair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.KeyValuePair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.KeyValuePair.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.Expression value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.KeyValuePair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.KeyValuePair)
  return false;
#undef DO_
}

void KeyValuePair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.KeyValuePair)
  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.KeyValuePair.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // .p4.config.v1.Expression value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.KeyValuePair)
}

::google::protobuf::uint8* KeyValuePair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.KeyValuePair)
  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.KeyValuePair.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // .p4.config.v1.Expression value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->value_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.KeyValuePair)
  return target;
}

size_t KeyValuePair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.KeyValuePair)
  size_t total_size = 0;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // .p4.config.v1.Expression value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyValuePair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.KeyValuePair)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValuePair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValuePair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.KeyValuePair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.KeyValuePair)
    MergeFrom(*source);
  }
}

void KeyValuePair::MergeFrom(const KeyValuePair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.KeyValuePair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_value()) {
    mutable_value()->::p4::config::v1::Expression::MergeFrom(from.value());
  }
}

void KeyValuePair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.KeyValuePair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValuePair::CopyFrom(const KeyValuePair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.KeyValuePair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValuePair::IsInitialized() const {
  return true;
}

void KeyValuePair::Swap(KeyValuePair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValuePair::InternalSwap(KeyValuePair* other) {
  key_.Swap(&other->key_);
  std::swap(value_, other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyValuePair::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[24];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeyValuePair

// string key = 1;
void KeyValuePair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& KeyValuePair::key() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.KeyValuePair.key)
  return key_.GetNoArena();
}
void KeyValuePair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.KeyValuePair.key)
}
#if LANG_CXX11
void KeyValuePair::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.KeyValuePair.key)
}
#endif
void KeyValuePair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.KeyValuePair.key)
}
void KeyValuePair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.KeyValuePair.key)
}
::std::string* KeyValuePair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.KeyValuePair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* KeyValuePair::release_key() {
  // @@protoc_insertion_point(field_release:p4.config.v1.KeyValuePair.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KeyValuePair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.KeyValuePair.key)
}

// .p4.config.v1.Expression value = 2;
bool KeyValuePair::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
void KeyValuePair::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
const ::p4::config::v1::Expression& KeyValuePair::value() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.KeyValuePair.value)
  return value_ != NULL ? *value_
                         : *::p4::config::v1::Expression::internal_default_instance();
}
::p4::config::v1::Expression* KeyValuePair::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::p4::config::v1::Expression;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.KeyValuePair.value)
  return value_;
}
::p4::config::v1::Expression* KeyValuePair::release_value() {
  // @@protoc_insertion_point(field_release:p4.config.v1.KeyValuePair.value)
  
  ::p4::config::v1::Expression* temp = value_;
  value_ = NULL;
  return temp;
}
void KeyValuePair::set_allocated_value(::p4::config::v1::Expression* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.KeyValuePair.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValuePairList::kKvPairsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValuePairList::KeyValuePairList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.KeyValuePairList)
}
KeyValuePairList::KeyValuePairList(const KeyValuePairList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      kv_pairs_(from.kv_pairs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.KeyValuePairList)
}

void KeyValuePairList::SharedCtor() {
  _cached_size_ = 0;
}

KeyValuePairList::~KeyValuePairList() {
  // @@protoc_insertion_point(destructor:p4.config.v1.KeyValuePairList)
  SharedDtor();
}

void KeyValuePairList::SharedDtor() {
}

void KeyValuePairList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyValuePairList::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[25].descriptor;
}

const KeyValuePairList& KeyValuePairList::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

KeyValuePairList* KeyValuePairList::New(::google::protobuf::Arena* arena) const {
  KeyValuePairList* n = new KeyValuePairList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyValuePairList::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.KeyValuePairList)
  kv_pairs_.Clear();
}

bool KeyValuePairList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.KeyValuePairList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .p4.config.v1.KeyValuePair kv_pairs = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_kv_pairs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.KeyValuePairList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.KeyValuePairList)
  return false;
#undef DO_
}

void KeyValuePairList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.KeyValuePairList)
  // repeated .p4.config.v1.KeyValuePair kv_pairs = 1;
  for (unsigned int i = 0, n = this->kv_pairs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->kv_pairs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.KeyValuePairList)
}

::google::protobuf::uint8* KeyValuePairList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.KeyValuePairList)
  // repeated .p4.config.v1.KeyValuePair kv_pairs = 1;
  for (unsigned int i = 0, n = this->kv_pairs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->kv_pairs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.KeyValuePairList)
  return target;
}

size_t KeyValuePairList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.KeyValuePairList)
  size_t total_size = 0;

  // repeated .p4.config.v1.KeyValuePair kv_pairs = 1;
  {
    unsigned int count = this->kv_pairs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->kv_pairs(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyValuePairList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.KeyValuePairList)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValuePairList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValuePairList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.KeyValuePairList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.KeyValuePairList)
    MergeFrom(*source);
  }
}

void KeyValuePairList::MergeFrom(const KeyValuePairList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.KeyValuePairList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kv_pairs_.MergeFrom(from.kv_pairs_);
}

void KeyValuePairList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.KeyValuePairList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValuePairList::CopyFrom(const KeyValuePairList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.KeyValuePairList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValuePairList::IsInitialized() const {
  return true;
}

void KeyValuePairList::Swap(KeyValuePairList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValuePairList::InternalSwap(KeyValuePairList* other) {
  kv_pairs_.UnsafeArenaSwap(&other->kv_pairs_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyValuePairList::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[25];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeyValuePairList

// repeated .p4.config.v1.KeyValuePair kv_pairs = 1;
int KeyValuePairList::kv_pairs_size() const {
  return kv_pairs_.size();
}
void KeyValuePairList::clear_kv_pairs() {
  kv_pairs_.Clear();
}
const ::p4::config::v1::KeyValuePair& KeyValuePairList::kv_pairs(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.KeyValuePairList.kv_pairs)
  return kv_pairs_.Get(index);
}
::p4::config::v1::KeyValuePair* KeyValuePairList::mutable_kv_pairs(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.KeyValuePairList.kv_pairs)
  return kv_pairs_.Mutable(index);
}
::p4::config::v1::KeyValuePair* KeyValuePairList::add_kv_pairs() {
  // @@protoc_insertion_point(field_add:p4.config.v1.KeyValuePairList.kv_pairs)
  return kv_pairs_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::KeyValuePair >*
KeyValuePairList::mutable_kv_pairs() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.KeyValuePairList.kv_pairs)
  return &kv_pairs_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::KeyValuePair >&
KeyValuePairList::kv_pairs() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.KeyValuePairList.kv_pairs)
  return kv_pairs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression::kStringValueFieldNumber;
const int Expression::kInt64ValueFieldNumber;
const int Expression::kBoolValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression::Expression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.Expression)
}
Expression::Expression(const Expression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.Expression)
}

void Expression::SharedCtor() {
  clear_has_value();
  _cached_size_ = 0;
}

Expression::~Expression() {
  // @@protoc_insertion_point(destructor:p4.config.v1.Expression)
  SharedDtor();
}

void Expression::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void Expression::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Expression::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[26].descriptor;
}

const Expression& Expression::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

Expression* Expression::New(::google::protobuf::Arena* arena) const {
  Expression* n = new Expression;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Expression::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:p4.config.v1.Expression)
  switch (value_case()) {
    case kStringValue: {
      value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Expression::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.Expression)
  clear_value();
}

bool Expression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.Expression)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string string_value = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_value().data(), this->string_value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.Expression.string_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 int64_value = 2;
      case 2: {
        if (tag == 16u) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int64_value_)));
          set_has_int64_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bool_value = 3;
      case 3: {
        if (tag == 24u) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.bool_value_)));
          set_has_bool_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.Expression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.Expression)
  return false;
#undef DO_
}

void Expression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.Expression)
  // string string_value = 1;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Expression.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->string_value(), output);
  }

  // int64 int64_value = 2;
  if (has_int64_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->int64_value(), output);
  }

  // bool bool_value = 3;
  if (has_bool_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->bool_value(), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.Expression)
}

::google::protobuf::uint8* Expression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.Expression)
  // string string_value = 1;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), this->string_value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.Expression.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->string_value(), target);
  }

  // int64 int64_value = 2;
  if (has_int64_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->int64_value(), target);
  }

  // bool bool_value = 3;
  if (has_bool_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->bool_value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.Expression)
  return target;
}

size_t Expression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.Expression)
  size_t total_size = 0;

  switch (value_case()) {
    // string string_value = 1;
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
      break;
    }
    // int64 int64_value = 2;
    case kInt64Value: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_value());
      break;
    }
    // bool bool_value = 3;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Expression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.Expression)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.Expression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.Expression)
    MergeFrom(*source);
  }
}

void Expression::MergeFrom(const Expression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.Expression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  switch (from.value_case()) {
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Expression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.Expression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression::CopyFrom(const Expression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.Expression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression::IsInitialized() const {
  return true;
}

void Expression::Swap(Expression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression::InternalSwap(Expression* other) {
  std::swap(value_, other->value_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Expression::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[26];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Expression

// string string_value = 1;
bool Expression::has_string_value() const {
  return value_case() == kStringValue;
}
void Expression::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
void Expression::clear_string_value() {
  if (has_string_value()) {
    value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
const ::std::string& Expression::string_value() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Expression.string_value)
  if (has_string_value()) {
    return value_.string_value_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void Expression::set_string_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.Expression.string_value)
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.Expression.string_value)
}
#if LANG_CXX11
void Expression::set_string_value(::std::string&& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.Expression.string_value)
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.Expression.string_value)
}
#endif
void Expression::set_string_value(const char* value) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Expression.string_value)
}
void Expression::set_string_value(const char* value, size_t size) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Expression.string_value)
}
::std::string* Expression::mutable_string_value() {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Expression.string_value)
  return value_.string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Expression::release_string_value() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Expression.string_value)
  if (has_string_value()) {
    clear_has_value();
    return value_.string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void Expression::set_allocated_string_value(::std::string* string_value) {
  if (!has_string_value()) {
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (string_value != NULL) {
    set_has_string_value();
    value_.string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string_value);
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Expression.string_value)
}

// int64 int64_value = 2;
bool Expression::has_int64_value() const {
  return value_case() == kInt64Value;
}
void Expression::set_has_int64_value() {
  _oneof_case_[0] = kInt64Value;
}
void Expression::clear_int64_value() {
  if (has_int64_value()) {
    value_.int64_value_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
::google::protobuf::int64 Expression::int64_value() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Expression.int64_value)
  if (has_int64_value()) {
    return value_.int64_value_;
  }
  return GOOGLE_LONGLONG(0);
}
void Expression::set_int64_value(::google::protobuf::int64 value) {
  if (!has_int64_value()) {
    clear_value();
    set_has_int64_value();
  }
  value_.int64_value_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Expression.int64_value)
}

// bool bool_value = 3;
bool Expression::has_bool_value() const {
  return value_case() == kBoolValue;
}
void Expression::set_has_bool_value() {
  _oneof_case_[0] = kBoolValue;
}
void Expression::clear_bool_value() {
  if (has_bool_value()) {
    value_.bool_value_ = false;
    clear_has_value();
  }
}
bool Expression::bool_value() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Expression.bool_value)
  if (has_bool_value()) {
    return value_.bool_value_;
  }
  return false;
}
void Expression::set_bool_value(bool value) {
  if (!has_bool_value()) {
    clear_value();
    set_has_bool_value();
  }
  value_.bool_value_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Expression.bool_value)
}

bool Expression::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void Expression::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
Expression::ValueCase Expression::value_case() const {
  return Expression::ValueCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExpressionList::kExpressionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExpressionList::ExpressionList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.ExpressionList)
}
ExpressionList::ExpressionList(const ExpressionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      expressions_(from.expressions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.ExpressionList)
}

void ExpressionList::SharedCtor() {
  _cached_size_ = 0;
}

ExpressionList::~ExpressionList() {
  // @@protoc_insertion_point(destructor:p4.config.v1.ExpressionList)
  SharedDtor();
}

void ExpressionList::SharedDtor() {
}

void ExpressionList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExpressionList::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[27].descriptor;
}

const ExpressionList& ExpressionList::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExpressionList* ExpressionList::New(::google::protobuf::Arena* arena) const {
  ExpressionList* n = new ExpressionList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExpressionList::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.ExpressionList)
  expressions_.Clear();
}

bool ExpressionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.ExpressionList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .p4.config.v1.Expression expressions = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_expressions()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.ExpressionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.ExpressionList)
  return false;
#undef DO_
}

void ExpressionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.ExpressionList)
  // repeated .p4.config.v1.Expression expressions = 1;
  for (unsigned int i = 0, n = this->expressions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->expressions(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.ExpressionList)
}

::google::protobuf::uint8* ExpressionList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.ExpressionList)
  // repeated .p4.config.v1.Expression expressions = 1;
  for (unsigned int i = 0, n = this->expressions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->expressions(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.ExpressionList)
  return target;
}

size_t ExpressionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.ExpressionList)
  size_t total_size = 0;

  // repeated .p4.config.v1.Expression expressions = 1;
  {
    unsigned int count = this->expressions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->expressions(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExpressionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.ExpressionList)
  GOOGLE_DCHECK_NE(&from, this);
  const ExpressionList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExpressionList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.ExpressionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.ExpressionList)
    MergeFrom(*source);
  }
}

void ExpressionList::MergeFrom(const ExpressionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.ExpressionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  expressions_.MergeFrom(from.expressions_);
}

void ExpressionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.ExpressionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExpressionList::CopyFrom(const ExpressionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.ExpressionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpressionList::IsInitialized() const {
  return true;
}

void ExpressionList::Swap(ExpressionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExpressionList::InternalSwap(ExpressionList* other) {
  expressions_.UnsafeArenaSwap(&other->expressions_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExpressionList::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[27];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExpressionList

// repeated .p4.config.v1.Expression expressions = 1;
int ExpressionList::expressions_size() const {
  return expressions_.size();
}
void ExpressionList::clear_expressions() {
  expressions_.Clear();
}
const ::p4::config::v1::Expression& ExpressionList::expressions(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ExpressionList.expressions)
  return expressions_.Get(index);
}
::p4::config::v1::Expression* ExpressionList::mutable_expressions(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ExpressionList.expressions)
  return expressions_.Mutable(index);
}
::p4::config::v1::Expression* ExpressionList::add_expressions() {
  // @@protoc_insertion_point(field_add:p4.config.v1.ExpressionList.expressions)
  return expressions_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::Expression >*
ExpressionList::mutable_expressions() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.ExpressionList.expressions)
  return &expressions_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Expression >&
ExpressionList::expressions() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.ExpressionList.expressions)
  return expressions_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StructuredAnnotation::kNameFieldNumber;
const int StructuredAnnotation::kExpressionListFieldNumber;
const int StructuredAnnotation::kKvPairListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StructuredAnnotation::StructuredAnnotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.StructuredAnnotation)
}
StructuredAnnotation::StructuredAnnotation(const StructuredAnnotation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  clear_has_body();
  switch (from.body_case()) {
    case kExpressionList: {
      mutable_expression_list()->::p4::config::v1::ExpressionList::MergeFrom(from.expression_list());
      break;
    }
    case kKvPairList: {
      mutable_kv_pair_list()->::p4::config::v1::KeyValuePairList::MergeFrom(from.kv_pair_list());
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.StructuredAnnotation)
}

void StructuredAnnotation::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
  _cached_size_ = 0;
}

StructuredAnnotation::~StructuredAnnotation() {
  // @@protoc_insertion_point(destructor:p4.config.v1.StructuredAnnotation)
  SharedDtor();
}

void StructuredAnnotation::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_body()) {
    clear_body();
  }
}

void StructuredAnnotation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StructuredAnnotation::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[28].descriptor;
}

const StructuredAnnotation& StructuredAnnotation::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

StructuredAnnotation* StructuredAnnotation::New(::google::protobuf::Arena* arena) const {
  StructuredAnnotation* n = new StructuredAnnotation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StructuredAnnotation::clear_body() {
// @@protoc_insertion_point(one_of_clear_start:p4.config.v1.StructuredAnnotation)
  switch (body_case()) {
    case kExpressionList: {
      delete body_.expression_list_;
      break;
    }
    case kKvPairList: {
      delete body_.kv_pair_list_;
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BODY_NOT_SET;
}


void StructuredAnnotation::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.StructuredAnnotation)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_body();
}

bool StructuredAnnotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.StructuredAnnotation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.StructuredAnnotation.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.ExpressionList expression_list = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_expression_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.KeyValuePairList kv_pair_list = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_kv_pair_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.StructuredAnnotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.StructuredAnnotation)
  return false;
#undef DO_
}

void StructuredAnnotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.StructuredAnnotation)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.StructuredAnnotation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .p4.config.v1.ExpressionList expression_list = 2;
  if (has_expression_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *body_.expression_list_, output);
  }

  // .p4.config.v1.KeyValuePairList kv_pair_list = 3;
  if (has_kv_pair_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *body_.kv_pair_list_, output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.StructuredAnnotation)
}

::google::protobuf::uint8* StructuredAnnotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.StructuredAnnotation)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.StructuredAnnotation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .p4.config.v1.ExpressionList expression_list = 2;
  if (has_expression_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *body_.expression_list_, false, target);
  }

  // .p4.config.v1.KeyValuePairList kv_pair_list = 3;
  if (has_kv_pair_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *body_.kv_pair_list_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.StructuredAnnotation)
  return target;
}

size_t StructuredAnnotation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.StructuredAnnotation)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (body_case()) {
    // .p4.config.v1.ExpressionList expression_list = 2;
    case kExpressionList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *body_.expression_list_);
      break;
    }
    // .p4.config.v1.KeyValuePairList kv_pair_list = 3;
    case kKvPairList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *body_.kv_pair_list_);
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StructuredAnnotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.StructuredAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  const StructuredAnnotation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StructuredAnnotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.StructuredAnnotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.StructuredAnnotation)
    MergeFrom(*source);
  }
}

void StructuredAnnotation::MergeFrom(const StructuredAnnotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.StructuredAnnotation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  switch (from.body_case()) {
    case kExpressionList: {
      mutable_expression_list()->::p4::config::v1::ExpressionList::MergeFrom(from.expression_list());
      break;
    }
    case kKvPairList: {
      mutable_kv_pair_list()->::p4::config::v1::KeyValuePairList::MergeFrom(from.kv_pair_list());
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
}

void StructuredAnnotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.StructuredAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StructuredAnnotation::CopyFrom(const StructuredAnnotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.StructuredAnnotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StructuredAnnotation::IsInitialized() const {
  return true;
}

void StructuredAnnotation::Swap(StructuredAnnotation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StructuredAnnotation::InternalSwap(StructuredAnnotation* other) {
  name_.Swap(&other->name_);
  std::swap(body_, other->body_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StructuredAnnotation::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[28];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StructuredAnnotation

// string name = 1;
void StructuredAnnotation::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StructuredAnnotation::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.StructuredAnnotation.name)
  return name_.GetNoArena();
}
void StructuredAnnotation::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.StructuredAnnotation.name)
}
#if LANG_CXX11
void StructuredAnnotation::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.StructuredAnnotation.name)
}
#endif
void StructuredAnnotation::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.StructuredAnnotation.name)
}
void StructuredAnnotation::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.StructuredAnnotation.name)
}
::std::string* StructuredAnnotation::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.StructuredAnnotation.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StructuredAnnotation::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.StructuredAnnotation.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StructuredAnnotation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.StructuredAnnotation.name)
}

// .p4.config.v1.ExpressionList expression_list = 2;
bool StructuredAnnotation::has_expression_list() const {
  return body_case() == kExpressionList;
}
void StructuredAnnotation::set_has_expression_list() {
  _oneof_case_[0] = kExpressionList;
}
void StructuredAnnotation::clear_expression_list() {
  if (has_expression_list()) {
    delete body_.expression_list_;
    clear_has_body();
  }
}
 const ::p4::config::v1::ExpressionList& StructuredAnnotation::expression_list() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.StructuredAnnotation.expression_list)
  return has_expression_list()
      ? *body_.expression_list_
      : ::p4::config::v1::ExpressionList::default_instance();
}
::p4::config::v1::ExpressionList* StructuredAnnotation::mutable_expression_list() {
  if (!has_expression_list()) {
    clear_body();
    set_has_expression_list();
    body_.expression_list_ = new ::p4::config::v1::ExpressionList;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.StructuredAnnotation.expression_list)
  return body_.expression_list_;
}
::p4::config::v1::ExpressionList* StructuredAnnotation::release_expression_list() {
  // @@protoc_insertion_point(field_release:p4.config.v1.StructuredAnnotation.expression_list)
  if (has_expression_list()) {
    clear_has_body();
    ::p4::config::v1::ExpressionList* temp = body_.expression_list_;
    body_.expression_list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void StructuredAnnotation::set_allocated_expression_list(::p4::config::v1::ExpressionList* expression_list) {
  clear_body();
  if (expression_list) {
    set_has_expression_list();
    body_.expression_list_ = expression_list;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.StructuredAnnotation.expression_list)
}

// .p4.config.v1.KeyValuePairList kv_pair_list = 3;
bool StructuredAnnotation::has_kv_pair_list() const {
  return body_case() == kKvPairList;
}
void StructuredAnnotation::set_has_kv_pair_list() {
  _oneof_case_[0] = kKvPairList;
}
void StructuredAnnotation::clear_kv_pair_list() {
  if (has_kv_pair_list()) {
    delete body_.kv_pair_list_;
    clear_has_body();
  }
}
 const ::p4::config::v1::KeyValuePairList& StructuredAnnotation::kv_pair_list() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.StructuredAnnotation.kv_pair_list)
  return has_kv_pair_list()
      ? *body_.kv_pair_list_
      : ::p4::config::v1::KeyValuePairList::default_instance();
}
::p4::config::v1::KeyValuePairList* StructuredAnnotation::mutable_kv_pair_list() {
  if (!has_kv_pair_list()) {
    clear_body();
    set_has_kv_pair_list();
    body_.kv_pair_list_ = new ::p4::config::v1::KeyValuePairList;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.StructuredAnnotation.kv_pair_list)
  return body_.kv_pair_list_;
}
::p4::config::v1::KeyValuePairList* StructuredAnnotation::release_kv_pair_list() {
  // @@protoc_insertion_point(field_release:p4.config.v1.StructuredAnnotation.kv_pair_list)
  if (has_kv_pair_list()) {
    clear_has_body();
    ::p4::config::v1::KeyValuePairList* temp = body_.kv_pair_list_;
    body_.kv_pair_list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void StructuredAnnotation::set_allocated_kv_pair_list(::p4::config::v1::KeyValuePairList* kv_pair_list) {
  clear_body();
  if (kv_pair_list) {
    set_has_kv_pair_list();
    body_.kv_pair_list_ = kv_pair_list;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.StructuredAnnotation.kv_pair_list)
}

bool StructuredAnnotation::has_body() const {
  return body_case() != BODY_NOT_SET;
}
void StructuredAnnotation::clear_has_body() {
  _oneof_case_[0] = BODY_NOT_SET;
}
StructuredAnnotation::BodyCase StructuredAnnotation::body_case() const {
  return StructuredAnnotation::BodyCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4EnumTypeSpec_Member::kNameFieldNumber;
const int P4EnumTypeSpec_Member::kAnnotationsFieldNumber;
const int P4EnumTypeSpec_Member::kStructuredAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4EnumTypeSpec_Member::P4EnumTypeSpec_Member()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4EnumTypeSpec.Member)
}
P4EnumTypeSpec_Member::P4EnumTypeSpec_Member(const P4EnumTypeSpec_Member& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      annotations_(from.annotations_),
      structured_annotations_(from.structured_annotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4EnumTypeSpec.Member)
}

void P4EnumTypeSpec_Member::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

P4EnumTypeSpec_Member::~P4EnumTypeSpec_Member() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4EnumTypeSpec.Member)
  SharedDtor();
}

void P4EnumTypeSpec_Member::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void P4EnumTypeSpec_Member::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4EnumTypeSpec_Member::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[29].descriptor;
}

const P4EnumTypeSpec_Member& P4EnumTypeSpec_Member::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4EnumTypeSpec_Member* P4EnumTypeSpec_Member::New(::google::protobuf::Arena* arena) const {
  P4EnumTypeSpec_Member* n = new P4EnumTypeSpec_Member;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4EnumTypeSpec_Member::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4EnumTypeSpec.Member)
  annotations_.Clear();
  structured_annotations_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool P4EnumTypeSpec_Member::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4EnumTypeSpec.Member)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4EnumTypeSpec.Member.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string annotations = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_annotations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotations(this->annotations_size() - 1).data(),
            this->annotations(this->annotations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4EnumTypeSpec.Member.annotations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_structured_annotations()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4EnumTypeSpec.Member)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4EnumTypeSpec.Member)
  return false;
#undef DO_
}

void P4EnumTypeSpec_Member::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4EnumTypeSpec.Member)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4EnumTypeSpec.Member.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string annotations = 2;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4EnumTypeSpec.Member.annotations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->annotations(i), output);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 3;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->structured_annotations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4EnumTypeSpec.Member)
}

::google::protobuf::uint8* P4EnumTypeSpec_Member::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4EnumTypeSpec.Member)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4EnumTypeSpec.Member.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string annotations = 2;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4EnumTypeSpec.Member.annotations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->annotations(i), target);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 3;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->structured_annotations(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4EnumTypeSpec.Member)
  return target;
}

size_t P4EnumTypeSpec_Member::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4EnumTypeSpec.Member)
  size_t total_size = 0;

  // repeated string annotations = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  for (int i = 0; i < this->annotations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->annotations(i));
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 3;
  {
    unsigned int count = this->structured_annotations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->structured_annotations(i));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4EnumTypeSpec_Member::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4EnumTypeSpec.Member)
  GOOGLE_DCHECK_NE(&from, this);
  const P4EnumTypeSpec_Member* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4EnumTypeSpec_Member>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4EnumTypeSpec.Member)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4EnumTypeSpec.Member)
    MergeFrom(*source);
  }
}

void P4EnumTypeSpec_Member::MergeFrom(const P4EnumTypeSpec_Member& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4EnumTypeSpec.Member)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotations_.MergeFrom(from.annotations_);
  structured_annotations_.MergeFrom(from.structured_annotations_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void P4EnumTypeSpec_Member::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4EnumTypeSpec.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4EnumTypeSpec_Member::CopyFrom(const P4EnumTypeSpec_Member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4EnumTypeSpec.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4EnumTypeSpec_Member::IsInitialized() const {
  return true;
}

void P4EnumTypeSpec_Member::Swap(P4EnumTypeSpec_Member* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4EnumTypeSpec_Member::InternalSwap(P4EnumTypeSpec_Member* other) {
  annotations_.UnsafeArenaSwap(&other->annotations_);
  structured_annotations_.UnsafeArenaSwap(&other->structured_annotations_);
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4EnumTypeSpec_Member::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[29];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4EnumTypeSpec_Member

// string name = 1;
void P4EnumTypeSpec_Member::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P4EnumTypeSpec_Member::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4EnumTypeSpec.Member.name)
  return name_.GetNoArena();
}
void P4EnumTypeSpec_Member::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.P4EnumTypeSpec.Member.name)
}
#if LANG_CXX11
void P4EnumTypeSpec_Member::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.P4EnumTypeSpec.Member.name)
}
#endif
void P4EnumTypeSpec_Member::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4EnumTypeSpec.Member.name)
}
void P4EnumTypeSpec_Member::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4EnumTypeSpec.Member.name)
}
::std::string* P4EnumTypeSpec_Member::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4EnumTypeSpec.Member.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P4EnumTypeSpec_Member::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4EnumTypeSpec.Member.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P4EnumTypeSpec_Member::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4EnumTypeSpec.Member.name)
}

// repeated string annotations = 2;
int P4EnumTypeSpec_Member::annotations_size() const {
  return annotations_.size();
}
void P4EnumTypeSpec_Member::clear_annotations() {
  annotations_.Clear();
}
const ::std::string& P4EnumTypeSpec_Member::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4EnumTypeSpec.Member.annotations)
  return annotations_.Get(index);
}
::std::string* P4EnumTypeSpec_Member::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4EnumTypeSpec.Member.annotations)
  return annotations_.Mutable(index);
}
void P4EnumTypeSpec_Member::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4EnumTypeSpec.Member.annotations)
  annotations_.Mutable(index)->assign(value);
}
void P4EnumTypeSpec_Member::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4EnumTypeSpec.Member.annotations)
}
void P4EnumTypeSpec_Member::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4EnumTypeSpec.Member.annotations)
}
::std::string* P4EnumTypeSpec_Member::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4EnumTypeSpec.Member.annotations)
  return annotations_.Add();
}
void P4EnumTypeSpec_Member::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4EnumTypeSpec.Member.annotations)
}
void P4EnumTypeSpec_Member::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4EnumTypeSpec.Member.annotations)
}
void P4EnumTypeSpec_Member::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4EnumTypeSpec.Member.annotations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4EnumTypeSpec_Member::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4EnumTypeSpec.Member.annotations)
  return annotations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
P4EnumTypeSpec_Member::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4EnumTypeSpec.Member.annotations)
  return &annotations_;
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 3;
int P4EnumTypeSpec_Member::structured_annotations_size() const {
  return structured_annotations_.size();
}
void P4EnumTypeSpec_Member::clear_structured_annotations() {
  structured_annotations_.Clear();
}
const ::p4::config::v1::StructuredAnnotation& P4EnumTypeSpec_Member::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4EnumTypeSpec.Member.structured_annotations)
  return structured_annotations_.Get(index);
}
::p4::config::v1::StructuredAnnotation* P4EnumTypeSpec_Member::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4EnumTypeSpec.Member.structured_annotations)
  return structured_annotations_.Mutable(index);
}
::p4::config::v1::StructuredAnnotation* P4EnumTypeSpec_Member::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4EnumTypeSpec.Member.structured_annotations)
  return structured_annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
P4EnumTypeSpec_Member::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4EnumTypeSpec.Member.structured_annotations)
  return &structured_annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
P4EnumTypeSpec_Member::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4EnumTypeSpec.Member.structured_annotations)
  return structured_annotations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4EnumTypeSpec::kMembersFieldNumber;
const int P4EnumTypeSpec::kAnnotationsFieldNumber;
const int P4EnumTypeSpec::kStructuredAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4EnumTypeSpec::P4EnumTypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4EnumTypeSpec)
}
P4EnumTypeSpec::P4EnumTypeSpec(const P4EnumTypeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_),
      annotations_(from.annotations_),
      structured_annotations_(from.structured_annotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4EnumTypeSpec)
}

void P4EnumTypeSpec::SharedCtor() {
  _cached_size_ = 0;
}

P4EnumTypeSpec::~P4EnumTypeSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4EnumTypeSpec)
  SharedDtor();
}

void P4EnumTypeSpec::SharedDtor() {
}

void P4EnumTypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4EnumTypeSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[30].descriptor;
}

const P4EnumTypeSpec& P4EnumTypeSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4EnumTypeSpec* P4EnumTypeSpec::New(::google::protobuf::Arena* arena) const {
  P4EnumTypeSpec* n = new P4EnumTypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4EnumTypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4EnumTypeSpec)
  members_.Clear();
  annotations_.Clear();
  structured_annotations_.Clear();
}

bool P4EnumTypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4EnumTypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .p4.config.v1.P4EnumTypeSpec.Member members = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated string annotations = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_annotations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotations(this->annotations_size() - 1).data(),
            this->annotations(this->annotations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4EnumTypeSpec.annotations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_structured_annotations()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4EnumTypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4EnumTypeSpec)
  return false;
#undef DO_
}

void P4EnumTypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4EnumTypeSpec)
  // repeated .p4.config.v1.P4EnumTypeSpec.Member members = 1;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->members(i), output);
  }

  // repeated string annotations = 2;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4EnumTypeSpec.annotations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->annotations(i), output);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 3;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->structured_annotations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4EnumTypeSpec)
}

::google::protobuf::uint8* P4EnumTypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4EnumTypeSpec)
  // repeated .p4.config.v1.P4EnumTypeSpec.Member members = 1;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->members(i), false, target);
  }

  // repeated string annotations = 2;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4EnumTypeSpec.annotations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->annotations(i), target);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 3;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->structured_annotations(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4EnumTypeSpec)
  return target;
}

size_t P4EnumTypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4EnumTypeSpec)
  size_t total_size = 0;

  // repeated .p4.config.v1.P4EnumTypeSpec.Member members = 1;
  {
    unsigned int count = this->members_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->members(i));
    }
  }

  // repeated string annotations = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  for (int i = 0; i < this->annotations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->annotations(i));
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 3;
  {
    unsigned int count = this->structured_annotations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->structured_annotations(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4EnumTypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4EnumTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const P4EnumTypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4EnumTypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4EnumTypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4EnumTypeSpec)
    MergeFrom(*source);
  }
}

void P4EnumTypeSpec::MergeFrom(const P4EnumTypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4EnumTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  members_.MergeFrom(from.members_);
  annotations_.MergeFrom(from.annotations_);
  structured_annotations_.MergeFrom(from.structured_annotations_);
}

void P4EnumTypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4EnumTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4EnumTypeSpec::CopyFrom(const P4EnumTypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4EnumTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4EnumTypeSpec::IsInitialized() const {
  return true;
}

void P4EnumTypeSpec::Swap(P4EnumTypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4EnumTypeSpec::InternalSwap(P4EnumTypeSpec* other) {
  members_.UnsafeArenaSwap(&other->members_);
  annotations_.UnsafeArenaSwap(&other->annotations_);
  structured_annotations_.UnsafeArenaSwap(&other->structured_annotations_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4EnumTypeSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[30];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4EnumTypeSpec

// repeated .p4.config.v1.P4EnumTypeSpec.Member members = 1;
int P4EnumTypeSpec::members_size() const {
  return members_.size();
}
void P4EnumTypeSpec::clear_members() {
  members_.Clear();
}
const ::p4::config::v1::P4EnumTypeSpec_Member& P4EnumTypeSpec::members(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4EnumTypeSpec.members)
  return members_.Get(index);
}
::p4::config::v1::P4EnumTypeSpec_Member* P4EnumTypeSpec::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4EnumTypeSpec.members)
  return members_.Mutable(index);
}
::p4::config::v1::P4EnumTypeSpec_Member* P4EnumTypeSpec::add_members() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4EnumTypeSpec.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4EnumTypeSpec_Member >*
P4EnumTypeSpec::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4EnumTypeSpec.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4EnumTypeSpec_Member >&
P4EnumTypeSpec::members() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4EnumTypeSpec.members)
  return members_;
}

// repeated string annotations = 2;
int P4EnumTypeSpec::annotations_size() const {
  return annotations_.size();
}
void P4EnumTypeSpec::clear_annotations() {
  annotations_.Clear();
}
const ::std::string& P4EnumTypeSpec::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4EnumTypeSpec.annotations)
  return annotations_.Get(index);
}
::std::string* P4EnumTypeSpec::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4EnumTypeSpec.annotations)
  return annotations_.Mutable(index);
}
void P4EnumTypeSpec::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4EnumTypeSpec.annotations)
  annotations_.Mutable(index)->assign(value);
}
void P4EnumTypeSpec::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4EnumTypeSpec.annotations)
}
void P4EnumTypeSpec::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4EnumTypeSpec.annotations)
}
::std::string* P4EnumTypeSpec::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4EnumTypeSpec.annotations)
  return annotations_.Add();
}
void P4EnumTypeSpec::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4EnumTypeSpec.annotations)
}
void P4EnumTypeSpec::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4EnumTypeSpec.annotations)
}
void P4EnumTypeSpec::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4EnumTypeSpec.annotations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4EnumTypeSpec::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4EnumTypeSpec.annotations)
  return annotations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
P4EnumTypeSpec::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4EnumTypeSpec.annotations)
  return &annotations_;
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 3;
int P4EnumTypeSpec::structured_annotations_size() const {
  return structured_annotations_.size();
}
void P4EnumTypeSpec::clear_structured_annotations() {
  structured_annotations_.Clear();
}
const ::p4::config::v1::StructuredAnnotation& P4EnumTypeSpec::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4EnumTypeSpec.structured_annotations)
  return structured_annotations_.Get(index);
}
::p4::config::v1::StructuredAnnotation* P4EnumTypeSpec::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4EnumTypeSpec.structured_annotations)
  return structured_annotations_.Mutable(index);
}
::p4::config::v1::StructuredAnnotation* P4EnumTypeSpec::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4EnumTypeSpec.structured_annotations)
  return structured_annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
P4EnumTypeSpec::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4EnumTypeSpec.structured_annotations)
  return &structured_annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
P4EnumTypeSpec::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4EnumTypeSpec.structured_annotations)
  return structured_annotations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4SerializableEnumTypeSpec_Member::kNameFieldNumber;
const int P4SerializableEnumTypeSpec_Member::kValueFieldNumber;
const int P4SerializableEnumTypeSpec_Member::kAnnotationsFieldNumber;
const int P4SerializableEnumTypeSpec_Member::kStructuredAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4SerializableEnumTypeSpec_Member::P4SerializableEnumTypeSpec_Member()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4SerializableEnumTypeSpec.Member)
}
P4SerializableEnumTypeSpec_Member::P4SerializableEnumTypeSpec_Member(const P4SerializableEnumTypeSpec_Member& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      annotations_(from.annotations_),
      structured_annotations_(from.structured_annotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4SerializableEnumTypeSpec.Member)
}

void P4SerializableEnumTypeSpec_Member::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

P4SerializableEnumTypeSpec_Member::~P4SerializableEnumTypeSpec_Member() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4SerializableEnumTypeSpec.Member)
  SharedDtor();
}

void P4SerializableEnumTypeSpec_Member::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void P4SerializableEnumTypeSpec_Member::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4SerializableEnumTypeSpec_Member::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[31].descriptor;
}

const P4SerializableEnumTypeSpec_Member& P4SerializableEnumTypeSpec_Member::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4SerializableEnumTypeSpec_Member* P4SerializableEnumTypeSpec_Member::New(::google::protobuf::Arena* arena) const {
  P4SerializableEnumTypeSpec_Member* n = new P4SerializableEnumTypeSpec_Member;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4SerializableEnumTypeSpec_Member::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4SerializableEnumTypeSpec.Member)
  annotations_.Clear();
  structured_annotations_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool P4SerializableEnumTypeSpec_Member::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4SerializableEnumTypeSpec.Member)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4SerializableEnumTypeSpec.Member.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string annotations = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_annotations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotations(this->annotations_size() - 1).data(),
            this->annotations(this->annotations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_structured_annotations()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4SerializableEnumTypeSpec.Member)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4SerializableEnumTypeSpec.Member)
  return false;
#undef DO_
}

void P4SerializableEnumTypeSpec_Member::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4SerializableEnumTypeSpec.Member)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4SerializableEnumTypeSpec.Member.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // repeated string annotations = 3;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->annotations(i), output);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->structured_annotations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4SerializableEnumTypeSpec.Member)
}

::google::protobuf::uint8* P4SerializableEnumTypeSpec_Member::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4SerializableEnumTypeSpec.Member)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4SerializableEnumTypeSpec.Member.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // repeated string annotations = 3;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->annotations(i), target);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->structured_annotations(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4SerializableEnumTypeSpec.Member)
  return target;
}

size_t P4SerializableEnumTypeSpec_Member::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4SerializableEnumTypeSpec.Member)
  size_t total_size = 0;

  // repeated string annotations = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  for (int i = 0; i < this->annotations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->annotations(i));
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
  {
    unsigned int count = this->structured_annotations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->structured_annotations(i));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4SerializableEnumTypeSpec_Member::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4SerializableEnumTypeSpec.Member)
  GOOGLE_DCHECK_NE(&from, this);
  const P4SerializableEnumTypeSpec_Member* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4SerializableEnumTypeSpec_Member>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4SerializableEnumTypeSpec.Member)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4SerializableEnumTypeSpec.Member)
    MergeFrom(*source);
  }
}

void P4SerializableEnumTypeSpec_Member::MergeFrom(const P4SerializableEnumTypeSpec_Member& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4SerializableEnumTypeSpec.Member)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotations_.MergeFrom(from.annotations_);
  structured_annotations_.MergeFrom(from.structured_annotations_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void P4SerializableEnumTypeSpec_Member::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4SerializableEnumTypeSpec.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4SerializableEnumTypeSpec_Member::CopyFrom(const P4SerializableEnumTypeSpec_Member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4SerializableEnumTypeSpec.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4SerializableEnumTypeSpec_Member::IsInitialized() const {
  return true;
}

void P4SerializableEnumTypeSpec_Member::Swap(P4SerializableEnumTypeSpec_Member* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4SerializableEnumTypeSpec_Member::InternalSwap(P4SerializableEnumTypeSpec_Member* other) {
  annotations_.UnsafeArenaSwap(&other->annotations_);
  structured_annotations_.UnsafeArenaSwap(&other->structured_annotations_);
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4SerializableEnumTypeSpec_Member::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[31];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4SerializableEnumTypeSpec_Member

// string name = 1;
void P4SerializableEnumTypeSpec_Member::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P4SerializableEnumTypeSpec_Member::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4SerializableEnumTypeSpec.Member.name)
  return name_.GetNoArena();
}
void P4SerializableEnumTypeSpec_Member::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.P4SerializableEnumTypeSpec.Member.name)
}
#if LANG_CXX11
void P4SerializableEnumTypeSpec_Member::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.P4SerializableEnumTypeSpec.Member.name)
}
#endif
void P4SerializableEnumTypeSpec_Member::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4SerializableEnumTypeSpec.Member.name)
}
void P4SerializableEnumTypeSpec_Member::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4SerializableEnumTypeSpec.Member.name)
}
::std::string* P4SerializableEnumTypeSpec_Member::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4SerializableEnumTypeSpec.Member.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P4SerializableEnumTypeSpec_Member::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4SerializableEnumTypeSpec.Member.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P4SerializableEnumTypeSpec_Member::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4SerializableEnumTypeSpec.Member.name)
}

// bytes value = 2;
void P4SerializableEnumTypeSpec_Member::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P4SerializableEnumTypeSpec_Member::value() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4SerializableEnumTypeSpec.Member.value)
  return value_.GetNoArena();
}
void P4SerializableEnumTypeSpec_Member::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.P4SerializableEnumTypeSpec.Member.value)
}
#if LANG_CXX11
void P4SerializableEnumTypeSpec_Member::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.P4SerializableEnumTypeSpec.Member.value)
}
#endif
void P4SerializableEnumTypeSpec_Member::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4SerializableEnumTypeSpec.Member.value)
}
void P4SerializableEnumTypeSpec_Member::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4SerializableEnumTypeSpec.Member.value)
}
::std::string* P4SerializableEnumTypeSpec_Member::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4SerializableEnumTypeSpec.Member.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P4SerializableEnumTypeSpec_Member::release_value() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4SerializableEnumTypeSpec.Member.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P4SerializableEnumTypeSpec_Member::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4SerializableEnumTypeSpec.Member.value)
}

// repeated string annotations = 3;
int P4SerializableEnumTypeSpec_Member::annotations_size() const {
  return annotations_.size();
}
void P4SerializableEnumTypeSpec_Member::clear_annotations() {
  annotations_.Clear();
}
const ::std::string& P4SerializableEnumTypeSpec_Member::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
  return annotations_.Get(index);
}
::std::string* P4SerializableEnumTypeSpec_Member::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
  return annotations_.Mutable(index);
}
void P4SerializableEnumTypeSpec_Member::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
  annotations_.Mutable(index)->assign(value);
}
void P4SerializableEnumTypeSpec_Member::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
}
void P4SerializableEnumTypeSpec_Member::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
}
::std::string* P4SerializableEnumTypeSpec_Member::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
  return annotations_.Add();
}
void P4SerializableEnumTypeSpec_Member::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
}
void P4SerializableEnumTypeSpec_Member::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
}
void P4SerializableEnumTypeSpec_Member::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4SerializableEnumTypeSpec_Member::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
  return annotations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
P4SerializableEnumTypeSpec_Member::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
  return &annotations_;
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
int P4SerializableEnumTypeSpec_Member::structured_annotations_size() const {
  return structured_annotations_.size();
}
void P4SerializableEnumTypeSpec_Member::clear_structured_annotations() {
  structured_annotations_.Clear();
}
const ::p4::config::v1::StructuredAnnotation& P4SerializableEnumTypeSpec_Member::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4SerializableEnumTypeSpec.Member.structured_annotations)
  return structured_annotations_.Get(index);
}
::p4::config::v1::StructuredAnnotation* P4SerializableEnumTypeSpec_Member::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4SerializableEnumTypeSpec.Member.structured_annotations)
  return structured_annotations_.Mutable(index);
}
::p4::config::v1::StructuredAnnotation* P4SerializableEnumTypeSpec_Member::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4SerializableEnumTypeSpec.Member.structured_annotations)
  return structured_annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
P4SerializableEnumTypeSpec_Member::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4SerializableEnumTypeSpec.Member.structured_annotations)
  return &structured_annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
P4SerializableEnumTypeSpec_Member::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4SerializableEnumTypeSpec.Member.structured_annotations)
  return structured_annotations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4SerializableEnumTypeSpec::kUnderlyingTypeFieldNumber;
const int P4SerializableEnumTypeSpec::kMembersFieldNumber;
const int P4SerializableEnumTypeSpec::kAnnotationsFieldNumber;
const int P4SerializableEnumTypeSpec::kStructuredAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4SerializableEnumTypeSpec::P4SerializableEnumTypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4SerializableEnumTypeSpec)
}
P4SerializableEnumTypeSpec::P4SerializableEnumTypeSpec(const P4SerializableEnumTypeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_),
      annotations_(from.annotations_),
      structured_annotations_(from.structured_annotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_underlying_type()) {
    underlying_type_ = new ::p4::config::v1::P4BitTypeSpec(*from.underlying_type_);
  } else {
    underlying_type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4SerializableEnumTypeSpec)
}

void P4SerializableEnumTypeSpec::SharedCtor() {
  underlying_type_ = NULL;
  _cached_size_ = 0;
}

P4SerializableEnumTypeSpec::~P4SerializableEnumTypeSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4SerializableEnumTypeSpec)
  SharedDtor();
}

void P4SerializableEnumTypeSpec::SharedDtor() {
  if (this != internal_default_instance()) {
    delete underlying_type_;
  }
}

void P4SerializableEnumTypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4SerializableEnumTypeSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[32].descriptor;
}

const P4SerializableEnumTypeSpec& P4SerializableEnumTypeSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4SerializableEnumTypeSpec* P4SerializableEnumTypeSpec::New(::google::protobuf::Arena* arena) const {
  P4SerializableEnumTypeSpec* n = new P4SerializableEnumTypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4SerializableEnumTypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4SerializableEnumTypeSpec)
  members_.Clear();
  annotations_.Clear();
  structured_annotations_.Clear();
  if (GetArenaNoVirtual() == NULL && underlying_type_ != NULL) {
    delete underlying_type_;
  }
  underlying_type_ = NULL;
}

bool P4SerializableEnumTypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4SerializableEnumTypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.P4BitTypeSpec underlying_type = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_underlying_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.P4SerializableEnumTypeSpec.Member members = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated string annotations = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_annotations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotations(this->annotations_size() - 1).data(),
            this->annotations(this->annotations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4SerializableEnumTypeSpec.annotations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_structured_annotations()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4SerializableEnumTypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4SerializableEnumTypeSpec)
  return false;
#undef DO_
}

void P4SerializableEnumTypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4SerializableEnumTypeSpec)
  // .p4.config.v1.P4BitTypeSpec underlying_type = 1;
  if (this->has_underlying_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->underlying_type_, output);
  }

  // repeated .p4.config.v1.P4SerializableEnumTypeSpec.Member members = 2;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->members(i), output);
  }

  // repeated string annotations = 3;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4SerializableEnumTypeSpec.annotations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->annotations(i), output);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->structured_annotations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4SerializableEnumTypeSpec)
}

::google::protobuf::uint8* P4SerializableEnumTypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4SerializableEnumTypeSpec)
  // .p4.config.v1.P4BitTypeSpec underlying_type = 1;
  if (this->has_underlying_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->underlying_type_, false, target);
  }

  // repeated .p4.config.v1.P4SerializableEnumTypeSpec.Member members = 2;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->members(i), false, target);
  }

  // repeated string annotations = 3;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4SerializableEnumTypeSpec.annotations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->annotations(i), target);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->structured_annotations(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4SerializableEnumTypeSpec)
  return target;
}

size_t P4SerializableEnumTypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4SerializableEnumTypeSpec)
  size_t total_size = 0;

  // repeated .p4.config.v1.P4SerializableEnumTypeSpec.Member members = 2;
  {
    unsigned int count = this->members_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->members(i));
    }
  }

  // repeated string annotations = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  for (int i = 0; i < this->annotations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->annotations(i));
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
  {
    unsigned int count = this->structured_annotations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->structured_annotations(i));
    }
  }

  // .p4.config.v1.P4BitTypeSpec underlying_type = 1;
  if (this->has_underlying_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->underlying_type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4SerializableEnumTypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4SerializableEnumTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const P4SerializableEnumTypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4SerializableEnumTypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4SerializableEnumTypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4SerializableEnumTypeSpec)
    MergeFrom(*source);
  }
}

void P4SerializableEnumTypeSpec::MergeFrom(const P4SerializableEnumTypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4SerializableEnumTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  members_.MergeFrom(from.members_);
  annotations_.MergeFrom(from.annotations_);
  structured_annotations_.MergeFrom(from.structured_annotations_);
  if (from.has_underlying_type()) {
    mutable_underlying_type()->::p4::config::v1::P4BitTypeSpec::MergeFrom(from.underlying_type());
  }
}

void P4SerializableEnumTypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4SerializableEnumTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4SerializableEnumTypeSpec::CopyFrom(const P4SerializableEnumTypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4SerializableEnumTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4SerializableEnumTypeSpec::IsInitialized() const {
  return true;
}

void P4SerializableEnumTypeSpec::Swap(P4SerializableEnumTypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4SerializableEnumTypeSpec::InternalSwap(P4SerializableEnumTypeSpec* other) {
  members_.UnsafeArenaSwap(&other->members_);
  annotations_.UnsafeArenaSwap(&other->annotations_);
  structured_annotations_.UnsafeArenaSwap(&other->structured_annotations_);
  std::swap(underlying_type_, other->underlying_type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4SerializableEnumTypeSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[32];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4SerializableEnumTypeSpec

// .p4.config.v1.P4BitTypeSpec underlying_type = 1;
bool P4SerializableEnumTypeSpec::has_underlying_type() const {
  return this != internal_default_instance() && underlying_type_ != NULL;
}
void P4SerializableEnumTypeSpec::clear_underlying_type() {
  if (GetArenaNoVirtual() == NULL && underlying_type_ != NULL) delete underlying_type_;
  underlying_type_ = NULL;
}
const ::p4::config::v1::P4BitTypeSpec& P4SerializableEnumTypeSpec::underlying_type() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4SerializableEnumTypeSpec.underlying_type)
  return underlying_type_ != NULL ? *underlying_type_
                         : *::p4::config::v1::P4BitTypeSpec::internal_default_instance();
}
::p4::config::v1::P4BitTypeSpec* P4SerializableEnumTypeSpec::mutable_underlying_type() {
  
  if (underlying_type_ == NULL) {
    underlying_type_ = new ::p4::config::v1::P4BitTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4SerializableEnumTypeSpec.underlying_type)
  return underlying_type_;
}
::p4::config::v1::P4BitTypeSpec* P4SerializableEnumTypeSpec::release_underlying_type() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4SerializableEnumTypeSpec.underlying_type)
  
  ::p4::config::v1::P4BitTypeSpec* temp = underlying_type_;
  underlying_type_ = NULL;
  return temp;
}
void P4SerializableEnumTypeSpec::set_allocated_underlying_type(::p4::config::v1::P4BitTypeSpec* underlying_type) {
  delete underlying_type_;
  underlying_type_ = underlying_type;
  if (underlying_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4SerializableEnumTypeSpec.underlying_type)
}

// repeated .p4.config.v1.P4SerializableEnumTypeSpec.Member members = 2;
int P4SerializableEnumTypeSpec::members_size() const {
  return members_.size();
}
void P4SerializableEnumTypeSpec::clear_members() {
  members_.Clear();
}
const ::p4::config::v1::P4SerializableEnumTypeSpec_Member& P4SerializableEnumTypeSpec::members(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4SerializableEnumTypeSpec.members)
  return members_.Get(index);
}
::p4::config::v1::P4SerializableEnumTypeSpec_Member* P4SerializableEnumTypeSpec::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4SerializableEnumTypeSpec.members)
  return members_.Mutable(index);
}
::p4::config::v1::P4SerializableEnumTypeSpec_Member* P4SerializableEnumTypeSpec::add_members() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4SerializableEnumTypeSpec.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4SerializableEnumTypeSpec_Member >*
P4SerializableEnumTypeSpec::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4SerializableEnumTypeSpec.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4SerializableEnumTypeSpec_Member >&
P4SerializableEnumTypeSpec::members() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4SerializableEnumTypeSpec.members)
  return members_;
}

// repeated string annotations = 3;
int P4SerializableEnumTypeSpec::annotations_size() const {
  return annotations_.size();
}
void P4SerializableEnumTypeSpec::clear_annotations() {
  annotations_.Clear();
}
const ::std::string& P4SerializableEnumTypeSpec::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
  return annotations_.Get(index);
}
::std::string* P4SerializableEnumTypeSpec::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
  return annotations_.Mutable(index);
}
void P4SerializableEnumTypeSpec::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
  annotations_.Mutable(index)->assign(value);
}
void P4SerializableEnumTypeSpec::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
}
void P4SerializableEnumTypeSpec::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
}
::std::string* P4SerializableEnumTypeSpec::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
  return annotations_.Add();
}
void P4SerializableEnumTypeSpec::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
}
void P4SerializableEnumTypeSpec::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
}
void P4SerializableEnumTypeSpec::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4SerializableEnumTypeSpec::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
  return annotations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
P4SerializableEnumTypeSpec::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
  return &annotations_;
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
int P4SerializableEnumTypeSpec::structured_annotations_size() const {
  return structured_annotations_.size();
}
void P4SerializableEnumTypeSpec::clear_structured_annotations() {
  structured_annotations_.Clear();
}
const ::p4::config::v1::StructuredAnnotation& P4SerializableEnumTypeSpec::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4SerializableEnumTypeSpec.structured_annotations)
  return structured_annotations_.Get(index);
}
::p4::config::v1::StructuredAnnotation* P4SerializableEnumTypeSpec::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4SerializableEnumTypeSpec.structured_annotations)
  return structured_annotations_.Mutable(index);
}
::p4::config::v1::StructuredAnnotation* P4SerializableEnumTypeSpec::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4SerializableEnumTypeSpec.structured_annotations)
  return structured_annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
P4SerializableEnumTypeSpec::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4SerializableEnumTypeSpec.structured_annotations)
  return &structured_annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
P4SerializableEnumTypeSpec::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4SerializableEnumTypeSpec.structured_annotations)
  return structured_annotations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4ErrorTypeSpec::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4ErrorTypeSpec::P4ErrorTypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4ErrorTypeSpec)
}
P4ErrorTypeSpec::P4ErrorTypeSpec(const P4ErrorTypeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4ErrorTypeSpec)
}

void P4ErrorTypeSpec::SharedCtor() {
  _cached_size_ = 0;
}

P4ErrorTypeSpec::~P4ErrorTypeSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4ErrorTypeSpec)
  SharedDtor();
}

void P4ErrorTypeSpec::SharedDtor() {
}

void P4ErrorTypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4ErrorTypeSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[33].descriptor;
}

const P4ErrorTypeSpec& P4ErrorTypeSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4ErrorTypeSpec* P4ErrorTypeSpec::New(::google::protobuf::Arena* arena) const {
  P4ErrorTypeSpec* n = new P4ErrorTypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4ErrorTypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4ErrorTypeSpec)
  members_.Clear();
}

bool P4ErrorTypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4ErrorTypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string members = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_members()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->members(this->members_size() - 1).data(),
            this->members(this->members_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4ErrorTypeSpec.members"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4ErrorTypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4ErrorTypeSpec)
  return false;
#undef DO_
}

void P4ErrorTypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4ErrorTypeSpec)
  // repeated string members = 1;
  for (int i = 0; i < this->members_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->members(i).data(), this->members(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4ErrorTypeSpec.members");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->members(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4ErrorTypeSpec)
}

::google::protobuf::uint8* P4ErrorTypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4ErrorTypeSpec)
  // repeated string members = 1;
  for (int i = 0; i < this->members_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->members(i).data(), this->members(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4ErrorTypeSpec.members");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->members(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4ErrorTypeSpec)
  return target;
}

size_t P4ErrorTypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4ErrorTypeSpec)
  size_t total_size = 0;

  // repeated string members = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->members_size());
  for (int i = 0; i < this->members_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->members(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4ErrorTypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4ErrorTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const P4ErrorTypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4ErrorTypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4ErrorTypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4ErrorTypeSpec)
    MergeFrom(*source);
  }
}

void P4ErrorTypeSpec::MergeFrom(const P4ErrorTypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4ErrorTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  members_.MergeFrom(from.members_);
}

void P4ErrorTypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4ErrorTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4ErrorTypeSpec::CopyFrom(const P4ErrorTypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4ErrorTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4ErrorTypeSpec::IsInitialized() const {
  return true;
}

void P4ErrorTypeSpec::Swap(P4ErrorTypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4ErrorTypeSpec::InternalSwap(P4ErrorTypeSpec* other) {
  members_.UnsafeArenaSwap(&other->members_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4ErrorTypeSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[33];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4ErrorTypeSpec

// repeated string members = 1;
int P4ErrorTypeSpec::members_size() const {
  return members_.size();
}
void P4ErrorTypeSpec::clear_members() {
  members_.Clear();
}
const ::std::string& P4ErrorTypeSpec::members(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4ErrorTypeSpec.members)
  return members_.Get(index);
}
::std::string* P4ErrorTypeSpec::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4ErrorTypeSpec.members)
  return members_.Mutable(index);
}
void P4ErrorTypeSpec::set_members(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4ErrorTypeSpec.members)
  members_.Mutable(index)->assign(value);
}
void P4ErrorTypeSpec::set_members(int index, const char* value) {
  members_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4ErrorTypeSpec.members)
}
void P4ErrorTypeSpec::set_members(int index, const char* value, size_t size) {
  members_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4ErrorTypeSpec.members)
}
::std::string* P4ErrorTypeSpec::add_members() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4ErrorTypeSpec.members)
  return members_.Add();
}
void P4ErrorTypeSpec::add_members(const ::std::string& value) {
  members_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4ErrorTypeSpec.members)
}
void P4ErrorTypeSpec::add_members(const char* value) {
  members_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4ErrorTypeSpec.members)
}
void P4ErrorTypeSpec::add_members(const char* value, size_t size) {
  members_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4ErrorTypeSpec.members)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4ErrorTypeSpec::members() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4ErrorTypeSpec.members)
  return members_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
P4ErrorTypeSpec::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4ErrorTypeSpec.members)
  return &members_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4NewTypeTranslation_SdnString::P4NewTypeTranslation_SdnString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4NewTypeTranslation.SdnString)
}
P4NewTypeTranslation_SdnString::P4NewTypeTranslation_SdnString(const P4NewTypeTranslation_SdnString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4NewTypeTranslation.SdnString)
}

void P4NewTypeTranslation_SdnString::SharedCtor() {
  _cached_size_ = 0;
}

P4NewTypeTranslation_SdnString::~P4NewTypeTranslation_SdnString() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4NewTypeTranslation.SdnString)
  SharedDtor();
}

void P4NewTypeTranslation_SdnString::SharedDtor() {
}

void P4NewTypeTranslation_SdnString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4NewTypeTranslation_SdnString::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[34].descriptor;
}

const P4NewTypeTranslation_SdnString& P4NewTypeTranslation_SdnString::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4NewTypeTranslation_SdnString* P4NewTypeTranslation_SdnString::New(::google::protobuf::Arena* arena) const {
  P4NewTypeTranslation_SdnString* n = new P4NewTypeTranslation_SdnString;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4NewTypeTranslation_SdnString::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4NewTypeTranslation.SdnString)
}

bool P4NewTypeTranslation_SdnString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4NewTypeTranslation.SdnString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4NewTypeTranslation.SdnString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4NewTypeTranslation.SdnString)
  return false;
#undef DO_
}

void P4NewTypeTranslation_SdnString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4NewTypeTranslation.SdnString)
  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4NewTypeTranslation.SdnString)
}

::google::protobuf::uint8* P4NewTypeTranslation_SdnString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4NewTypeTranslation.SdnString)
  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4NewTypeTranslation.SdnString)
  return target;
}

size_t P4NewTypeTranslation_SdnString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4NewTypeTranslation.SdnString)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4NewTypeTranslation_SdnString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4NewTypeTranslation.SdnString)
  GOOGLE_DCHECK_NE(&from, this);
  const P4NewTypeTranslation_SdnString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4NewTypeTranslation_SdnString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4NewTypeTranslation.SdnString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4NewTypeTranslation.SdnString)
    MergeFrom(*source);
  }
}

void P4NewTypeTranslation_SdnString::MergeFrom(const P4NewTypeTranslation_SdnString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4NewTypeTranslation.SdnString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void P4NewTypeTranslation_SdnString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4NewTypeTranslation.SdnString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4NewTypeTranslation_SdnString::CopyFrom(const P4NewTypeTranslation_SdnString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4NewTypeTranslation.SdnString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4NewTypeTranslation_SdnString::IsInitialized() const {
  return true;
}

void P4NewTypeTranslation_SdnString::Swap(P4NewTypeTranslation_SdnString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4NewTypeTranslation_SdnString::InternalSwap(P4NewTypeTranslation_SdnString* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4NewTypeTranslation_SdnString::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[34];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4NewTypeTranslation_SdnString

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4NewTypeTranslation::kUriFieldNumber;
const int P4NewTypeTranslation::kSdnBitwidthFieldNumber;
const int P4NewTypeTranslation::kSdnStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4NewTypeTranslation::P4NewTypeTranslation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4NewTypeTranslation)
}
P4NewTypeTranslation::P4NewTypeTranslation(const P4NewTypeTranslation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  clear_has_sdn_type();
  switch (from.sdn_type_case()) {
    case kSdnBitwidth: {
      set_sdn_bitwidth(from.sdn_bitwidth());
      break;
    }
    case kSdnString: {
      mutable_sdn_string()->::p4::config::v1::P4NewTypeTranslation_SdnString::MergeFrom(from.sdn_string());
      break;
    }
    case SDN_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4NewTypeTranslation)
}

void P4NewTypeTranslation::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sdn_type();
  _cached_size_ = 0;
}

P4NewTypeTranslation::~P4NewTypeTranslation() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4NewTypeTranslation)
  SharedDtor();
}

void P4NewTypeTranslation::SharedDtor() {
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_sdn_type()) {
    clear_sdn_type();
  }
}

void P4NewTypeTranslation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4NewTypeTranslation::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[35].descriptor;
}

const P4NewTypeTranslation& P4NewTypeTranslation::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4NewTypeTranslation* P4NewTypeTranslation::New(::google::protobuf::Arena* arena) const {
  P4NewTypeTranslation* n = new P4NewTypeTranslation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4NewTypeTranslation::clear_sdn_type() {
// @@protoc_insertion_point(one_of_clear_start:p4.config.v1.P4NewTypeTranslation)
  switch (sdn_type_case()) {
    case kSdnBitwidth: {
      // No need to clear
      break;
    }
    case kSdnString: {
      delete sdn_type_.sdn_string_;
      break;
    }
    case SDN_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SDN_TYPE_NOT_SET;
}


void P4NewTypeTranslation::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4NewTypeTranslation)
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_sdn_type();
}

bool P4NewTypeTranslation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4NewTypeTranslation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), this->uri().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4NewTypeTranslation.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sdn_bitwidth = 2;
      case 2: {
        if (tag == 16u) {
          clear_sdn_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sdn_type_.sdn_bitwidth_)));
          set_has_sdn_bitwidth();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4NewTypeTranslation.SdnString sdn_string = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sdn_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4NewTypeTranslation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4NewTypeTranslation)
  return false;
#undef DO_
}

void P4NewTypeTranslation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4NewTypeTranslation)
  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), this->uri().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4NewTypeTranslation.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  // int32 sdn_bitwidth = 2;
  if (has_sdn_bitwidth()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sdn_bitwidth(), output);
  }

  // .p4.config.v1.P4NewTypeTranslation.SdnString sdn_string = 3;
  if (has_sdn_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *sdn_type_.sdn_string_, output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4NewTypeTranslation)
}

::google::protobuf::uint8* P4NewTypeTranslation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4NewTypeTranslation)
  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), this->uri().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4NewTypeTranslation.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  // int32 sdn_bitwidth = 2;
  if (has_sdn_bitwidth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sdn_bitwidth(), target);
  }

  // .p4.config.v1.P4NewTypeTranslation.SdnString sdn_string = 3;
  if (has_sdn_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *sdn_type_.sdn_string_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4NewTypeTranslation)
  return target;
}

size_t P4NewTypeTranslation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4NewTypeTranslation)
  size_t total_size = 0;

  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  switch (sdn_type_case()) {
    // int32 sdn_bitwidth = 2;
    case kSdnBitwidth: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sdn_bitwidth());
      break;
    }
    // .p4.config.v1.P4NewTypeTranslation.SdnString sdn_string = 3;
    case kSdnString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *sdn_type_.sdn_string_);
      break;
    }
    case SDN_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4NewTypeTranslation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4NewTypeTranslation)
  GOOGLE_DCHECK_NE(&from, this);
  const P4NewTypeTranslation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4NewTypeTranslation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4NewTypeTranslation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4NewTypeTranslation)
    MergeFrom(*source);
  }
}

void P4NewTypeTranslation::MergeFrom(const P4NewTypeTranslation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4NewTypeTranslation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  switch (from.sdn_type_case()) {
    case kSdnBitwidth: {
      set_sdn_bitwidth(from.sdn_bitwidth());
      break;
    }
    case kSdnString: {
      mutable_sdn_string()->::p4::config::v1::P4NewTypeTranslation_SdnString::MergeFrom(from.sdn_string());
      break;
    }
    case SDN_TYPE_NOT_SET: {
      break;
    }
  }
}

void P4NewTypeTranslation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4NewTypeTranslation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4NewTypeTranslation::CopyFrom(const P4NewTypeTranslation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4NewTypeTranslation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4NewTypeTranslation::IsInitialized() const {
  return true;
}

void P4NewTypeTranslation::Swap(P4NewTypeTranslation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4NewTypeTranslation::InternalSwap(P4NewTypeTranslation* other) {
  uri_.Swap(&other->uri_);
  std::swap(sdn_type_, other->sdn_type_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4NewTypeTranslation::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[35];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4NewTypeTranslation

// string uri = 1;
void P4NewTypeTranslation::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& P4NewTypeTranslation::uri() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4NewTypeTranslation.uri)
  return uri_.GetNoArena();
}
void P4NewTypeTranslation::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.P4NewTypeTranslation.uri)
}
#if LANG_CXX11
void P4NewTypeTranslation::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.P4NewTypeTranslation.uri)
}
#endif
void P4NewTypeTranslation::set_uri(const char* value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4NewTypeTranslation.uri)
}
void P4NewTypeTranslation::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4NewTypeTranslation.uri)
}
::std::string* P4NewTypeTranslation::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4NewTypeTranslation.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* P4NewTypeTranslation::release_uri() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4NewTypeTranslation.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void P4NewTypeTranslation::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4NewTypeTranslation.uri)
}

// int32 sdn_bitwidth = 2;
bool P4NewTypeTranslation::has_sdn_bitwidth() const {
  return sdn_type_case() == kSdnBitwidth;
}
void P4NewTypeTranslation::set_has_sdn_bitwidth() {
  _oneof_case_[0] = kSdnBitwidth;
}
void P4NewTypeTranslation::clear_sdn_bitwidth() {
  if (has_sdn_bitwidth()) {
    sdn_type_.sdn_bitwidth_ = 0;
    clear_has_sdn_type();
  }
}
::google::protobuf::int32 P4NewTypeTranslation::sdn_bitwidth() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4NewTypeTranslation.sdn_bitwidth)
  if (has_sdn_bitwidth()) {
    return sdn_type_.sdn_bitwidth_;
  }
  return 0;
}
void P4NewTypeTranslation::set_sdn_bitwidth(::google::protobuf::int32 value) {
  if (!has_sdn_bitwidth()) {
    clear_sdn_type();
    set_has_sdn_bitwidth();
  }
  sdn_type_.sdn_bitwidth_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.P4NewTypeTranslation.sdn_bitwidth)
}

// .p4.config.v1.P4NewTypeTranslation.SdnString sdn_string = 3;
bool P4NewTypeTranslation::has_sdn_string() const {
  return sdn_type_case() == kSdnString;
}
void P4NewTypeTranslation::set_has_sdn_string() {
  _oneof_case_[0] = kSdnString;
}
void P4NewTypeTranslation::clear_sdn_string() {
  if (has_sdn_string()) {
    delete sdn_type_.sdn_string_;
    clear_has_sdn_type();
  }
}
 const ::p4::config::v1::P4NewTypeTranslation_SdnString& P4NewTypeTranslation::sdn_string() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4NewTypeTranslation.sdn_string)
  return has_sdn_string()
      ? *sdn_type_.sdn_string_
      : ::p4::config::v1::P4NewTypeTranslation_SdnString::default_instance();
}
::p4::config::v1::P4NewTypeTranslation_SdnString* P4NewTypeTranslation::mutable_sdn_string() {
  if (!has_sdn_string()) {
    clear_sdn_type();
    set_has_sdn_string();
    sdn_type_.sdn_string_ = new ::p4::config::v1::P4NewTypeTranslation_SdnString;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4NewTypeTranslation.sdn_string)
  return sdn_type_.sdn_string_;
}
::p4::config::v1::P4NewTypeTranslation_SdnString* P4NewTypeTranslation::release_sdn_string() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4NewTypeTranslation.sdn_string)
  if (has_sdn_string()) {
    clear_has_sdn_type();
    ::p4::config::v1::P4NewTypeTranslation_SdnString* temp = sdn_type_.sdn_string_;
    sdn_type_.sdn_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4NewTypeTranslation::set_allocated_sdn_string(::p4::config::v1::P4NewTypeTranslation_SdnString* sdn_string) {
  clear_sdn_type();
  if (sdn_string) {
    set_has_sdn_string();
    sdn_type_.sdn_string_ = sdn_string;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4NewTypeTranslation.sdn_string)
}

bool P4NewTypeTranslation::has_sdn_type() const {
  return sdn_type_case() != SDN_TYPE_NOT_SET;
}
void P4NewTypeTranslation::clear_has_sdn_type() {
  _oneof_case_[0] = SDN_TYPE_NOT_SET;
}
P4NewTypeTranslation::SdnTypeCase P4NewTypeTranslation::sdn_type_case() const {
  return P4NewTypeTranslation::SdnTypeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int P4NewTypeSpec::kOriginalTypeFieldNumber;
const int P4NewTypeSpec::kTranslatedTypeFieldNumber;
const int P4NewTypeSpec::kAnnotationsFieldNumber;
const int P4NewTypeSpec::kStructuredAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

P4NewTypeSpec::P4NewTypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:p4.config.v1.P4NewTypeSpec)
}
P4NewTypeSpec::P4NewTypeSpec(const P4NewTypeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      annotations_(from.annotations_),
      structured_annotations_(from.structured_annotations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_representation();
  switch (from.representation_case()) {
    case kOriginalType: {
      mutable_original_type()->::p4::config::v1::P4DataTypeSpec::MergeFrom(from.original_type());
      break;
    }
    case kTranslatedType: {
      mutable_translated_type()->::p4::config::v1::P4NewTypeTranslation::MergeFrom(from.translated_type());
      break;
    }
    case REPRESENTATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:p4.config.v1.P4NewTypeSpec)
}

void P4NewTypeSpec::SharedCtor() {
  clear_has_representation();
  _cached_size_ = 0;
}

P4NewTypeSpec::~P4NewTypeSpec() {
  // @@protoc_insertion_point(destructor:p4.config.v1.P4NewTypeSpec)
  SharedDtor();
}

void P4NewTypeSpec::SharedDtor() {
  if (has_representation()) {
    clear_representation();
  }
}

void P4NewTypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* P4NewTypeSpec::descriptor() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[36].descriptor;
}

const P4NewTypeSpec& P4NewTypeSpec::default_instance() {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::InitDefaults();
  return *internal_default_instance();
}

P4NewTypeSpec* P4NewTypeSpec::New(::google::protobuf::Arena* arena) const {
  P4NewTypeSpec* n = new P4NewTypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void P4NewTypeSpec::clear_representation() {
// @@protoc_insertion_point(one_of_clear_start:p4.config.v1.P4NewTypeSpec)
  switch (representation_case()) {
    case kOriginalType: {
      delete representation_.original_type_;
      break;
    }
    case kTranslatedType: {
      delete representation_.translated_type_;
      break;
    }
    case REPRESENTATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REPRESENTATION_NOT_SET;
}


void P4NewTypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:p4.config.v1.P4NewTypeSpec)
  annotations_.Clear();
  structured_annotations_.Clear();
  clear_representation();
}

bool P4NewTypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:p4.config.v1.P4NewTypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .p4.config.v1.P4DataTypeSpec original_type = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_original_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .p4.config.v1.P4NewTypeTranslation translated_type = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_translated_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string annotations = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_annotations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->annotations(this->annotations_size() - 1).data(),
            this->annotations(this->annotations_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "p4.config.v1.P4NewTypeSpec.annotations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_structured_annotations()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:p4.config.v1.P4NewTypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:p4.config.v1.P4NewTypeSpec)
  return false;
#undef DO_
}

void P4NewTypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:p4.config.v1.P4NewTypeSpec)
  // .p4.config.v1.P4DataTypeSpec original_type = 1;
  if (has_original_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *representation_.original_type_, output);
  }

  // .p4.config.v1.P4NewTypeTranslation translated_type = 2;
  if (has_translated_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *representation_.translated_type_, output);
  }

  // repeated string annotations = 3;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4NewTypeSpec.annotations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->annotations(i), output);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->structured_annotations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:p4.config.v1.P4NewTypeSpec)
}

::google::protobuf::uint8* P4NewTypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:p4.config.v1.P4NewTypeSpec)
  // .p4.config.v1.P4DataTypeSpec original_type = 1;
  if (has_original_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *representation_.original_type_, false, target);
  }

  // .p4.config.v1.P4NewTypeTranslation translated_type = 2;
  if (has_translated_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *representation_.translated_type_, false, target);
  }

  // repeated string annotations = 3;
  for (int i = 0; i < this->annotations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->annotations(i).data(), this->annotations(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "p4.config.v1.P4NewTypeSpec.annotations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->annotations(i), target);
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
  for (unsigned int i = 0, n = this->structured_annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->structured_annotations(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:p4.config.v1.P4NewTypeSpec)
  return target;
}

size_t P4NewTypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:p4.config.v1.P4NewTypeSpec)
  size_t total_size = 0;

  // repeated string annotations = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  for (int i = 0; i < this->annotations_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->annotations(i));
  }

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
  {
    unsigned int count = this->structured_annotations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->structured_annotations(i));
    }
  }

  switch (representation_case()) {
    // .p4.config.v1.P4DataTypeSpec original_type = 1;
    case kOriginalType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *representation_.original_type_);
      break;
    }
    // .p4.config.v1.P4NewTypeTranslation translated_type = 2;
    case kTranslatedType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *representation_.translated_type_);
      break;
    }
    case REPRESENTATION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void P4NewTypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:p4.config.v1.P4NewTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const P4NewTypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const P4NewTypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:p4.config.v1.P4NewTypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:p4.config.v1.P4NewTypeSpec)
    MergeFrom(*source);
  }
}

void P4NewTypeSpec::MergeFrom(const P4NewTypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:p4.config.v1.P4NewTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotations_.MergeFrom(from.annotations_);
  structured_annotations_.MergeFrom(from.structured_annotations_);
  switch (from.representation_case()) {
    case kOriginalType: {
      mutable_original_type()->::p4::config::v1::P4DataTypeSpec::MergeFrom(from.original_type());
      break;
    }
    case kTranslatedType: {
      mutable_translated_type()->::p4::config::v1::P4NewTypeTranslation::MergeFrom(from.translated_type());
      break;
    }
    case REPRESENTATION_NOT_SET: {
      break;
    }
  }
}

void P4NewTypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:p4.config.v1.P4NewTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void P4NewTypeSpec::CopyFrom(const P4NewTypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:p4.config.v1.P4NewTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool P4NewTypeSpec::IsInitialized() const {
  return true;
}

void P4NewTypeSpec::Swap(P4NewTypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void P4NewTypeSpec::InternalSwap(P4NewTypeSpec* other) {
  annotations_.UnsafeArenaSwap(&other->annotations_);
  structured_annotations_.UnsafeArenaSwap(&other->structured_annotations_);
  std::swap(representation_, other->representation_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata P4NewTypeSpec::GetMetadata() const {
  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::file_level_metadata[36];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// P4NewTypeSpec

// .p4.config.v1.P4DataTypeSpec original_type = 1;
bool P4NewTypeSpec::has_original_type() const {
  return representation_case() == kOriginalType;
}
void P4NewTypeSpec::set_has_original_type() {
  _oneof_case_[0] = kOriginalType;
}
void P4NewTypeSpec::clear_original_type() {
  if (has_original_type()) {
    delete representation_.original_type_;
    clear_has_representation();
  }
}
 const ::p4::config::v1::P4DataTypeSpec& P4NewTypeSpec::original_type() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4NewTypeSpec.original_type)
  return has_original_type()
      ? *representation_.original_type_
      : ::p4::config::v1::P4DataTypeSpec::default_instance();
}
::p4::config::v1::P4DataTypeSpec* P4NewTypeSpec::mutable_original_type() {
  if (!has_original_type()) {
    clear_representation();
    set_has_original_type();
    representation_.original_type_ = new ::p4::config::v1::P4DataTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4NewTypeSpec.original_type)
  return representation_.original_type_;
}
::p4::config::v1::P4DataTypeSpec* P4NewTypeSpec::release_original_type() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4NewTypeSpec.original_type)
  if (has_original_type()) {
    clear_has_representation();
    ::p4::config::v1::P4DataTypeSpec* temp = representation_.original_type_;
    representation_.original_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4NewTypeSpec::set_allocated_original_type(::p4::config::v1::P4DataTypeSpec* original_type) {
  clear_representation();
  if (original_type) {
    set_has_original_type();
    representation_.original_type_ = original_type;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4NewTypeSpec.original_type)
}

// .p4.config.v1.P4NewTypeTranslation translated_type = 2;
bool P4NewTypeSpec::has_translated_type() const {
  return representation_case() == kTranslatedType;
}
void P4NewTypeSpec::set_has_translated_type() {
  _oneof_case_[0] = kTranslatedType;
}
void P4NewTypeSpec::clear_translated_type() {
  if (has_translated_type()) {
    delete representation_.translated_type_;
    clear_has_representation();
  }
}
 const ::p4::config::v1::P4NewTypeTranslation& P4NewTypeSpec::translated_type() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4NewTypeSpec.translated_type)
  return has_translated_type()
      ? *representation_.translated_type_
      : ::p4::config::v1::P4NewTypeTranslation::default_instance();
}
::p4::config::v1::P4NewTypeTranslation* P4NewTypeSpec::mutable_translated_type() {
  if (!has_translated_type()) {
    clear_representation();
    set_has_translated_type();
    representation_.translated_type_ = new ::p4::config::v1::P4NewTypeTranslation;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4NewTypeSpec.translated_type)
  return representation_.translated_type_;
}
::p4::config::v1::P4NewTypeTranslation* P4NewTypeSpec::release_translated_type() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4NewTypeSpec.translated_type)
  if (has_translated_type()) {
    clear_has_representation();
    ::p4::config::v1::P4NewTypeTranslation* temp = representation_.translated_type_;
    representation_.translated_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void P4NewTypeSpec::set_allocated_translated_type(::p4::config::v1::P4NewTypeTranslation* translated_type) {
  clear_representation();
  if (translated_type) {
    set_has_translated_type();
    representation_.translated_type_ = translated_type;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4NewTypeSpec.translated_type)
}

// repeated string annotations = 3;
int P4NewTypeSpec::annotations_size() const {
  return annotations_.size();
}
void P4NewTypeSpec::clear_annotations() {
  annotations_.Clear();
}
const ::std::string& P4NewTypeSpec::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4NewTypeSpec.annotations)
  return annotations_.Get(index);
}
::std::string* P4NewTypeSpec::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4NewTypeSpec.annotations)
  return annotations_.Mutable(index);
}
void P4NewTypeSpec::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4NewTypeSpec.annotations)
  annotations_.Mutable(index)->assign(value);
}
void P4NewTypeSpec::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4NewTypeSpec.annotations)
}
void P4NewTypeSpec::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4NewTypeSpec.annotations)
}
::std::string* P4NewTypeSpec::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4NewTypeSpec.annotations)
  return annotations_.Add();
}
void P4NewTypeSpec::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4NewTypeSpec.annotations)
}
void P4NewTypeSpec::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4NewTypeSpec.annotations)
}
void P4NewTypeSpec::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4NewTypeSpec.annotations)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4NewTypeSpec::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4NewTypeSpec.annotations)
  return annotations_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
P4NewTypeSpec::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4NewTypeSpec.annotations)
  return &annotations_;
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
int P4NewTypeSpec::structured_annotations_size() const {
  return structured_annotations_.size();
}
void P4NewTypeSpec::clear_structured_annotations() {
  structured_annotations_.Clear();
}
const ::p4::config::v1::StructuredAnnotation& P4NewTypeSpec::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4NewTypeSpec.structured_annotations)
  return structured_annotations_.Get(index);
}
::p4::config::v1::StructuredAnnotation* P4NewTypeSpec::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4NewTypeSpec.structured_annotations)
  return structured_annotations_.Mutable(index);
}
::p4::config::v1::StructuredAnnotation* P4NewTypeSpec::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4NewTypeSpec.structured_annotations)
  return structured_annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
P4NewTypeSpec::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4NewTypeSpec.structured_annotations)
  return &structured_annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
P4NewTypeSpec::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4NewTypeSpec.structured_annotations)
  return structured_annotations_;
}

bool P4NewTypeSpec::has_representation() const {
  return representation_case() != REPRESENTATION_NOT_SET;
}
void P4NewTypeSpec::clear_has_representation() {
  _oneof_case_[0] = REPRESENTATION_NOT_SET;
}
P4NewTypeSpec::RepresentationCase P4NewTypeSpec::representation_case() const {
  return P4NewTypeSpec::RepresentationCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace config
}  // namespace p4

// @@protoc_insertion_point(global_scope)
