// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: p4/config/v1/p4types.proto

#ifndef PROTOBUF_p4_2fconfig_2fv1_2fp4types_2eproto__INCLUDED
#define PROTOBUF_p4_2fconfig_2fv1_2fp4types_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace p4 {
namespace config {
namespace v1 {
class Expression;
class ExpressionDefaultTypeInternal;
extern ExpressionDefaultTypeInternal _Expression_default_instance_;
class ExpressionList;
class ExpressionListDefaultTypeInternal;
extern ExpressionListDefaultTypeInternal _ExpressionList_default_instance_;
class KeyValuePair;
class KeyValuePairDefaultTypeInternal;
extern KeyValuePairDefaultTypeInternal _KeyValuePair_default_instance_;
class KeyValuePairList;
class KeyValuePairListDefaultTypeInternal;
extern KeyValuePairListDefaultTypeInternal _KeyValuePairList_default_instance_;
class P4BitTypeSpec;
class P4BitTypeSpecDefaultTypeInternal;
extern P4BitTypeSpecDefaultTypeInternal _P4BitTypeSpec_default_instance_;
class P4BitstringLikeTypeSpec;
class P4BitstringLikeTypeSpecDefaultTypeInternal;
extern P4BitstringLikeTypeSpecDefaultTypeInternal _P4BitstringLikeTypeSpec_default_instance_;
class P4BoolType;
class P4BoolTypeDefaultTypeInternal;
extern P4BoolTypeDefaultTypeInternal _P4BoolType_default_instance_;
class P4DataTypeSpec;
class P4DataTypeSpecDefaultTypeInternal;
extern P4DataTypeSpecDefaultTypeInternal _P4DataTypeSpec_default_instance_;
class P4EnumTypeSpec;
class P4EnumTypeSpecDefaultTypeInternal;
extern P4EnumTypeSpecDefaultTypeInternal _P4EnumTypeSpec_default_instance_;
class P4EnumTypeSpec_Member;
class P4EnumTypeSpec_MemberDefaultTypeInternal;
extern P4EnumTypeSpec_MemberDefaultTypeInternal _P4EnumTypeSpec_Member_default_instance_;
class P4ErrorType;
class P4ErrorTypeDefaultTypeInternal;
extern P4ErrorTypeDefaultTypeInternal _P4ErrorType_default_instance_;
class P4ErrorTypeSpec;
class P4ErrorTypeSpecDefaultTypeInternal;
extern P4ErrorTypeSpecDefaultTypeInternal _P4ErrorTypeSpec_default_instance_;
class P4HeaderStackTypeSpec;
class P4HeaderStackTypeSpecDefaultTypeInternal;
extern P4HeaderStackTypeSpecDefaultTypeInternal _P4HeaderStackTypeSpec_default_instance_;
class P4HeaderTypeSpec;
class P4HeaderTypeSpecDefaultTypeInternal;
extern P4HeaderTypeSpecDefaultTypeInternal _P4HeaderTypeSpec_default_instance_;
class P4HeaderTypeSpec_Member;
class P4HeaderTypeSpec_MemberDefaultTypeInternal;
extern P4HeaderTypeSpec_MemberDefaultTypeInternal _P4HeaderTypeSpec_Member_default_instance_;
class P4HeaderUnionStackTypeSpec;
class P4HeaderUnionStackTypeSpecDefaultTypeInternal;
extern P4HeaderUnionStackTypeSpecDefaultTypeInternal _P4HeaderUnionStackTypeSpec_default_instance_;
class P4HeaderUnionTypeSpec;
class P4HeaderUnionTypeSpecDefaultTypeInternal;
extern P4HeaderUnionTypeSpecDefaultTypeInternal _P4HeaderUnionTypeSpec_default_instance_;
class P4HeaderUnionTypeSpec_Member;
class P4HeaderUnionTypeSpec_MemberDefaultTypeInternal;
extern P4HeaderUnionTypeSpec_MemberDefaultTypeInternal _P4HeaderUnionTypeSpec_Member_default_instance_;
class P4IntTypeSpec;
class P4IntTypeSpecDefaultTypeInternal;
extern P4IntTypeSpecDefaultTypeInternal _P4IntTypeSpec_default_instance_;
class P4NamedType;
class P4NamedTypeDefaultTypeInternal;
extern P4NamedTypeDefaultTypeInternal _P4NamedType_default_instance_;
class P4NewTypeSpec;
class P4NewTypeSpecDefaultTypeInternal;
extern P4NewTypeSpecDefaultTypeInternal _P4NewTypeSpec_default_instance_;
class P4NewTypeTranslation;
class P4NewTypeTranslationDefaultTypeInternal;
extern P4NewTypeTranslationDefaultTypeInternal _P4NewTypeTranslation_default_instance_;
class P4NewTypeTranslation_SdnString;
class P4NewTypeTranslation_SdnStringDefaultTypeInternal;
extern P4NewTypeTranslation_SdnStringDefaultTypeInternal _P4NewTypeTranslation_SdnString_default_instance_;
class P4SerializableEnumTypeSpec;
class P4SerializableEnumTypeSpecDefaultTypeInternal;
extern P4SerializableEnumTypeSpecDefaultTypeInternal _P4SerializableEnumTypeSpec_default_instance_;
class P4SerializableEnumTypeSpec_Member;
class P4SerializableEnumTypeSpec_MemberDefaultTypeInternal;
extern P4SerializableEnumTypeSpec_MemberDefaultTypeInternal _P4SerializableEnumTypeSpec_Member_default_instance_;
class P4StructTypeSpec;
class P4StructTypeSpecDefaultTypeInternal;
extern P4StructTypeSpecDefaultTypeInternal _P4StructTypeSpec_default_instance_;
class P4StructTypeSpec_Member;
class P4StructTypeSpec_MemberDefaultTypeInternal;
extern P4StructTypeSpec_MemberDefaultTypeInternal _P4StructTypeSpec_Member_default_instance_;
class P4TupleTypeSpec;
class P4TupleTypeSpecDefaultTypeInternal;
extern P4TupleTypeSpecDefaultTypeInternal _P4TupleTypeSpec_default_instance_;
class P4TypeInfo;
class P4TypeInfoDefaultTypeInternal;
extern P4TypeInfoDefaultTypeInternal _P4TypeInfo_default_instance_;
class P4VarbitTypeSpec;
class P4VarbitTypeSpecDefaultTypeInternal;
extern P4VarbitTypeSpecDefaultTypeInternal _P4VarbitTypeSpec_default_instance_;
class StructuredAnnotation;
class StructuredAnnotationDefaultTypeInternal;
extern StructuredAnnotationDefaultTypeInternal _StructuredAnnotation_default_instance_;
}  // namespace v1
}  // namespace config
}  // namespace p4

namespace p4 {
namespace config {
namespace v1 {

namespace protobuf_p4_2fconfig_2fv1_2fp4types_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_p4_2fconfig_2fv1_2fp4types_2eproto

// ===================================================================


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class P4TypeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4TypeInfo) */ {
 public:
  P4TypeInfo();
  virtual ~P4TypeInfo();

  P4TypeInfo(const P4TypeInfo& from);

  inline P4TypeInfo& operator=(const P4TypeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4TypeInfo& default_instance();

  static inline const P4TypeInfo* internal_default_instance() {
    return reinterpret_cast<const P4TypeInfo*>(
               &_P4TypeInfo_default_instance_);
  }

  void Swap(P4TypeInfo* other);

  // implements Message ----------------------------------------------

  inline P4TypeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  P4TypeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4TypeInfo& from);
  void MergeFrom(const P4TypeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4TypeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .p4.config.v1.P4StructTypeSpec> structs = 1;
  int structs_size() const;
  void clear_structs();
  static const int kStructsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4StructTypeSpec >&
      structs() const;
  ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4StructTypeSpec >*
      mutable_structs();

  // map<string, .p4.config.v1.P4HeaderTypeSpec> headers = 2;
  int headers_size() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderTypeSpec >&
      headers() const;
  ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderTypeSpec >*
      mutable_headers();

  // map<string, .p4.config.v1.P4HeaderUnionTypeSpec> header_unions = 3;
  int header_unions_size() const;
  void clear_header_unions();
  static const int kHeaderUnionsFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec >&
      header_unions() const;
  ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec >*
      mutable_header_unions();

  // map<string, .p4.config.v1.P4EnumTypeSpec> enums = 4;
  int enums_size() const;
  void clear_enums();
  static const int kEnumsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4EnumTypeSpec >&
      enums() const;
  ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4EnumTypeSpec >*
      mutable_enums();

  // map<string, .p4.config.v1.P4SerializableEnumTypeSpec> serializable_enums = 6;
  int serializable_enums_size() const;
  void clear_serializable_enums();
  static const int kSerializableEnumsFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec >&
      serializable_enums() const;
  ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec >*
      mutable_serializable_enums();

  // map<string, .p4.config.v1.P4NewTypeSpec> new_types = 7;
  int new_types_size() const;
  void clear_new_types();
  static const int kNewTypesFieldNumber = 7;
  const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4NewTypeSpec >&
      new_types() const;
  ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4NewTypeSpec >*
      mutable_new_types();

  // .p4.config.v1.P4ErrorTypeSpec error = 5;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 5;
  const ::p4::config::v1::P4ErrorTypeSpec& error() const;
  ::p4::config::v1::P4ErrorTypeSpec* mutable_error();
  ::p4::config::v1::P4ErrorTypeSpec* release_error();
  void set_allocated_error(::p4::config::v1::P4ErrorTypeSpec* error);

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4TypeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::p4::config::v1::P4StructTypeSpec,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      P4TypeInfo_StructsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::p4::config::v1::P4StructTypeSpec,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > structs_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::p4::config::v1::P4HeaderTypeSpec,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      P4TypeInfo_HeadersEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::p4::config::v1::P4HeaderTypeSpec,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > headers_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      P4TypeInfo_HeaderUnionsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > header_unions_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::p4::config::v1::P4EnumTypeSpec,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      P4TypeInfo_EnumsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::p4::config::v1::P4EnumTypeSpec,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > enums_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      P4TypeInfo_SerializableEnumsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > serializable_enums_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::p4::config::v1::P4NewTypeSpec,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      P4TypeInfo_NewTypesEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::p4::config::v1::P4NewTypeSpec,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > new_types_;
  ::p4::config::v1::P4ErrorTypeSpec* error_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4DataTypeSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4DataTypeSpec) */ {
 public:
  P4DataTypeSpec();
  virtual ~P4DataTypeSpec();

  P4DataTypeSpec(const P4DataTypeSpec& from);

  inline P4DataTypeSpec& operator=(const P4DataTypeSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4DataTypeSpec& default_instance();

  enum TypeSpecCase {
    kBitstring = 1,
    kBool = 2,
    kTuple = 3,
    kStruct = 4,
    kHeader = 5,
    kHeaderUnion = 6,
    kHeaderStack = 7,
    kHeaderUnionStack = 8,
    kEnum = 9,
    kError = 10,
    kSerializableEnum = 11,
    kNewType = 12,
    TYPE_SPEC_NOT_SET = 0,
  };

  static inline const P4DataTypeSpec* internal_default_instance() {
    return reinterpret_cast<const P4DataTypeSpec*>(
               &_P4DataTypeSpec_default_instance_);
  }

  void Swap(P4DataTypeSpec* other);

  // implements Message ----------------------------------------------

  inline P4DataTypeSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  P4DataTypeSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4DataTypeSpec& from);
  void MergeFrom(const P4DataTypeSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4DataTypeSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.config.v1.P4BitstringLikeTypeSpec bitstring = 1;
  bool has_bitstring() const;
  void clear_bitstring();
  static const int kBitstringFieldNumber = 1;
  const ::p4::config::v1::P4BitstringLikeTypeSpec& bitstring() const;
  ::p4::config::v1::P4BitstringLikeTypeSpec* mutable_bitstring();
  ::p4::config::v1::P4BitstringLikeTypeSpec* release_bitstring();
  void set_allocated_bitstring(::p4::config::v1::P4BitstringLikeTypeSpec* bitstring);

  // .p4.config.v1.P4BoolType bool = 2;
  bool has_bool_() const;
  void clear_bool_();
  static const int kBoolFieldNumber = 2;
  const ::p4::config::v1::P4BoolType& bool_() const;
  ::p4::config::v1::P4BoolType* mutable_bool_();
  ::p4::config::v1::P4BoolType* release_bool_();
  void set_allocated_bool_(::p4::config::v1::P4BoolType* bool_);

  // .p4.config.v1.P4TupleTypeSpec tuple = 3;
  bool has_tuple() const;
  void clear_tuple();
  static const int kTupleFieldNumber = 3;
  const ::p4::config::v1::P4TupleTypeSpec& tuple() const;
  ::p4::config::v1::P4TupleTypeSpec* mutable_tuple();
  ::p4::config::v1::P4TupleTypeSpec* release_tuple();
  void set_allocated_tuple(::p4::config::v1::P4TupleTypeSpec* tuple);

  // .p4.config.v1.P4NamedType struct = 4;
  bool has_struct_() const;
  void clear_struct_();
  static const int kStructFieldNumber = 4;
  const ::p4::config::v1::P4NamedType& struct_() const;
  ::p4::config::v1::P4NamedType* mutable_struct_();
  ::p4::config::v1::P4NamedType* release_struct_();
  void set_allocated_struct_(::p4::config::v1::P4NamedType* struct_);

  // .p4.config.v1.P4NamedType header = 5;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 5;
  const ::p4::config::v1::P4NamedType& header() const;
  ::p4::config::v1::P4NamedType* mutable_header();
  ::p4::config::v1::P4NamedType* release_header();
  void set_allocated_header(::p4::config::v1::P4NamedType* header);

  // .p4.config.v1.P4NamedType header_union = 6;
  bool has_header_union() const;
  void clear_header_union();
  static const int kHeaderUnionFieldNumber = 6;
  const ::p4::config::v1::P4NamedType& header_union() const;
  ::p4::config::v1::P4NamedType* mutable_header_union();
  ::p4::config::v1::P4NamedType* release_header_union();
  void set_allocated_header_union(::p4::config::v1::P4NamedType* header_union);

  // .p4.config.v1.P4HeaderStackTypeSpec header_stack = 7;
  bool has_header_stack() const;
  void clear_header_stack();
  static const int kHeaderStackFieldNumber = 7;
  const ::p4::config::v1::P4HeaderStackTypeSpec& header_stack() const;
  ::p4::config::v1::P4HeaderStackTypeSpec* mutable_header_stack();
  ::p4::config::v1::P4HeaderStackTypeSpec* release_header_stack();
  void set_allocated_header_stack(::p4::config::v1::P4HeaderStackTypeSpec* header_stack);

  // .p4.config.v1.P4HeaderUnionStackTypeSpec header_union_stack = 8;
  bool has_header_union_stack() const;
  void clear_header_union_stack();
  static const int kHeaderUnionStackFieldNumber = 8;
  const ::p4::config::v1::P4HeaderUnionStackTypeSpec& header_union_stack() const;
  ::p4::config::v1::P4HeaderUnionStackTypeSpec* mutable_header_union_stack();
  ::p4::config::v1::P4HeaderUnionStackTypeSpec* release_header_union_stack();
  void set_allocated_header_union_stack(::p4::config::v1::P4HeaderUnionStackTypeSpec* header_union_stack);

  // .p4.config.v1.P4NamedType enum = 9;
  bool has_enum_() const;
  void clear_enum_();
  static const int kEnumFieldNumber = 9;
  const ::p4::config::v1::P4NamedType& enum_() const;
  ::p4::config::v1::P4NamedType* mutable_enum_();
  ::p4::config::v1::P4NamedType* release_enum_();
  void set_allocated_enum_(::p4::config::v1::P4NamedType* enum_);

  // .p4.config.v1.P4ErrorType error = 10;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 10;
  const ::p4::config::v1::P4ErrorType& error() const;
  ::p4::config::v1::P4ErrorType* mutable_error();
  ::p4::config::v1::P4ErrorType* release_error();
  void set_allocated_error(::p4::config::v1::P4ErrorType* error);

  // .p4.config.v1.P4NamedType serializable_enum = 11;
  bool has_serializable_enum() const;
  void clear_serializable_enum();
  static const int kSerializableEnumFieldNumber = 11;
  const ::p4::config::v1::P4NamedType& serializable_enum() const;
  ::p4::config::v1::P4NamedType* mutable_serializable_enum();
  ::p4::config::v1::P4NamedType* release_serializable_enum();
  void set_allocated_serializable_enum(::p4::config::v1::P4NamedType* serializable_enum);

  // .p4.config.v1.P4NamedType new_type = 12;
  bool has_new_type() const;
  void clear_new_type();
  static const int kNewTypeFieldNumber = 12;
  const ::p4::config::v1::P4NamedType& new_type() const;
  ::p4::config::v1::P4NamedType* mutable_new_type();
  ::p4::config::v1::P4NamedType* release_new_type();
  void set_allocated_new_type(::p4::config::v1::P4NamedType* new_type);

  TypeSpecCase type_spec_case() const;
  // @@protoc_insertion_point(class_scope:p4.config.v1.P4DataTypeSpec)
 private:
  void set_has_bitstring();
  void set_has_bool_();
  void set_has_tuple();
  void set_has_struct_();
  void set_has_header();
  void set_has_header_union();
  void set_has_header_stack();
  void set_has_header_union_stack();
  void set_has_enum_();
  void set_has_error();
  void set_has_serializable_enum();
  void set_has_new_type();

  inline bool has_type_spec() const;
  void clear_type_spec();
  inline void clear_has_type_spec();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union TypeSpecUnion {
    TypeSpecUnion() {}
    ::p4::config::v1::P4BitstringLikeTypeSpec* bitstring_;
    ::p4::config::v1::P4BoolType* bool__;
    ::p4::config::v1::P4TupleTypeSpec* tuple_;
    ::p4::config::v1::P4NamedType* struct__;
    ::p4::config::v1::P4NamedType* header_;
    ::p4::config::v1::P4NamedType* header_union_;
    ::p4::config::v1::P4HeaderStackTypeSpec* header_stack_;
    ::p4::config::v1::P4HeaderUnionStackTypeSpec* header_union_stack_;
    ::p4::config::v1::P4NamedType* enum__;
    ::p4::config::v1::P4ErrorType* error_;
    ::p4::config::v1::P4NamedType* serializable_enum_;
    ::p4::config::v1::P4NamedType* new_type_;
  } type_spec_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4NamedType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4NamedType) */ {
 public:
  P4NamedType();
  virtual ~P4NamedType();

  P4NamedType(const P4NamedType& from);

  inline P4NamedType& operator=(const P4NamedType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4NamedType& default_instance();

  static inline const P4NamedType* internal_default_instance() {
    return reinterpret_cast<const P4NamedType*>(
               &_P4NamedType_default_instance_);
  }

  void Swap(P4NamedType* other);

  // implements Message ----------------------------------------------

  inline P4NamedType* New() const PROTOBUF_FINAL { return New(NULL); }

  P4NamedType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4NamedType& from);
  void MergeFrom(const P4NamedType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4NamedType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4NamedType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4BoolType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4BoolType) */ {
 public:
  P4BoolType();
  virtual ~P4BoolType();

  P4BoolType(const P4BoolType& from);

  inline P4BoolType& operator=(const P4BoolType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4BoolType& default_instance();

  static inline const P4BoolType* internal_default_instance() {
    return reinterpret_cast<const P4BoolType*>(
               &_P4BoolType_default_instance_);
  }

  void Swap(P4BoolType* other);

  // implements Message ----------------------------------------------

  inline P4BoolType* New() const PROTOBUF_FINAL { return New(NULL); }

  P4BoolType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4BoolType& from);
  void MergeFrom(const P4BoolType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4BoolType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4BoolType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4ErrorType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4ErrorType) */ {
 public:
  P4ErrorType();
  virtual ~P4ErrorType();

  P4ErrorType(const P4ErrorType& from);

  inline P4ErrorType& operator=(const P4ErrorType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4ErrorType& default_instance();

  static inline const P4ErrorType* internal_default_instance() {
    return reinterpret_cast<const P4ErrorType*>(
               &_P4ErrorType_default_instance_);
  }

  void Swap(P4ErrorType* other);

  // implements Message ----------------------------------------------

  inline P4ErrorType* New() const PROTOBUF_FINAL { return New(NULL); }

  P4ErrorType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4ErrorType& from);
  void MergeFrom(const P4ErrorType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4ErrorType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4ErrorType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4BitstringLikeTypeSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4BitstringLikeTypeSpec) */ {
 public:
  P4BitstringLikeTypeSpec();
  virtual ~P4BitstringLikeTypeSpec();

  P4BitstringLikeTypeSpec(const P4BitstringLikeTypeSpec& from);

  inline P4BitstringLikeTypeSpec& operator=(const P4BitstringLikeTypeSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4BitstringLikeTypeSpec& default_instance();

  enum TypeSpecCase {
    kBit = 1,
    kInt = 2,
    kVarbit = 3,
    TYPE_SPEC_NOT_SET = 0,
  };

  static inline const P4BitstringLikeTypeSpec* internal_default_instance() {
    return reinterpret_cast<const P4BitstringLikeTypeSpec*>(
               &_P4BitstringLikeTypeSpec_default_instance_);
  }

  void Swap(P4BitstringLikeTypeSpec* other);

  // implements Message ----------------------------------------------

  inline P4BitstringLikeTypeSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  P4BitstringLikeTypeSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4BitstringLikeTypeSpec& from);
  void MergeFrom(const P4BitstringLikeTypeSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4BitstringLikeTypeSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string annotations = 4;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 4;
  const ::std::string& annotations(int index) const;
  ::std::string* mutable_annotations(int index);
  void set_annotations(int index, const ::std::string& value);
  void set_annotations(int index, const char* value);
  void set_annotations(int index, const char* value, size_t size);
  ::std::string* add_annotations();
  void add_annotations(const ::std::string& value);
  void add_annotations(const char* value);
  void add_annotations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& annotations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_annotations();

  // .p4.config.v1.P4BitTypeSpec bit = 1;
  bool has_bit() const;
  void clear_bit();
  static const int kBitFieldNumber = 1;
  const ::p4::config::v1::P4BitTypeSpec& bit() const;
  ::p4::config::v1::P4BitTypeSpec* mutable_bit();
  ::p4::config::v1::P4BitTypeSpec* release_bit();
  void set_allocated_bit(::p4::config::v1::P4BitTypeSpec* bit);

  // .p4.config.v1.P4IntTypeSpec int = 2;
  bool has_int_() const;
  void clear_int_();
  static const int kIntFieldNumber = 2;
  const ::p4::config::v1::P4IntTypeSpec& int_() const;
  ::p4::config::v1::P4IntTypeSpec* mutable_int_();
  ::p4::config::v1::P4IntTypeSpec* release_int_();
  void set_allocated_int_(::p4::config::v1::P4IntTypeSpec* int_);

  // .p4.config.v1.P4VarbitTypeSpec varbit = 3;
  bool has_varbit() const;
  void clear_varbit();
  static const int kVarbitFieldNumber = 3;
  const ::p4::config::v1::P4VarbitTypeSpec& varbit() const;
  ::p4::config::v1::P4VarbitTypeSpec* mutable_varbit();
  ::p4::config::v1::P4VarbitTypeSpec* release_varbit();
  void set_allocated_varbit(::p4::config::v1::P4VarbitTypeSpec* varbit);

  TypeSpecCase type_spec_case() const;
  // @@protoc_insertion_point(class_scope:p4.config.v1.P4BitstringLikeTypeSpec)
 private:
  void set_has_bit();
  void set_has_int_();
  void set_has_varbit();

  inline bool has_type_spec() const;
  void clear_type_spec();
  inline void clear_has_type_spec();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> annotations_;
  union TypeSpecUnion {
    TypeSpecUnion() {}
    ::p4::config::v1::P4BitTypeSpec* bit_;
    ::p4::config::v1::P4IntTypeSpec* int__;
    ::p4::config::v1::P4VarbitTypeSpec* varbit_;
  } type_spec_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4BitTypeSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4BitTypeSpec) */ {
 public:
  P4BitTypeSpec();
  virtual ~P4BitTypeSpec();

  P4BitTypeSpec(const P4BitTypeSpec& from);

  inline P4BitTypeSpec& operator=(const P4BitTypeSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4BitTypeSpec& default_instance();

  static inline const P4BitTypeSpec* internal_default_instance() {
    return reinterpret_cast<const P4BitTypeSpec*>(
               &_P4BitTypeSpec_default_instance_);
  }

  void Swap(P4BitTypeSpec* other);

  // implements Message ----------------------------------------------

  inline P4BitTypeSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  P4BitTypeSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4BitTypeSpec& from);
  void MergeFrom(const P4BitTypeSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4BitTypeSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 bitwidth = 1;
  void clear_bitwidth();
  static const int kBitwidthFieldNumber = 1;
  ::google::protobuf::int32 bitwidth() const;
  void set_bitwidth(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4BitTypeSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 bitwidth_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4IntTypeSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4IntTypeSpec) */ {
 public:
  P4IntTypeSpec();
  virtual ~P4IntTypeSpec();

  P4IntTypeSpec(const P4IntTypeSpec& from);

  inline P4IntTypeSpec& operator=(const P4IntTypeSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4IntTypeSpec& default_instance();

  static inline const P4IntTypeSpec* internal_default_instance() {
    return reinterpret_cast<const P4IntTypeSpec*>(
               &_P4IntTypeSpec_default_instance_);
  }

  void Swap(P4IntTypeSpec* other);

  // implements Message ----------------------------------------------

  inline P4IntTypeSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  P4IntTypeSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4IntTypeSpec& from);
  void MergeFrom(const P4IntTypeSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4IntTypeSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 bitwidth = 1;
  void clear_bitwidth();
  static const int kBitwidthFieldNumber = 1;
  ::google::protobuf::int32 bitwidth() const;
  void set_bitwidth(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4IntTypeSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 bitwidth_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4VarbitTypeSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4VarbitTypeSpec) */ {
 public:
  P4VarbitTypeSpec();
  virtual ~P4VarbitTypeSpec();

  P4VarbitTypeSpec(const P4VarbitTypeSpec& from);

  inline P4VarbitTypeSpec& operator=(const P4VarbitTypeSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4VarbitTypeSpec& default_instance();

  static inline const P4VarbitTypeSpec* internal_default_instance() {
    return reinterpret_cast<const P4VarbitTypeSpec*>(
               &_P4VarbitTypeSpec_default_instance_);
  }

  void Swap(P4VarbitTypeSpec* other);

  // implements Message ----------------------------------------------

  inline P4VarbitTypeSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  P4VarbitTypeSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4VarbitTypeSpec& from);
  void MergeFrom(const P4VarbitTypeSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4VarbitTypeSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 max_bitwidth = 1;
  void clear_max_bitwidth();
  static const int kMaxBitwidthFieldNumber = 1;
  ::google::protobuf::int32 max_bitwidth() const;
  void set_max_bitwidth(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4VarbitTypeSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 max_bitwidth_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4TupleTypeSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4TupleTypeSpec) */ {
 public:
  P4TupleTypeSpec();
  virtual ~P4TupleTypeSpec();

  P4TupleTypeSpec(const P4TupleTypeSpec& from);

  inline P4TupleTypeSpec& operator=(const P4TupleTypeSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4TupleTypeSpec& default_instance();

  static inline const P4TupleTypeSpec* internal_default_instance() {
    return reinterpret_cast<const P4TupleTypeSpec*>(
               &_P4TupleTypeSpec_default_instance_);
  }

  void Swap(P4TupleTypeSpec* other);

  // implements Message ----------------------------------------------

  inline P4TupleTypeSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  P4TupleTypeSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4TupleTypeSpec& from);
  void MergeFrom(const P4TupleTypeSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4TupleTypeSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.config.v1.P4DataTypeSpec members = 1;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 1;
  const ::p4::config::v1::P4DataTypeSpec& members(int index) const;
  ::p4::config::v1::P4DataTypeSpec* mutable_members(int index);
  ::p4::config::v1::P4DataTypeSpec* add_members();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4DataTypeSpec >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4DataTypeSpec >&
      members() const;

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4TupleTypeSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4DataTypeSpec > members_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4StructTypeSpec_Member : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4StructTypeSpec.Member) */ {
 public:
  P4StructTypeSpec_Member();
  virtual ~P4StructTypeSpec_Member();

  P4StructTypeSpec_Member(const P4StructTypeSpec_Member& from);

  inline P4StructTypeSpec_Member& operator=(const P4StructTypeSpec_Member& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4StructTypeSpec_Member& default_instance();

  static inline const P4StructTypeSpec_Member* internal_default_instance() {
    return reinterpret_cast<const P4StructTypeSpec_Member*>(
               &_P4StructTypeSpec_Member_default_instance_);
  }

  void Swap(P4StructTypeSpec_Member* other);

  // implements Message ----------------------------------------------

  inline P4StructTypeSpec_Member* New() const PROTOBUF_FINAL { return New(NULL); }

  P4StructTypeSpec_Member* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4StructTypeSpec_Member& from);
  void MergeFrom(const P4StructTypeSpec_Member& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4StructTypeSpec_Member* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .p4.config.v1.P4DataTypeSpec type_spec = 2;
  bool has_type_spec() const;
  void clear_type_spec();
  static const int kTypeSpecFieldNumber = 2;
  const ::p4::config::v1::P4DataTypeSpec& type_spec() const;
  ::p4::config::v1::P4DataTypeSpec* mutable_type_spec();
  ::p4::config::v1::P4DataTypeSpec* release_type_spec();
  void set_allocated_type_spec(::p4::config::v1::P4DataTypeSpec* type_spec);

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4StructTypeSpec.Member)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::p4::config::v1::P4DataTypeSpec* type_spec_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4StructTypeSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4StructTypeSpec) */ {
 public:
  P4StructTypeSpec();
  virtual ~P4StructTypeSpec();

  P4StructTypeSpec(const P4StructTypeSpec& from);

  inline P4StructTypeSpec& operator=(const P4StructTypeSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4StructTypeSpec& default_instance();

  static inline const P4StructTypeSpec* internal_default_instance() {
    return reinterpret_cast<const P4StructTypeSpec*>(
               &_P4StructTypeSpec_default_instance_);
  }

  void Swap(P4StructTypeSpec* other);

  // implements Message ----------------------------------------------

  inline P4StructTypeSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  P4StructTypeSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4StructTypeSpec& from);
  void MergeFrom(const P4StructTypeSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4StructTypeSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef P4StructTypeSpec_Member Member;

  // accessors -------------------------------------------------------

  // repeated .p4.config.v1.P4StructTypeSpec.Member members = 1;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 1;
  const ::p4::config::v1::P4StructTypeSpec_Member& members(int index) const;
  ::p4::config::v1::P4StructTypeSpec_Member* mutable_members(int index);
  ::p4::config::v1::P4StructTypeSpec_Member* add_members();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4StructTypeSpec_Member >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4StructTypeSpec_Member >&
      members() const;

  // repeated string annotations = 2;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 2;
  const ::std::string& annotations(int index) const;
  ::std::string* mutable_annotations(int index);
  void set_annotations(int index, const ::std::string& value);
  void set_annotations(int index, const char* value);
  void set_annotations(int index, const char* value, size_t size);
  ::std::string* add_annotations();
  void add_annotations(const ::std::string& value);
  void add_annotations(const char* value);
  void add_annotations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& annotations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_annotations();

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4StructTypeSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4StructTypeSpec_Member > members_;
  ::google::protobuf::RepeatedPtrField< ::std::string> annotations_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4HeaderTypeSpec_Member : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4HeaderTypeSpec.Member) */ {
 public:
  P4HeaderTypeSpec_Member();
  virtual ~P4HeaderTypeSpec_Member();

  P4HeaderTypeSpec_Member(const P4HeaderTypeSpec_Member& from);

  inline P4HeaderTypeSpec_Member& operator=(const P4HeaderTypeSpec_Member& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4HeaderTypeSpec_Member& default_instance();

  static inline const P4HeaderTypeSpec_Member* internal_default_instance() {
    return reinterpret_cast<const P4HeaderTypeSpec_Member*>(
               &_P4HeaderTypeSpec_Member_default_instance_);
  }

  void Swap(P4HeaderTypeSpec_Member* other);

  // implements Message ----------------------------------------------

  inline P4HeaderTypeSpec_Member* New() const PROTOBUF_FINAL { return New(NULL); }

  P4HeaderTypeSpec_Member* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4HeaderTypeSpec_Member& from);
  void MergeFrom(const P4HeaderTypeSpec_Member& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4HeaderTypeSpec_Member* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .p4.config.v1.P4BitstringLikeTypeSpec type_spec = 2;
  bool has_type_spec() const;
  void clear_type_spec();
  static const int kTypeSpecFieldNumber = 2;
  const ::p4::config::v1::P4BitstringLikeTypeSpec& type_spec() const;
  ::p4::config::v1::P4BitstringLikeTypeSpec* mutable_type_spec();
  ::p4::config::v1::P4BitstringLikeTypeSpec* release_type_spec();
  void set_allocated_type_spec(::p4::config::v1::P4BitstringLikeTypeSpec* type_spec);

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4HeaderTypeSpec.Member)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::p4::config::v1::P4BitstringLikeTypeSpec* type_spec_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4HeaderTypeSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4HeaderTypeSpec) */ {
 public:
  P4HeaderTypeSpec();
  virtual ~P4HeaderTypeSpec();

  P4HeaderTypeSpec(const P4HeaderTypeSpec& from);

  inline P4HeaderTypeSpec& operator=(const P4HeaderTypeSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4HeaderTypeSpec& default_instance();

  static inline const P4HeaderTypeSpec* internal_default_instance() {
    return reinterpret_cast<const P4HeaderTypeSpec*>(
               &_P4HeaderTypeSpec_default_instance_);
  }

  void Swap(P4HeaderTypeSpec* other);

  // implements Message ----------------------------------------------

  inline P4HeaderTypeSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  P4HeaderTypeSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4HeaderTypeSpec& from);
  void MergeFrom(const P4HeaderTypeSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4HeaderTypeSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef P4HeaderTypeSpec_Member Member;

  // accessors -------------------------------------------------------

  // repeated .p4.config.v1.P4HeaderTypeSpec.Member members = 1;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 1;
  const ::p4::config::v1::P4HeaderTypeSpec_Member& members(int index) const;
  ::p4::config::v1::P4HeaderTypeSpec_Member* mutable_members(int index);
  ::p4::config::v1::P4HeaderTypeSpec_Member* add_members();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4HeaderTypeSpec_Member >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4HeaderTypeSpec_Member >&
      members() const;

  // repeated string annotations = 2;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 2;
  const ::std::string& annotations(int index) const;
  ::std::string* mutable_annotations(int index);
  void set_annotations(int index, const ::std::string& value);
  void set_annotations(int index, const char* value);
  void set_annotations(int index, const char* value, size_t size);
  ::std::string* add_annotations();
  void add_annotations(const ::std::string& value);
  void add_annotations(const char* value);
  void add_annotations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& annotations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_annotations();

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4HeaderTypeSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4HeaderTypeSpec_Member > members_;
  ::google::protobuf::RepeatedPtrField< ::std::string> annotations_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4HeaderUnionTypeSpec_Member : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4HeaderUnionTypeSpec.Member) */ {
 public:
  P4HeaderUnionTypeSpec_Member();
  virtual ~P4HeaderUnionTypeSpec_Member();

  P4HeaderUnionTypeSpec_Member(const P4HeaderUnionTypeSpec_Member& from);

  inline P4HeaderUnionTypeSpec_Member& operator=(const P4HeaderUnionTypeSpec_Member& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4HeaderUnionTypeSpec_Member& default_instance();

  static inline const P4HeaderUnionTypeSpec_Member* internal_default_instance() {
    return reinterpret_cast<const P4HeaderUnionTypeSpec_Member*>(
               &_P4HeaderUnionTypeSpec_Member_default_instance_);
  }

  void Swap(P4HeaderUnionTypeSpec_Member* other);

  // implements Message ----------------------------------------------

  inline P4HeaderUnionTypeSpec_Member* New() const PROTOBUF_FINAL { return New(NULL); }

  P4HeaderUnionTypeSpec_Member* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4HeaderUnionTypeSpec_Member& from);
  void MergeFrom(const P4HeaderUnionTypeSpec_Member& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4HeaderUnionTypeSpec_Member* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .p4.config.v1.P4NamedType header = 2;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 2;
  const ::p4::config::v1::P4NamedType& header() const;
  ::p4::config::v1::P4NamedType* mutable_header();
  ::p4::config::v1::P4NamedType* release_header();
  void set_allocated_header(::p4::config::v1::P4NamedType* header);

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4HeaderUnionTypeSpec.Member)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::p4::config::v1::P4NamedType* header_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4HeaderUnionTypeSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4HeaderUnionTypeSpec) */ {
 public:
  P4HeaderUnionTypeSpec();
  virtual ~P4HeaderUnionTypeSpec();

  P4HeaderUnionTypeSpec(const P4HeaderUnionTypeSpec& from);

  inline P4HeaderUnionTypeSpec& operator=(const P4HeaderUnionTypeSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4HeaderUnionTypeSpec& default_instance();

  static inline const P4HeaderUnionTypeSpec* internal_default_instance() {
    return reinterpret_cast<const P4HeaderUnionTypeSpec*>(
               &_P4HeaderUnionTypeSpec_default_instance_);
  }

  void Swap(P4HeaderUnionTypeSpec* other);

  // implements Message ----------------------------------------------

  inline P4HeaderUnionTypeSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  P4HeaderUnionTypeSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4HeaderUnionTypeSpec& from);
  void MergeFrom(const P4HeaderUnionTypeSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4HeaderUnionTypeSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef P4HeaderUnionTypeSpec_Member Member;

  // accessors -------------------------------------------------------

  // repeated .p4.config.v1.P4HeaderUnionTypeSpec.Member members = 1;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 1;
  const ::p4::config::v1::P4HeaderUnionTypeSpec_Member& members(int index) const;
  ::p4::config::v1::P4HeaderUnionTypeSpec_Member* mutable_members(int index);
  ::p4::config::v1::P4HeaderUnionTypeSpec_Member* add_members();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4HeaderUnionTypeSpec_Member >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4HeaderUnionTypeSpec_Member >&
      members() const;

  // repeated string annotations = 2;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 2;
  const ::std::string& annotations(int index) const;
  ::std::string* mutable_annotations(int index);
  void set_annotations(int index, const ::std::string& value);
  void set_annotations(int index, const char* value);
  void set_annotations(int index, const char* value, size_t size);
  ::std::string* add_annotations();
  void add_annotations(const ::std::string& value);
  void add_annotations(const char* value);
  void add_annotations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& annotations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_annotations();

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4HeaderUnionTypeSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4HeaderUnionTypeSpec_Member > members_;
  ::google::protobuf::RepeatedPtrField< ::std::string> annotations_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4HeaderStackTypeSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4HeaderStackTypeSpec) */ {
 public:
  P4HeaderStackTypeSpec();
  virtual ~P4HeaderStackTypeSpec();

  P4HeaderStackTypeSpec(const P4HeaderStackTypeSpec& from);

  inline P4HeaderStackTypeSpec& operator=(const P4HeaderStackTypeSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4HeaderStackTypeSpec& default_instance();

  static inline const P4HeaderStackTypeSpec* internal_default_instance() {
    return reinterpret_cast<const P4HeaderStackTypeSpec*>(
               &_P4HeaderStackTypeSpec_default_instance_);
  }

  void Swap(P4HeaderStackTypeSpec* other);

  // implements Message ----------------------------------------------

  inline P4HeaderStackTypeSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  P4HeaderStackTypeSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4HeaderStackTypeSpec& from);
  void MergeFrom(const P4HeaderStackTypeSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4HeaderStackTypeSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.config.v1.P4NamedType header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::p4::config::v1::P4NamedType& header() const;
  ::p4::config::v1::P4NamedType* mutable_header();
  ::p4::config::v1::P4NamedType* release_header();
  void set_allocated_header(::p4::config::v1::P4NamedType* header);

  // int32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4HeaderStackTypeSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::config::v1::P4NamedType* header_;
  ::google::protobuf::int32 size_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4HeaderUnionStackTypeSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4HeaderUnionStackTypeSpec) */ {
 public:
  P4HeaderUnionStackTypeSpec();
  virtual ~P4HeaderUnionStackTypeSpec();

  P4HeaderUnionStackTypeSpec(const P4HeaderUnionStackTypeSpec& from);

  inline P4HeaderUnionStackTypeSpec& operator=(const P4HeaderUnionStackTypeSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4HeaderUnionStackTypeSpec& default_instance();

  static inline const P4HeaderUnionStackTypeSpec* internal_default_instance() {
    return reinterpret_cast<const P4HeaderUnionStackTypeSpec*>(
               &_P4HeaderUnionStackTypeSpec_default_instance_);
  }

  void Swap(P4HeaderUnionStackTypeSpec* other);

  // implements Message ----------------------------------------------

  inline P4HeaderUnionStackTypeSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  P4HeaderUnionStackTypeSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4HeaderUnionStackTypeSpec& from);
  void MergeFrom(const P4HeaderUnionStackTypeSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4HeaderUnionStackTypeSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .p4.config.v1.P4NamedType header_union = 1;
  bool has_header_union() const;
  void clear_header_union();
  static const int kHeaderUnionFieldNumber = 1;
  const ::p4::config::v1::P4NamedType& header_union() const;
  ::p4::config::v1::P4NamedType* mutable_header_union();
  ::p4::config::v1::P4NamedType* release_header_union();
  void set_allocated_header_union(::p4::config::v1::P4NamedType* header_union);

  // int32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4HeaderUnionStackTypeSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::p4::config::v1::P4NamedType* header_union_;
  ::google::protobuf::int32 size_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KeyValuePair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.KeyValuePair) */ {
 public:
  KeyValuePair();
  virtual ~KeyValuePair();

  KeyValuePair(const KeyValuePair& from);

  inline KeyValuePair& operator=(const KeyValuePair& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyValuePair& default_instance();

  static inline const KeyValuePair* internal_default_instance() {
    return reinterpret_cast<const KeyValuePair*>(
               &_KeyValuePair_default_instance_);
  }

  void Swap(KeyValuePair* other);

  // implements Message ----------------------------------------------

  inline KeyValuePair* New() const PROTOBUF_FINAL { return New(NULL); }

  KeyValuePair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KeyValuePair& from);
  void MergeFrom(const KeyValuePair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KeyValuePair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // .p4.config.v1.Expression value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::p4::config::v1::Expression& value() const;
  ::p4::config::v1::Expression* mutable_value();
  ::p4::config::v1::Expression* release_value();
  void set_allocated_value(::p4::config::v1::Expression* value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.KeyValuePair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::p4::config::v1::Expression* value_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KeyValuePairList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.KeyValuePairList) */ {
 public:
  KeyValuePairList();
  virtual ~KeyValuePairList();

  KeyValuePairList(const KeyValuePairList& from);

  inline KeyValuePairList& operator=(const KeyValuePairList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyValuePairList& default_instance();

  static inline const KeyValuePairList* internal_default_instance() {
    return reinterpret_cast<const KeyValuePairList*>(
               &_KeyValuePairList_default_instance_);
  }

  void Swap(KeyValuePairList* other);

  // implements Message ----------------------------------------------

  inline KeyValuePairList* New() const PROTOBUF_FINAL { return New(NULL); }

  KeyValuePairList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KeyValuePairList& from);
  void MergeFrom(const KeyValuePairList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KeyValuePairList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.config.v1.KeyValuePair kv_pairs = 1;
  int kv_pairs_size() const;
  void clear_kv_pairs();
  static const int kKvPairsFieldNumber = 1;
  const ::p4::config::v1::KeyValuePair& kv_pairs(int index) const;
  ::p4::config::v1::KeyValuePair* mutable_kv_pairs(int index);
  ::p4::config::v1::KeyValuePair* add_kv_pairs();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::KeyValuePair >*
      mutable_kv_pairs();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::KeyValuePair >&
      kv_pairs() const;

  // @@protoc_insertion_point(class_scope:p4.config.v1.KeyValuePairList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::KeyValuePair > kv_pairs_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Expression : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.Expression) */ {
 public:
  Expression();
  virtual ~Expression();

  Expression(const Expression& from);

  inline Expression& operator=(const Expression& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Expression& default_instance();

  enum ValueCase {
    kStringValue = 1,
    kInt64Value = 2,
    kBoolValue = 3,
    VALUE_NOT_SET = 0,
  };

  static inline const Expression* internal_default_instance() {
    return reinterpret_cast<const Expression*>(
               &_Expression_default_instance_);
  }

  void Swap(Expression* other);

  // implements Message ----------------------------------------------

  inline Expression* New() const PROTOBUF_FINAL { return New(NULL); }

  Expression* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Expression& from);
  void MergeFrom(const Expression& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Expression* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string string_value = 1;
  private:
  bool has_string_value() const;
  public:
  void clear_string_value();
  static const int kStringValueFieldNumber = 1;
  const ::std::string& string_value() const;
  void set_string_value(const ::std::string& value);
  #if LANG_CXX11
  void set_string_value(::std::string&& value);
  #endif
  void set_string_value(const char* value);
  void set_string_value(const char* value, size_t size);
  ::std::string* mutable_string_value();
  ::std::string* release_string_value();
  void set_allocated_string_value(::std::string* string_value);

  // int64 int64_value = 2;
  private:
  bool has_int64_value() const;
  public:
  void clear_int64_value();
  static const int kInt64ValueFieldNumber = 2;
  ::google::protobuf::int64 int64_value() const;
  void set_int64_value(::google::protobuf::int64 value);

  // bool bool_value = 3;
  private:
  bool has_bool_value() const;
  public:
  void clear_bool_value();
  static const int kBoolValueFieldNumber = 3;
  bool bool_value() const;
  void set_bool_value(bool value);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:p4.config.v1.Expression)
 private:
  void set_has_string_value();
  void set_has_int64_value();
  void set_has_bool_value();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ValueUnion {
    ValueUnion() {}
    ::google::protobuf::internal::ArenaStringPtr string_value_;
    ::google::protobuf::int64 int64_value_;
    bool bool_value_;
  } value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExpressionList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.ExpressionList) */ {
 public:
  ExpressionList();
  virtual ~ExpressionList();

  ExpressionList(const ExpressionList& from);

  inline ExpressionList& operator=(const ExpressionList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExpressionList& default_instance();

  static inline const ExpressionList* internal_default_instance() {
    return reinterpret_cast<const ExpressionList*>(
               &_ExpressionList_default_instance_);
  }

  void Swap(ExpressionList* other);

  // implements Message ----------------------------------------------

  inline ExpressionList* New() const PROTOBUF_FINAL { return New(NULL); }

  ExpressionList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExpressionList& from);
  void MergeFrom(const ExpressionList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExpressionList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .p4.config.v1.Expression expressions = 1;
  int expressions_size() const;
  void clear_expressions();
  static const int kExpressionsFieldNumber = 1;
  const ::p4::config::v1::Expression& expressions(int index) const;
  ::p4::config::v1::Expression* mutable_expressions(int index);
  ::p4::config::v1::Expression* add_expressions();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Expression >*
      mutable_expressions();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Expression >&
      expressions() const;

  // @@protoc_insertion_point(class_scope:p4.config.v1.ExpressionList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Expression > expressions_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StructuredAnnotation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.StructuredAnnotation) */ {
 public:
  StructuredAnnotation();
  virtual ~StructuredAnnotation();

  StructuredAnnotation(const StructuredAnnotation& from);

  inline StructuredAnnotation& operator=(const StructuredAnnotation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StructuredAnnotation& default_instance();

  enum BodyCase {
    kExpressionList = 2,
    kKvPairList = 3,
    BODY_NOT_SET = 0,
  };

  static inline const StructuredAnnotation* internal_default_instance() {
    return reinterpret_cast<const StructuredAnnotation*>(
               &_StructuredAnnotation_default_instance_);
  }

  void Swap(StructuredAnnotation* other);

  // implements Message ----------------------------------------------

  inline StructuredAnnotation* New() const PROTOBUF_FINAL { return New(NULL); }

  StructuredAnnotation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StructuredAnnotation& from);
  void MergeFrom(const StructuredAnnotation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StructuredAnnotation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .p4.config.v1.ExpressionList expression_list = 2;
  bool has_expression_list() const;
  void clear_expression_list();
  static const int kExpressionListFieldNumber = 2;
  const ::p4::config::v1::ExpressionList& expression_list() const;
  ::p4::config::v1::ExpressionList* mutable_expression_list();
  ::p4::config::v1::ExpressionList* release_expression_list();
  void set_allocated_expression_list(::p4::config::v1::ExpressionList* expression_list);

  // .p4.config.v1.KeyValuePairList kv_pair_list = 3;
  bool has_kv_pair_list() const;
  void clear_kv_pair_list();
  static const int kKvPairListFieldNumber = 3;
  const ::p4::config::v1::KeyValuePairList& kv_pair_list() const;
  ::p4::config::v1::KeyValuePairList* mutable_kv_pair_list();
  ::p4::config::v1::KeyValuePairList* release_kv_pair_list();
  void set_allocated_kv_pair_list(::p4::config::v1::KeyValuePairList* kv_pair_list);

  BodyCase body_case() const;
  // @@protoc_insertion_point(class_scope:p4.config.v1.StructuredAnnotation)
 private:
  void set_has_expression_list();
  void set_has_kv_pair_list();

  inline bool has_body() const;
  void clear_body();
  inline void clear_has_body();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  union BodyUnion {
    BodyUnion() {}
    ::p4::config::v1::ExpressionList* expression_list_;
    ::p4::config::v1::KeyValuePairList* kv_pair_list_;
  } body_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4EnumTypeSpec_Member : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4EnumTypeSpec.Member) */ {
 public:
  P4EnumTypeSpec_Member();
  virtual ~P4EnumTypeSpec_Member();

  P4EnumTypeSpec_Member(const P4EnumTypeSpec_Member& from);

  inline P4EnumTypeSpec_Member& operator=(const P4EnumTypeSpec_Member& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4EnumTypeSpec_Member& default_instance();

  static inline const P4EnumTypeSpec_Member* internal_default_instance() {
    return reinterpret_cast<const P4EnumTypeSpec_Member*>(
               &_P4EnumTypeSpec_Member_default_instance_);
  }

  void Swap(P4EnumTypeSpec_Member* other);

  // implements Message ----------------------------------------------

  inline P4EnumTypeSpec_Member* New() const PROTOBUF_FINAL { return New(NULL); }

  P4EnumTypeSpec_Member* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4EnumTypeSpec_Member& from);
  void MergeFrom(const P4EnumTypeSpec_Member& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4EnumTypeSpec_Member* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string annotations = 2;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 2;
  const ::std::string& annotations(int index) const;
  ::std::string* mutable_annotations(int index);
  void set_annotations(int index, const ::std::string& value);
  void set_annotations(int index, const char* value);
  void set_annotations(int index, const char* value, size_t size);
  ::std::string* add_annotations();
  void add_annotations(const ::std::string& value);
  void add_annotations(const char* value);
  void add_annotations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& annotations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_annotations();

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 3;
  int structured_annotations_size() const;
  void clear_structured_annotations();
  static const int kStructuredAnnotationsFieldNumber = 3;
  const ::p4::config::v1::StructuredAnnotation& structured_annotations(int index) const;
  ::p4::config::v1::StructuredAnnotation* mutable_structured_annotations(int index);
  ::p4::config::v1::StructuredAnnotation* add_structured_annotations();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
      mutable_structured_annotations();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
      structured_annotations() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4EnumTypeSpec.Member)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> annotations_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation > structured_annotations_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4EnumTypeSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4EnumTypeSpec) */ {
 public:
  P4EnumTypeSpec();
  virtual ~P4EnumTypeSpec();

  P4EnumTypeSpec(const P4EnumTypeSpec& from);

  inline P4EnumTypeSpec& operator=(const P4EnumTypeSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4EnumTypeSpec& default_instance();

  static inline const P4EnumTypeSpec* internal_default_instance() {
    return reinterpret_cast<const P4EnumTypeSpec*>(
               &_P4EnumTypeSpec_default_instance_);
  }

  void Swap(P4EnumTypeSpec* other);

  // implements Message ----------------------------------------------

  inline P4EnumTypeSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  P4EnumTypeSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4EnumTypeSpec& from);
  void MergeFrom(const P4EnumTypeSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4EnumTypeSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef P4EnumTypeSpec_Member Member;

  // accessors -------------------------------------------------------

  // repeated .p4.config.v1.P4EnumTypeSpec.Member members = 1;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 1;
  const ::p4::config::v1::P4EnumTypeSpec_Member& members(int index) const;
  ::p4::config::v1::P4EnumTypeSpec_Member* mutable_members(int index);
  ::p4::config::v1::P4EnumTypeSpec_Member* add_members();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4EnumTypeSpec_Member >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4EnumTypeSpec_Member >&
      members() const;

  // repeated string annotations = 2;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 2;
  const ::std::string& annotations(int index) const;
  ::std::string* mutable_annotations(int index);
  void set_annotations(int index, const ::std::string& value);
  void set_annotations(int index, const char* value);
  void set_annotations(int index, const char* value, size_t size);
  ::std::string* add_annotations();
  void add_annotations(const ::std::string& value);
  void add_annotations(const char* value);
  void add_annotations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& annotations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_annotations();

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 3;
  int structured_annotations_size() const;
  void clear_structured_annotations();
  static const int kStructuredAnnotationsFieldNumber = 3;
  const ::p4::config::v1::StructuredAnnotation& structured_annotations(int index) const;
  ::p4::config::v1::StructuredAnnotation* mutable_structured_annotations(int index);
  ::p4::config::v1::StructuredAnnotation* add_structured_annotations();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
      mutable_structured_annotations();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
      structured_annotations() const;

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4EnumTypeSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4EnumTypeSpec_Member > members_;
  ::google::protobuf::RepeatedPtrField< ::std::string> annotations_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation > structured_annotations_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4SerializableEnumTypeSpec_Member : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4SerializableEnumTypeSpec.Member) */ {
 public:
  P4SerializableEnumTypeSpec_Member();
  virtual ~P4SerializableEnumTypeSpec_Member();

  P4SerializableEnumTypeSpec_Member(const P4SerializableEnumTypeSpec_Member& from);

  inline P4SerializableEnumTypeSpec_Member& operator=(const P4SerializableEnumTypeSpec_Member& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4SerializableEnumTypeSpec_Member& default_instance();

  static inline const P4SerializableEnumTypeSpec_Member* internal_default_instance() {
    return reinterpret_cast<const P4SerializableEnumTypeSpec_Member*>(
               &_P4SerializableEnumTypeSpec_Member_default_instance_);
  }

  void Swap(P4SerializableEnumTypeSpec_Member* other);

  // implements Message ----------------------------------------------

  inline P4SerializableEnumTypeSpec_Member* New() const PROTOBUF_FINAL { return New(NULL); }

  P4SerializableEnumTypeSpec_Member* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4SerializableEnumTypeSpec_Member& from);
  void MergeFrom(const P4SerializableEnumTypeSpec_Member& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4SerializableEnumTypeSpec_Member* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string annotations = 3;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 3;
  const ::std::string& annotations(int index) const;
  ::std::string* mutable_annotations(int index);
  void set_annotations(int index, const ::std::string& value);
  void set_annotations(int index, const char* value);
  void set_annotations(int index, const char* value, size_t size);
  ::std::string* add_annotations();
  void add_annotations(const ::std::string& value);
  void add_annotations(const char* value);
  void add_annotations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& annotations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_annotations();

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
  int structured_annotations_size() const;
  void clear_structured_annotations();
  static const int kStructuredAnnotationsFieldNumber = 4;
  const ::p4::config::v1::StructuredAnnotation& structured_annotations(int index) const;
  ::p4::config::v1::StructuredAnnotation* mutable_structured_annotations(int index);
  ::p4::config::v1::StructuredAnnotation* add_structured_annotations();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
      mutable_structured_annotations();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
      structured_annotations() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4SerializableEnumTypeSpec.Member)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> annotations_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation > structured_annotations_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4SerializableEnumTypeSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4SerializableEnumTypeSpec) */ {
 public:
  P4SerializableEnumTypeSpec();
  virtual ~P4SerializableEnumTypeSpec();

  P4SerializableEnumTypeSpec(const P4SerializableEnumTypeSpec& from);

  inline P4SerializableEnumTypeSpec& operator=(const P4SerializableEnumTypeSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4SerializableEnumTypeSpec& default_instance();

  static inline const P4SerializableEnumTypeSpec* internal_default_instance() {
    return reinterpret_cast<const P4SerializableEnumTypeSpec*>(
               &_P4SerializableEnumTypeSpec_default_instance_);
  }

  void Swap(P4SerializableEnumTypeSpec* other);

  // implements Message ----------------------------------------------

  inline P4SerializableEnumTypeSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  P4SerializableEnumTypeSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4SerializableEnumTypeSpec& from);
  void MergeFrom(const P4SerializableEnumTypeSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4SerializableEnumTypeSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef P4SerializableEnumTypeSpec_Member Member;

  // accessors -------------------------------------------------------

  // repeated .p4.config.v1.P4SerializableEnumTypeSpec.Member members = 2;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 2;
  const ::p4::config::v1::P4SerializableEnumTypeSpec_Member& members(int index) const;
  ::p4::config::v1::P4SerializableEnumTypeSpec_Member* mutable_members(int index);
  ::p4::config::v1::P4SerializableEnumTypeSpec_Member* add_members();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4SerializableEnumTypeSpec_Member >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4SerializableEnumTypeSpec_Member >&
      members() const;

  // repeated string annotations = 3;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 3;
  const ::std::string& annotations(int index) const;
  ::std::string* mutable_annotations(int index);
  void set_annotations(int index, const ::std::string& value);
  void set_annotations(int index, const char* value);
  void set_annotations(int index, const char* value, size_t size);
  ::std::string* add_annotations();
  void add_annotations(const ::std::string& value);
  void add_annotations(const char* value);
  void add_annotations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& annotations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_annotations();

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
  int structured_annotations_size() const;
  void clear_structured_annotations();
  static const int kStructuredAnnotationsFieldNumber = 4;
  const ::p4::config::v1::StructuredAnnotation& structured_annotations(int index) const;
  ::p4::config::v1::StructuredAnnotation* mutable_structured_annotations(int index);
  ::p4::config::v1::StructuredAnnotation* add_structured_annotations();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
      mutable_structured_annotations();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
      structured_annotations() const;

  // .p4.config.v1.P4BitTypeSpec underlying_type = 1;
  bool has_underlying_type() const;
  void clear_underlying_type();
  static const int kUnderlyingTypeFieldNumber = 1;
  const ::p4::config::v1::P4BitTypeSpec& underlying_type() const;
  ::p4::config::v1::P4BitTypeSpec* mutable_underlying_type();
  ::p4::config::v1::P4BitTypeSpec* release_underlying_type();
  void set_allocated_underlying_type(::p4::config::v1::P4BitTypeSpec* underlying_type);

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4SerializableEnumTypeSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4SerializableEnumTypeSpec_Member > members_;
  ::google::protobuf::RepeatedPtrField< ::std::string> annotations_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation > structured_annotations_;
  ::p4::config::v1::P4BitTypeSpec* underlying_type_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4ErrorTypeSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4ErrorTypeSpec) */ {
 public:
  P4ErrorTypeSpec();
  virtual ~P4ErrorTypeSpec();

  P4ErrorTypeSpec(const P4ErrorTypeSpec& from);

  inline P4ErrorTypeSpec& operator=(const P4ErrorTypeSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4ErrorTypeSpec& default_instance();

  static inline const P4ErrorTypeSpec* internal_default_instance() {
    return reinterpret_cast<const P4ErrorTypeSpec*>(
               &_P4ErrorTypeSpec_default_instance_);
  }

  void Swap(P4ErrorTypeSpec* other);

  // implements Message ----------------------------------------------

  inline P4ErrorTypeSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  P4ErrorTypeSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4ErrorTypeSpec& from);
  void MergeFrom(const P4ErrorTypeSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4ErrorTypeSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string members = 1;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 1;
  const ::std::string& members(int index) const;
  ::std::string* mutable_members(int index);
  void set_members(int index, const ::std::string& value);
  void set_members(int index, const char* value);
  void set_members(int index, const char* value, size_t size);
  ::std::string* add_members();
  void add_members(const ::std::string& value);
  void add_members(const char* value);
  void add_members(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& members() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_members();

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4ErrorTypeSpec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> members_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4NewTypeTranslation_SdnString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4NewTypeTranslation.SdnString) */ {
 public:
  P4NewTypeTranslation_SdnString();
  virtual ~P4NewTypeTranslation_SdnString();

  P4NewTypeTranslation_SdnString(const P4NewTypeTranslation_SdnString& from);

  inline P4NewTypeTranslation_SdnString& operator=(const P4NewTypeTranslation_SdnString& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4NewTypeTranslation_SdnString& default_instance();

  static inline const P4NewTypeTranslation_SdnString* internal_default_instance() {
    return reinterpret_cast<const P4NewTypeTranslation_SdnString*>(
               &_P4NewTypeTranslation_SdnString_default_instance_);
  }

  void Swap(P4NewTypeTranslation_SdnString* other);

  // implements Message ----------------------------------------------

  inline P4NewTypeTranslation_SdnString* New() const PROTOBUF_FINAL { return New(NULL); }

  P4NewTypeTranslation_SdnString* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4NewTypeTranslation_SdnString& from);
  void MergeFrom(const P4NewTypeTranslation_SdnString& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4NewTypeTranslation_SdnString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:p4.config.v1.P4NewTypeTranslation.SdnString)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4NewTypeTranslation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4NewTypeTranslation) */ {
 public:
  P4NewTypeTranslation();
  virtual ~P4NewTypeTranslation();

  P4NewTypeTranslation(const P4NewTypeTranslation& from);

  inline P4NewTypeTranslation& operator=(const P4NewTypeTranslation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4NewTypeTranslation& default_instance();

  enum SdnTypeCase {
    kSdnBitwidth = 2,
    kSdnString = 3,
    SDN_TYPE_NOT_SET = 0,
  };

  static inline const P4NewTypeTranslation* internal_default_instance() {
    return reinterpret_cast<const P4NewTypeTranslation*>(
               &_P4NewTypeTranslation_default_instance_);
  }

  void Swap(P4NewTypeTranslation* other);

  // implements Message ----------------------------------------------

  inline P4NewTypeTranslation* New() const PROTOBUF_FINAL { return New(NULL); }

  P4NewTypeTranslation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4NewTypeTranslation& from);
  void MergeFrom(const P4NewTypeTranslation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4NewTypeTranslation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef P4NewTypeTranslation_SdnString SdnString;

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // int32 sdn_bitwidth = 2;
  private:
  bool has_sdn_bitwidth() const;
  public:
  void clear_sdn_bitwidth();
  static const int kSdnBitwidthFieldNumber = 2;
  ::google::protobuf::int32 sdn_bitwidth() const;
  void set_sdn_bitwidth(::google::protobuf::int32 value);

  // .p4.config.v1.P4NewTypeTranslation.SdnString sdn_string = 3;
  bool has_sdn_string() const;
  void clear_sdn_string();
  static const int kSdnStringFieldNumber = 3;
  const ::p4::config::v1::P4NewTypeTranslation_SdnString& sdn_string() const;
  ::p4::config::v1::P4NewTypeTranslation_SdnString* mutable_sdn_string();
  ::p4::config::v1::P4NewTypeTranslation_SdnString* release_sdn_string();
  void set_allocated_sdn_string(::p4::config::v1::P4NewTypeTranslation_SdnString* sdn_string);

  SdnTypeCase sdn_type_case() const;
  // @@protoc_insertion_point(class_scope:p4.config.v1.P4NewTypeTranslation)
 private:
  void set_has_sdn_bitwidth();
  void set_has_sdn_string();

  inline bool has_sdn_type() const;
  void clear_sdn_type();
  inline void clear_has_sdn_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  union SdnTypeUnion {
    SdnTypeUnion() {}
    ::google::protobuf::int32 sdn_bitwidth_;
    ::p4::config::v1::P4NewTypeTranslation_SdnString* sdn_string_;
  } sdn_type_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P4NewTypeSpec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:p4.config.v1.P4NewTypeSpec) */ {
 public:
  P4NewTypeSpec();
  virtual ~P4NewTypeSpec();

  P4NewTypeSpec(const P4NewTypeSpec& from);

  inline P4NewTypeSpec& operator=(const P4NewTypeSpec& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const P4NewTypeSpec& default_instance();

  enum RepresentationCase {
    kOriginalType = 1,
    kTranslatedType = 2,
    REPRESENTATION_NOT_SET = 0,
  };

  static inline const P4NewTypeSpec* internal_default_instance() {
    return reinterpret_cast<const P4NewTypeSpec*>(
               &_P4NewTypeSpec_default_instance_);
  }

  void Swap(P4NewTypeSpec* other);

  // implements Message ----------------------------------------------

  inline P4NewTypeSpec* New() const PROTOBUF_FINAL { return New(NULL); }

  P4NewTypeSpec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const P4NewTypeSpec& from);
  void MergeFrom(const P4NewTypeSpec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P4NewTypeSpec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string annotations = 3;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 3;
  const ::std::string& annotations(int index) const;
  ::std::string* mutable_annotations(int index);
  void set_annotations(int index, const ::std::string& value);
  void set_annotations(int index, const char* value);
  void set_annotations(int index, const char* value, size_t size);
  ::std::string* add_annotations();
  void add_annotations(const ::std::string& value);
  void add_annotations(const char* value);
  void add_annotations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& annotations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_annotations();

  // repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
  int structured_annotations_size() const;
  void clear_structured_annotations();
  static const int kStructuredAnnotationsFieldNumber = 4;
  const ::p4::config::v1::StructuredAnnotation& structured_annotations(int index) const;
  ::p4::config::v1::StructuredAnnotation* mutable_structured_annotations(int index);
  ::p4::config::v1::StructuredAnnotation* add_structured_annotations();
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
      mutable_structured_annotations();
  const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
      structured_annotations() const;

  // .p4.config.v1.P4DataTypeSpec original_type = 1;
  bool has_original_type() const;
  void clear_original_type();
  static const int kOriginalTypeFieldNumber = 1;
  const ::p4::config::v1::P4DataTypeSpec& original_type() const;
  ::p4::config::v1::P4DataTypeSpec* mutable_original_type();
  ::p4::config::v1::P4DataTypeSpec* release_original_type();
  void set_allocated_original_type(::p4::config::v1::P4DataTypeSpec* original_type);

  // .p4.config.v1.P4NewTypeTranslation translated_type = 2;
  bool has_translated_type() const;
  void clear_translated_type();
  static const int kTranslatedTypeFieldNumber = 2;
  const ::p4::config::v1::P4NewTypeTranslation& translated_type() const;
  ::p4::config::v1::P4NewTypeTranslation* mutable_translated_type();
  ::p4::config::v1::P4NewTypeTranslation* release_translated_type();
  void set_allocated_translated_type(::p4::config::v1::P4NewTypeTranslation* translated_type);

  RepresentationCase representation_case() const;
  // @@protoc_insertion_point(class_scope:p4.config.v1.P4NewTypeSpec)
 private:
  void set_has_original_type();
  void set_has_translated_type();

  inline bool has_representation() const;
  void clear_representation();
  inline void clear_has_representation();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> annotations_;
  ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation > structured_annotations_;
  union RepresentationUnion {
    RepresentationUnion() {}
    ::p4::config::v1::P4DataTypeSpec* original_type_;
    ::p4::config::v1::P4NewTypeTranslation* translated_type_;
  } representation_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_p4_2fconfig_2fv1_2fp4types_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// P4TypeInfo

// map<string, .p4.config.v1.P4StructTypeSpec> structs = 1;
inline int P4TypeInfo::structs_size() const {
  return structs_.size();
}
inline void P4TypeInfo::clear_structs() {
  structs_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4StructTypeSpec >&
P4TypeInfo::structs() const {
  // @@protoc_insertion_point(field_map:p4.config.v1.P4TypeInfo.structs)
  return structs_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4StructTypeSpec >*
P4TypeInfo::mutable_structs() {
  // @@protoc_insertion_point(field_mutable_map:p4.config.v1.P4TypeInfo.structs)
  return structs_.MutableMap();
}

// map<string, .p4.config.v1.P4HeaderTypeSpec> headers = 2;
inline int P4TypeInfo::headers_size() const {
  return headers_.size();
}
inline void P4TypeInfo::clear_headers() {
  headers_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderTypeSpec >&
P4TypeInfo::headers() const {
  // @@protoc_insertion_point(field_map:p4.config.v1.P4TypeInfo.headers)
  return headers_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderTypeSpec >*
P4TypeInfo::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_map:p4.config.v1.P4TypeInfo.headers)
  return headers_.MutableMap();
}

// map<string, .p4.config.v1.P4HeaderUnionTypeSpec> header_unions = 3;
inline int P4TypeInfo::header_unions_size() const {
  return header_unions_.size();
}
inline void P4TypeInfo::clear_header_unions() {
  header_unions_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec >&
P4TypeInfo::header_unions() const {
  // @@protoc_insertion_point(field_map:p4.config.v1.P4TypeInfo.header_unions)
  return header_unions_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4HeaderUnionTypeSpec >*
P4TypeInfo::mutable_header_unions() {
  // @@protoc_insertion_point(field_mutable_map:p4.config.v1.P4TypeInfo.header_unions)
  return header_unions_.MutableMap();
}

// map<string, .p4.config.v1.P4EnumTypeSpec> enums = 4;
inline int P4TypeInfo::enums_size() const {
  return enums_.size();
}
inline void P4TypeInfo::clear_enums() {
  enums_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4EnumTypeSpec >&
P4TypeInfo::enums() const {
  // @@protoc_insertion_point(field_map:p4.config.v1.P4TypeInfo.enums)
  return enums_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4EnumTypeSpec >*
P4TypeInfo::mutable_enums() {
  // @@protoc_insertion_point(field_mutable_map:p4.config.v1.P4TypeInfo.enums)
  return enums_.MutableMap();
}

// .p4.config.v1.P4ErrorTypeSpec error = 5;
inline bool P4TypeInfo::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void P4TypeInfo::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::p4::config::v1::P4ErrorTypeSpec& P4TypeInfo::error() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4TypeInfo.error)
  return error_ != NULL ? *error_
                         : *::p4::config::v1::P4ErrorTypeSpec::internal_default_instance();
}
inline ::p4::config::v1::P4ErrorTypeSpec* P4TypeInfo::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::p4::config::v1::P4ErrorTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4TypeInfo.error)
  return error_;
}
inline ::p4::config::v1::P4ErrorTypeSpec* P4TypeInfo::release_error() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4TypeInfo.error)
  
  ::p4::config::v1::P4ErrorTypeSpec* temp = error_;
  error_ = NULL;
  return temp;
}
inline void P4TypeInfo::set_allocated_error(::p4::config::v1::P4ErrorTypeSpec* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4TypeInfo.error)
}

// map<string, .p4.config.v1.P4SerializableEnumTypeSpec> serializable_enums = 6;
inline int P4TypeInfo::serializable_enums_size() const {
  return serializable_enums_.size();
}
inline void P4TypeInfo::clear_serializable_enums() {
  serializable_enums_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec >&
P4TypeInfo::serializable_enums() const {
  // @@protoc_insertion_point(field_map:p4.config.v1.P4TypeInfo.serializable_enums)
  return serializable_enums_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4SerializableEnumTypeSpec >*
P4TypeInfo::mutable_serializable_enums() {
  // @@protoc_insertion_point(field_mutable_map:p4.config.v1.P4TypeInfo.serializable_enums)
  return serializable_enums_.MutableMap();
}

// map<string, .p4.config.v1.P4NewTypeSpec> new_types = 7;
inline int P4TypeInfo::new_types_size() const {
  return new_types_.size();
}
inline void P4TypeInfo::clear_new_types() {
  new_types_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4NewTypeSpec >&
P4TypeInfo::new_types() const {
  // @@protoc_insertion_point(field_map:p4.config.v1.P4TypeInfo.new_types)
  return new_types_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::p4::config::v1::P4NewTypeSpec >*
P4TypeInfo::mutable_new_types() {
  // @@protoc_insertion_point(field_mutable_map:p4.config.v1.P4TypeInfo.new_types)
  return new_types_.MutableMap();
}

// -------------------------------------------------------------------

// P4DataTypeSpec

// .p4.config.v1.P4BitstringLikeTypeSpec bitstring = 1;
inline bool P4DataTypeSpec::has_bitstring() const {
  return type_spec_case() == kBitstring;
}
inline void P4DataTypeSpec::set_has_bitstring() {
  _oneof_case_[0] = kBitstring;
}
inline void P4DataTypeSpec::clear_bitstring() {
  if (has_bitstring()) {
    delete type_spec_.bitstring_;
    clear_has_type_spec();
  }
}
inline  const ::p4::config::v1::P4BitstringLikeTypeSpec& P4DataTypeSpec::bitstring() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.bitstring)
  return has_bitstring()
      ? *type_spec_.bitstring_
      : ::p4::config::v1::P4BitstringLikeTypeSpec::default_instance();
}
inline ::p4::config::v1::P4BitstringLikeTypeSpec* P4DataTypeSpec::mutable_bitstring() {
  if (!has_bitstring()) {
    clear_type_spec();
    set_has_bitstring();
    type_spec_.bitstring_ = new ::p4::config::v1::P4BitstringLikeTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.bitstring)
  return type_spec_.bitstring_;
}
inline ::p4::config::v1::P4BitstringLikeTypeSpec* P4DataTypeSpec::release_bitstring() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.bitstring)
  if (has_bitstring()) {
    clear_has_type_spec();
    ::p4::config::v1::P4BitstringLikeTypeSpec* temp = type_spec_.bitstring_;
    type_spec_.bitstring_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4DataTypeSpec::set_allocated_bitstring(::p4::config::v1::P4BitstringLikeTypeSpec* bitstring) {
  clear_type_spec();
  if (bitstring) {
    set_has_bitstring();
    type_spec_.bitstring_ = bitstring;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.bitstring)
}

// .p4.config.v1.P4BoolType bool = 2;
inline bool P4DataTypeSpec::has_bool_() const {
  return type_spec_case() == kBool;
}
inline void P4DataTypeSpec::set_has_bool_() {
  _oneof_case_[0] = kBool;
}
inline void P4DataTypeSpec::clear_bool_() {
  if (has_bool_()) {
    delete type_spec_.bool__;
    clear_has_type_spec();
  }
}
inline  const ::p4::config::v1::P4BoolType& P4DataTypeSpec::bool_() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.bool)
  return has_bool_()
      ? *type_spec_.bool__
      : ::p4::config::v1::P4BoolType::default_instance();
}
inline ::p4::config::v1::P4BoolType* P4DataTypeSpec::mutable_bool_() {
  if (!has_bool_()) {
    clear_type_spec();
    set_has_bool_();
    type_spec_.bool__ = new ::p4::config::v1::P4BoolType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.bool)
  return type_spec_.bool__;
}
inline ::p4::config::v1::P4BoolType* P4DataTypeSpec::release_bool_() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.bool)
  if (has_bool_()) {
    clear_has_type_spec();
    ::p4::config::v1::P4BoolType* temp = type_spec_.bool__;
    type_spec_.bool__ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4DataTypeSpec::set_allocated_bool_(::p4::config::v1::P4BoolType* bool_) {
  clear_type_spec();
  if (bool_) {
    set_has_bool_();
    type_spec_.bool__ = bool_;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.bool)
}

// .p4.config.v1.P4TupleTypeSpec tuple = 3;
inline bool P4DataTypeSpec::has_tuple() const {
  return type_spec_case() == kTuple;
}
inline void P4DataTypeSpec::set_has_tuple() {
  _oneof_case_[0] = kTuple;
}
inline void P4DataTypeSpec::clear_tuple() {
  if (has_tuple()) {
    delete type_spec_.tuple_;
    clear_has_type_spec();
  }
}
inline  const ::p4::config::v1::P4TupleTypeSpec& P4DataTypeSpec::tuple() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.tuple)
  return has_tuple()
      ? *type_spec_.tuple_
      : ::p4::config::v1::P4TupleTypeSpec::default_instance();
}
inline ::p4::config::v1::P4TupleTypeSpec* P4DataTypeSpec::mutable_tuple() {
  if (!has_tuple()) {
    clear_type_spec();
    set_has_tuple();
    type_spec_.tuple_ = new ::p4::config::v1::P4TupleTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.tuple)
  return type_spec_.tuple_;
}
inline ::p4::config::v1::P4TupleTypeSpec* P4DataTypeSpec::release_tuple() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.tuple)
  if (has_tuple()) {
    clear_has_type_spec();
    ::p4::config::v1::P4TupleTypeSpec* temp = type_spec_.tuple_;
    type_spec_.tuple_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4DataTypeSpec::set_allocated_tuple(::p4::config::v1::P4TupleTypeSpec* tuple) {
  clear_type_spec();
  if (tuple) {
    set_has_tuple();
    type_spec_.tuple_ = tuple;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.tuple)
}

// .p4.config.v1.P4NamedType struct = 4;
inline bool P4DataTypeSpec::has_struct_() const {
  return type_spec_case() == kStruct;
}
inline void P4DataTypeSpec::set_has_struct_() {
  _oneof_case_[0] = kStruct;
}
inline void P4DataTypeSpec::clear_struct_() {
  if (has_struct_()) {
    delete type_spec_.struct__;
    clear_has_type_spec();
  }
}
inline  const ::p4::config::v1::P4NamedType& P4DataTypeSpec::struct_() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.struct)
  return has_struct_()
      ? *type_spec_.struct__
      : ::p4::config::v1::P4NamedType::default_instance();
}
inline ::p4::config::v1::P4NamedType* P4DataTypeSpec::mutable_struct_() {
  if (!has_struct_()) {
    clear_type_spec();
    set_has_struct_();
    type_spec_.struct__ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.struct)
  return type_spec_.struct__;
}
inline ::p4::config::v1::P4NamedType* P4DataTypeSpec::release_struct_() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.struct)
  if (has_struct_()) {
    clear_has_type_spec();
    ::p4::config::v1::P4NamedType* temp = type_spec_.struct__;
    type_spec_.struct__ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4DataTypeSpec::set_allocated_struct_(::p4::config::v1::P4NamedType* struct_) {
  clear_type_spec();
  if (struct_) {
    set_has_struct_();
    type_spec_.struct__ = struct_;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.struct)
}

// .p4.config.v1.P4NamedType header = 5;
inline bool P4DataTypeSpec::has_header() const {
  return type_spec_case() == kHeader;
}
inline void P4DataTypeSpec::set_has_header() {
  _oneof_case_[0] = kHeader;
}
inline void P4DataTypeSpec::clear_header() {
  if (has_header()) {
    delete type_spec_.header_;
    clear_has_type_spec();
  }
}
inline  const ::p4::config::v1::P4NamedType& P4DataTypeSpec::header() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.header)
  return has_header()
      ? *type_spec_.header_
      : ::p4::config::v1::P4NamedType::default_instance();
}
inline ::p4::config::v1::P4NamedType* P4DataTypeSpec::mutable_header() {
  if (!has_header()) {
    clear_type_spec();
    set_has_header();
    type_spec_.header_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.header)
  return type_spec_.header_;
}
inline ::p4::config::v1::P4NamedType* P4DataTypeSpec::release_header() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.header)
  if (has_header()) {
    clear_has_type_spec();
    ::p4::config::v1::P4NamedType* temp = type_spec_.header_;
    type_spec_.header_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4DataTypeSpec::set_allocated_header(::p4::config::v1::P4NamedType* header) {
  clear_type_spec();
  if (header) {
    set_has_header();
    type_spec_.header_ = header;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.header)
}

// .p4.config.v1.P4NamedType header_union = 6;
inline bool P4DataTypeSpec::has_header_union() const {
  return type_spec_case() == kHeaderUnion;
}
inline void P4DataTypeSpec::set_has_header_union() {
  _oneof_case_[0] = kHeaderUnion;
}
inline void P4DataTypeSpec::clear_header_union() {
  if (has_header_union()) {
    delete type_spec_.header_union_;
    clear_has_type_spec();
  }
}
inline  const ::p4::config::v1::P4NamedType& P4DataTypeSpec::header_union() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.header_union)
  return has_header_union()
      ? *type_spec_.header_union_
      : ::p4::config::v1::P4NamedType::default_instance();
}
inline ::p4::config::v1::P4NamedType* P4DataTypeSpec::mutable_header_union() {
  if (!has_header_union()) {
    clear_type_spec();
    set_has_header_union();
    type_spec_.header_union_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.header_union)
  return type_spec_.header_union_;
}
inline ::p4::config::v1::P4NamedType* P4DataTypeSpec::release_header_union() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.header_union)
  if (has_header_union()) {
    clear_has_type_spec();
    ::p4::config::v1::P4NamedType* temp = type_spec_.header_union_;
    type_spec_.header_union_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4DataTypeSpec::set_allocated_header_union(::p4::config::v1::P4NamedType* header_union) {
  clear_type_spec();
  if (header_union) {
    set_has_header_union();
    type_spec_.header_union_ = header_union;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.header_union)
}

// .p4.config.v1.P4HeaderStackTypeSpec header_stack = 7;
inline bool P4DataTypeSpec::has_header_stack() const {
  return type_spec_case() == kHeaderStack;
}
inline void P4DataTypeSpec::set_has_header_stack() {
  _oneof_case_[0] = kHeaderStack;
}
inline void P4DataTypeSpec::clear_header_stack() {
  if (has_header_stack()) {
    delete type_spec_.header_stack_;
    clear_has_type_spec();
  }
}
inline  const ::p4::config::v1::P4HeaderStackTypeSpec& P4DataTypeSpec::header_stack() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.header_stack)
  return has_header_stack()
      ? *type_spec_.header_stack_
      : ::p4::config::v1::P4HeaderStackTypeSpec::default_instance();
}
inline ::p4::config::v1::P4HeaderStackTypeSpec* P4DataTypeSpec::mutable_header_stack() {
  if (!has_header_stack()) {
    clear_type_spec();
    set_has_header_stack();
    type_spec_.header_stack_ = new ::p4::config::v1::P4HeaderStackTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.header_stack)
  return type_spec_.header_stack_;
}
inline ::p4::config::v1::P4HeaderStackTypeSpec* P4DataTypeSpec::release_header_stack() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.header_stack)
  if (has_header_stack()) {
    clear_has_type_spec();
    ::p4::config::v1::P4HeaderStackTypeSpec* temp = type_spec_.header_stack_;
    type_spec_.header_stack_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4DataTypeSpec::set_allocated_header_stack(::p4::config::v1::P4HeaderStackTypeSpec* header_stack) {
  clear_type_spec();
  if (header_stack) {
    set_has_header_stack();
    type_spec_.header_stack_ = header_stack;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.header_stack)
}

// .p4.config.v1.P4HeaderUnionStackTypeSpec header_union_stack = 8;
inline bool P4DataTypeSpec::has_header_union_stack() const {
  return type_spec_case() == kHeaderUnionStack;
}
inline void P4DataTypeSpec::set_has_header_union_stack() {
  _oneof_case_[0] = kHeaderUnionStack;
}
inline void P4DataTypeSpec::clear_header_union_stack() {
  if (has_header_union_stack()) {
    delete type_spec_.header_union_stack_;
    clear_has_type_spec();
  }
}
inline  const ::p4::config::v1::P4HeaderUnionStackTypeSpec& P4DataTypeSpec::header_union_stack() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.header_union_stack)
  return has_header_union_stack()
      ? *type_spec_.header_union_stack_
      : ::p4::config::v1::P4HeaderUnionStackTypeSpec::default_instance();
}
inline ::p4::config::v1::P4HeaderUnionStackTypeSpec* P4DataTypeSpec::mutable_header_union_stack() {
  if (!has_header_union_stack()) {
    clear_type_spec();
    set_has_header_union_stack();
    type_spec_.header_union_stack_ = new ::p4::config::v1::P4HeaderUnionStackTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.header_union_stack)
  return type_spec_.header_union_stack_;
}
inline ::p4::config::v1::P4HeaderUnionStackTypeSpec* P4DataTypeSpec::release_header_union_stack() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.header_union_stack)
  if (has_header_union_stack()) {
    clear_has_type_spec();
    ::p4::config::v1::P4HeaderUnionStackTypeSpec* temp = type_spec_.header_union_stack_;
    type_spec_.header_union_stack_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4DataTypeSpec::set_allocated_header_union_stack(::p4::config::v1::P4HeaderUnionStackTypeSpec* header_union_stack) {
  clear_type_spec();
  if (header_union_stack) {
    set_has_header_union_stack();
    type_spec_.header_union_stack_ = header_union_stack;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.header_union_stack)
}

// .p4.config.v1.P4NamedType enum = 9;
inline bool P4DataTypeSpec::has_enum_() const {
  return type_spec_case() == kEnum;
}
inline void P4DataTypeSpec::set_has_enum_() {
  _oneof_case_[0] = kEnum;
}
inline void P4DataTypeSpec::clear_enum_() {
  if (has_enum_()) {
    delete type_spec_.enum__;
    clear_has_type_spec();
  }
}
inline  const ::p4::config::v1::P4NamedType& P4DataTypeSpec::enum_() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.enum)
  return has_enum_()
      ? *type_spec_.enum__
      : ::p4::config::v1::P4NamedType::default_instance();
}
inline ::p4::config::v1::P4NamedType* P4DataTypeSpec::mutable_enum_() {
  if (!has_enum_()) {
    clear_type_spec();
    set_has_enum_();
    type_spec_.enum__ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.enum)
  return type_spec_.enum__;
}
inline ::p4::config::v1::P4NamedType* P4DataTypeSpec::release_enum_() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.enum)
  if (has_enum_()) {
    clear_has_type_spec();
    ::p4::config::v1::P4NamedType* temp = type_spec_.enum__;
    type_spec_.enum__ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4DataTypeSpec::set_allocated_enum_(::p4::config::v1::P4NamedType* enum_) {
  clear_type_spec();
  if (enum_) {
    set_has_enum_();
    type_spec_.enum__ = enum_;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.enum)
}

// .p4.config.v1.P4ErrorType error = 10;
inline bool P4DataTypeSpec::has_error() const {
  return type_spec_case() == kError;
}
inline void P4DataTypeSpec::set_has_error() {
  _oneof_case_[0] = kError;
}
inline void P4DataTypeSpec::clear_error() {
  if (has_error()) {
    delete type_spec_.error_;
    clear_has_type_spec();
  }
}
inline  const ::p4::config::v1::P4ErrorType& P4DataTypeSpec::error() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.error)
  return has_error()
      ? *type_spec_.error_
      : ::p4::config::v1::P4ErrorType::default_instance();
}
inline ::p4::config::v1::P4ErrorType* P4DataTypeSpec::mutable_error() {
  if (!has_error()) {
    clear_type_spec();
    set_has_error();
    type_spec_.error_ = new ::p4::config::v1::P4ErrorType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.error)
  return type_spec_.error_;
}
inline ::p4::config::v1::P4ErrorType* P4DataTypeSpec::release_error() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.error)
  if (has_error()) {
    clear_has_type_spec();
    ::p4::config::v1::P4ErrorType* temp = type_spec_.error_;
    type_spec_.error_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4DataTypeSpec::set_allocated_error(::p4::config::v1::P4ErrorType* error) {
  clear_type_spec();
  if (error) {
    set_has_error();
    type_spec_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.error)
}

// .p4.config.v1.P4NamedType serializable_enum = 11;
inline bool P4DataTypeSpec::has_serializable_enum() const {
  return type_spec_case() == kSerializableEnum;
}
inline void P4DataTypeSpec::set_has_serializable_enum() {
  _oneof_case_[0] = kSerializableEnum;
}
inline void P4DataTypeSpec::clear_serializable_enum() {
  if (has_serializable_enum()) {
    delete type_spec_.serializable_enum_;
    clear_has_type_spec();
  }
}
inline  const ::p4::config::v1::P4NamedType& P4DataTypeSpec::serializable_enum() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.serializable_enum)
  return has_serializable_enum()
      ? *type_spec_.serializable_enum_
      : ::p4::config::v1::P4NamedType::default_instance();
}
inline ::p4::config::v1::P4NamedType* P4DataTypeSpec::mutable_serializable_enum() {
  if (!has_serializable_enum()) {
    clear_type_spec();
    set_has_serializable_enum();
    type_spec_.serializable_enum_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.serializable_enum)
  return type_spec_.serializable_enum_;
}
inline ::p4::config::v1::P4NamedType* P4DataTypeSpec::release_serializable_enum() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.serializable_enum)
  if (has_serializable_enum()) {
    clear_has_type_spec();
    ::p4::config::v1::P4NamedType* temp = type_spec_.serializable_enum_;
    type_spec_.serializable_enum_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4DataTypeSpec::set_allocated_serializable_enum(::p4::config::v1::P4NamedType* serializable_enum) {
  clear_type_spec();
  if (serializable_enum) {
    set_has_serializable_enum();
    type_spec_.serializable_enum_ = serializable_enum;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.serializable_enum)
}

// .p4.config.v1.P4NamedType new_type = 12;
inline bool P4DataTypeSpec::has_new_type() const {
  return type_spec_case() == kNewType;
}
inline void P4DataTypeSpec::set_has_new_type() {
  _oneof_case_[0] = kNewType;
}
inline void P4DataTypeSpec::clear_new_type() {
  if (has_new_type()) {
    delete type_spec_.new_type_;
    clear_has_type_spec();
  }
}
inline  const ::p4::config::v1::P4NamedType& P4DataTypeSpec::new_type() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4DataTypeSpec.new_type)
  return has_new_type()
      ? *type_spec_.new_type_
      : ::p4::config::v1::P4NamedType::default_instance();
}
inline ::p4::config::v1::P4NamedType* P4DataTypeSpec::mutable_new_type() {
  if (!has_new_type()) {
    clear_type_spec();
    set_has_new_type();
    type_spec_.new_type_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4DataTypeSpec.new_type)
  return type_spec_.new_type_;
}
inline ::p4::config::v1::P4NamedType* P4DataTypeSpec::release_new_type() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4DataTypeSpec.new_type)
  if (has_new_type()) {
    clear_has_type_spec();
    ::p4::config::v1::P4NamedType* temp = type_spec_.new_type_;
    type_spec_.new_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4DataTypeSpec::set_allocated_new_type(::p4::config::v1::P4NamedType* new_type) {
  clear_type_spec();
  if (new_type) {
    set_has_new_type();
    type_spec_.new_type_ = new_type;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4DataTypeSpec.new_type)
}

inline bool P4DataTypeSpec::has_type_spec() const {
  return type_spec_case() != TYPE_SPEC_NOT_SET;
}
inline void P4DataTypeSpec::clear_has_type_spec() {
  _oneof_case_[0] = TYPE_SPEC_NOT_SET;
}
inline P4DataTypeSpec::TypeSpecCase P4DataTypeSpec::type_spec_case() const {
  return P4DataTypeSpec::TypeSpecCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// P4NamedType

// string name = 1;
inline void P4NamedType::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P4NamedType::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4NamedType.name)
  return name_.GetNoArena();
}
inline void P4NamedType::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.P4NamedType.name)
}
#if LANG_CXX11
inline void P4NamedType::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.P4NamedType.name)
}
#endif
inline void P4NamedType::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4NamedType.name)
}
inline void P4NamedType::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4NamedType.name)
}
inline ::std::string* P4NamedType::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4NamedType.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P4NamedType::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4NamedType.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P4NamedType::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4NamedType.name)
}

// -------------------------------------------------------------------

// P4BoolType

// -------------------------------------------------------------------

// P4ErrorType

// -------------------------------------------------------------------

// P4BitstringLikeTypeSpec

// .p4.config.v1.P4BitTypeSpec bit = 1;
inline bool P4BitstringLikeTypeSpec::has_bit() const {
  return type_spec_case() == kBit;
}
inline void P4BitstringLikeTypeSpec::set_has_bit() {
  _oneof_case_[0] = kBit;
}
inline void P4BitstringLikeTypeSpec::clear_bit() {
  if (has_bit()) {
    delete type_spec_.bit_;
    clear_has_type_spec();
  }
}
inline  const ::p4::config::v1::P4BitTypeSpec& P4BitstringLikeTypeSpec::bit() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4BitstringLikeTypeSpec.bit)
  return has_bit()
      ? *type_spec_.bit_
      : ::p4::config::v1::P4BitTypeSpec::default_instance();
}
inline ::p4::config::v1::P4BitTypeSpec* P4BitstringLikeTypeSpec::mutable_bit() {
  if (!has_bit()) {
    clear_type_spec();
    set_has_bit();
    type_spec_.bit_ = new ::p4::config::v1::P4BitTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4BitstringLikeTypeSpec.bit)
  return type_spec_.bit_;
}
inline ::p4::config::v1::P4BitTypeSpec* P4BitstringLikeTypeSpec::release_bit() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4BitstringLikeTypeSpec.bit)
  if (has_bit()) {
    clear_has_type_spec();
    ::p4::config::v1::P4BitTypeSpec* temp = type_spec_.bit_;
    type_spec_.bit_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4BitstringLikeTypeSpec::set_allocated_bit(::p4::config::v1::P4BitTypeSpec* bit) {
  clear_type_spec();
  if (bit) {
    set_has_bit();
    type_spec_.bit_ = bit;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4BitstringLikeTypeSpec.bit)
}

// .p4.config.v1.P4IntTypeSpec int = 2;
inline bool P4BitstringLikeTypeSpec::has_int_() const {
  return type_spec_case() == kInt;
}
inline void P4BitstringLikeTypeSpec::set_has_int_() {
  _oneof_case_[0] = kInt;
}
inline void P4BitstringLikeTypeSpec::clear_int_() {
  if (has_int_()) {
    delete type_spec_.int__;
    clear_has_type_spec();
  }
}
inline  const ::p4::config::v1::P4IntTypeSpec& P4BitstringLikeTypeSpec::int_() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4BitstringLikeTypeSpec.int)
  return has_int_()
      ? *type_spec_.int__
      : ::p4::config::v1::P4IntTypeSpec::default_instance();
}
inline ::p4::config::v1::P4IntTypeSpec* P4BitstringLikeTypeSpec::mutable_int_() {
  if (!has_int_()) {
    clear_type_spec();
    set_has_int_();
    type_spec_.int__ = new ::p4::config::v1::P4IntTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4BitstringLikeTypeSpec.int)
  return type_spec_.int__;
}
inline ::p4::config::v1::P4IntTypeSpec* P4BitstringLikeTypeSpec::release_int_() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4BitstringLikeTypeSpec.int)
  if (has_int_()) {
    clear_has_type_spec();
    ::p4::config::v1::P4IntTypeSpec* temp = type_spec_.int__;
    type_spec_.int__ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4BitstringLikeTypeSpec::set_allocated_int_(::p4::config::v1::P4IntTypeSpec* int_) {
  clear_type_spec();
  if (int_) {
    set_has_int_();
    type_spec_.int__ = int_;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4BitstringLikeTypeSpec.int)
}

// .p4.config.v1.P4VarbitTypeSpec varbit = 3;
inline bool P4BitstringLikeTypeSpec::has_varbit() const {
  return type_spec_case() == kVarbit;
}
inline void P4BitstringLikeTypeSpec::set_has_varbit() {
  _oneof_case_[0] = kVarbit;
}
inline void P4BitstringLikeTypeSpec::clear_varbit() {
  if (has_varbit()) {
    delete type_spec_.varbit_;
    clear_has_type_spec();
  }
}
inline  const ::p4::config::v1::P4VarbitTypeSpec& P4BitstringLikeTypeSpec::varbit() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4BitstringLikeTypeSpec.varbit)
  return has_varbit()
      ? *type_spec_.varbit_
      : ::p4::config::v1::P4VarbitTypeSpec::default_instance();
}
inline ::p4::config::v1::P4VarbitTypeSpec* P4BitstringLikeTypeSpec::mutable_varbit() {
  if (!has_varbit()) {
    clear_type_spec();
    set_has_varbit();
    type_spec_.varbit_ = new ::p4::config::v1::P4VarbitTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4BitstringLikeTypeSpec.varbit)
  return type_spec_.varbit_;
}
inline ::p4::config::v1::P4VarbitTypeSpec* P4BitstringLikeTypeSpec::release_varbit() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4BitstringLikeTypeSpec.varbit)
  if (has_varbit()) {
    clear_has_type_spec();
    ::p4::config::v1::P4VarbitTypeSpec* temp = type_spec_.varbit_;
    type_spec_.varbit_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4BitstringLikeTypeSpec::set_allocated_varbit(::p4::config::v1::P4VarbitTypeSpec* varbit) {
  clear_type_spec();
  if (varbit) {
    set_has_varbit();
    type_spec_.varbit_ = varbit;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4BitstringLikeTypeSpec.varbit)
}

// repeated string annotations = 4;
inline int P4BitstringLikeTypeSpec::annotations_size() const {
  return annotations_.size();
}
inline void P4BitstringLikeTypeSpec::clear_annotations() {
  annotations_.Clear();
}
inline const ::std::string& P4BitstringLikeTypeSpec::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
  return annotations_.Get(index);
}
inline ::std::string* P4BitstringLikeTypeSpec::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
  return annotations_.Mutable(index);
}
inline void P4BitstringLikeTypeSpec::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
  annotations_.Mutable(index)->assign(value);
}
inline void P4BitstringLikeTypeSpec::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
}
inline void P4BitstringLikeTypeSpec::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
}
inline ::std::string* P4BitstringLikeTypeSpec::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
  return annotations_.Add();
}
inline void P4BitstringLikeTypeSpec::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
}
inline void P4BitstringLikeTypeSpec::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
}
inline void P4BitstringLikeTypeSpec::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4BitstringLikeTypeSpec::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
  return annotations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
P4BitstringLikeTypeSpec::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4BitstringLikeTypeSpec.annotations)
  return &annotations_;
}

inline bool P4BitstringLikeTypeSpec::has_type_spec() const {
  return type_spec_case() != TYPE_SPEC_NOT_SET;
}
inline void P4BitstringLikeTypeSpec::clear_has_type_spec() {
  _oneof_case_[0] = TYPE_SPEC_NOT_SET;
}
inline P4BitstringLikeTypeSpec::TypeSpecCase P4BitstringLikeTypeSpec::type_spec_case() const {
  return P4BitstringLikeTypeSpec::TypeSpecCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// P4BitTypeSpec

// int32 bitwidth = 1;
inline void P4BitTypeSpec::clear_bitwidth() {
  bitwidth_ = 0;
}
inline ::google::protobuf::int32 P4BitTypeSpec::bitwidth() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4BitTypeSpec.bitwidth)
  return bitwidth_;
}
inline void P4BitTypeSpec::set_bitwidth(::google::protobuf::int32 value) {
  
  bitwidth_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.P4BitTypeSpec.bitwidth)
}

// -------------------------------------------------------------------

// P4IntTypeSpec

// int32 bitwidth = 1;
inline void P4IntTypeSpec::clear_bitwidth() {
  bitwidth_ = 0;
}
inline ::google::protobuf::int32 P4IntTypeSpec::bitwidth() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4IntTypeSpec.bitwidth)
  return bitwidth_;
}
inline void P4IntTypeSpec::set_bitwidth(::google::protobuf::int32 value) {
  
  bitwidth_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.P4IntTypeSpec.bitwidth)
}

// -------------------------------------------------------------------

// P4VarbitTypeSpec

// int32 max_bitwidth = 1;
inline void P4VarbitTypeSpec::clear_max_bitwidth() {
  max_bitwidth_ = 0;
}
inline ::google::protobuf::int32 P4VarbitTypeSpec::max_bitwidth() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4VarbitTypeSpec.max_bitwidth)
  return max_bitwidth_;
}
inline void P4VarbitTypeSpec::set_max_bitwidth(::google::protobuf::int32 value) {
  
  max_bitwidth_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.P4VarbitTypeSpec.max_bitwidth)
}

// -------------------------------------------------------------------

// P4TupleTypeSpec

// repeated .p4.config.v1.P4DataTypeSpec members = 1;
inline int P4TupleTypeSpec::members_size() const {
  return members_.size();
}
inline void P4TupleTypeSpec::clear_members() {
  members_.Clear();
}
inline const ::p4::config::v1::P4DataTypeSpec& P4TupleTypeSpec::members(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4TupleTypeSpec.members)
  return members_.Get(index);
}
inline ::p4::config::v1::P4DataTypeSpec* P4TupleTypeSpec::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4TupleTypeSpec.members)
  return members_.Mutable(index);
}
inline ::p4::config::v1::P4DataTypeSpec* P4TupleTypeSpec::add_members() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4TupleTypeSpec.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4DataTypeSpec >*
P4TupleTypeSpec::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4TupleTypeSpec.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4DataTypeSpec >&
P4TupleTypeSpec::members() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4TupleTypeSpec.members)
  return members_;
}

// -------------------------------------------------------------------

// P4StructTypeSpec_Member

// string name = 1;
inline void P4StructTypeSpec_Member::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P4StructTypeSpec_Member::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4StructTypeSpec.Member.name)
  return name_.GetNoArena();
}
inline void P4StructTypeSpec_Member::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.P4StructTypeSpec.Member.name)
}
#if LANG_CXX11
inline void P4StructTypeSpec_Member::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.P4StructTypeSpec.Member.name)
}
#endif
inline void P4StructTypeSpec_Member::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4StructTypeSpec.Member.name)
}
inline void P4StructTypeSpec_Member::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4StructTypeSpec.Member.name)
}
inline ::std::string* P4StructTypeSpec_Member::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4StructTypeSpec.Member.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P4StructTypeSpec_Member::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4StructTypeSpec.Member.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P4StructTypeSpec_Member::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4StructTypeSpec.Member.name)
}

// .p4.config.v1.P4DataTypeSpec type_spec = 2;
inline bool P4StructTypeSpec_Member::has_type_spec() const {
  return this != internal_default_instance() && type_spec_ != NULL;
}
inline void P4StructTypeSpec_Member::clear_type_spec() {
  if (GetArenaNoVirtual() == NULL && type_spec_ != NULL) delete type_spec_;
  type_spec_ = NULL;
}
inline const ::p4::config::v1::P4DataTypeSpec& P4StructTypeSpec_Member::type_spec() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4StructTypeSpec.Member.type_spec)
  return type_spec_ != NULL ? *type_spec_
                         : *::p4::config::v1::P4DataTypeSpec::internal_default_instance();
}
inline ::p4::config::v1::P4DataTypeSpec* P4StructTypeSpec_Member::mutable_type_spec() {
  
  if (type_spec_ == NULL) {
    type_spec_ = new ::p4::config::v1::P4DataTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4StructTypeSpec.Member.type_spec)
  return type_spec_;
}
inline ::p4::config::v1::P4DataTypeSpec* P4StructTypeSpec_Member::release_type_spec() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4StructTypeSpec.Member.type_spec)
  
  ::p4::config::v1::P4DataTypeSpec* temp = type_spec_;
  type_spec_ = NULL;
  return temp;
}
inline void P4StructTypeSpec_Member::set_allocated_type_spec(::p4::config::v1::P4DataTypeSpec* type_spec) {
  delete type_spec_;
  type_spec_ = type_spec;
  if (type_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4StructTypeSpec.Member.type_spec)
}

// -------------------------------------------------------------------

// P4StructTypeSpec

// repeated .p4.config.v1.P4StructTypeSpec.Member members = 1;
inline int P4StructTypeSpec::members_size() const {
  return members_.size();
}
inline void P4StructTypeSpec::clear_members() {
  members_.Clear();
}
inline const ::p4::config::v1::P4StructTypeSpec_Member& P4StructTypeSpec::members(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4StructTypeSpec.members)
  return members_.Get(index);
}
inline ::p4::config::v1::P4StructTypeSpec_Member* P4StructTypeSpec::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4StructTypeSpec.members)
  return members_.Mutable(index);
}
inline ::p4::config::v1::P4StructTypeSpec_Member* P4StructTypeSpec::add_members() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4StructTypeSpec.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4StructTypeSpec_Member >*
P4StructTypeSpec::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4StructTypeSpec.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4StructTypeSpec_Member >&
P4StructTypeSpec::members() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4StructTypeSpec.members)
  return members_;
}

// repeated string annotations = 2;
inline int P4StructTypeSpec::annotations_size() const {
  return annotations_.size();
}
inline void P4StructTypeSpec::clear_annotations() {
  annotations_.Clear();
}
inline const ::std::string& P4StructTypeSpec::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4StructTypeSpec.annotations)
  return annotations_.Get(index);
}
inline ::std::string* P4StructTypeSpec::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4StructTypeSpec.annotations)
  return annotations_.Mutable(index);
}
inline void P4StructTypeSpec::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4StructTypeSpec.annotations)
  annotations_.Mutable(index)->assign(value);
}
inline void P4StructTypeSpec::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4StructTypeSpec.annotations)
}
inline void P4StructTypeSpec::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4StructTypeSpec.annotations)
}
inline ::std::string* P4StructTypeSpec::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4StructTypeSpec.annotations)
  return annotations_.Add();
}
inline void P4StructTypeSpec::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4StructTypeSpec.annotations)
}
inline void P4StructTypeSpec::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4StructTypeSpec.annotations)
}
inline void P4StructTypeSpec::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4StructTypeSpec.annotations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4StructTypeSpec::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4StructTypeSpec.annotations)
  return annotations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
P4StructTypeSpec::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4StructTypeSpec.annotations)
  return &annotations_;
}

// -------------------------------------------------------------------

// P4HeaderTypeSpec_Member

// string name = 1;
inline void P4HeaderTypeSpec_Member::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P4HeaderTypeSpec_Member::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderTypeSpec.Member.name)
  return name_.GetNoArena();
}
inline void P4HeaderTypeSpec_Member::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.P4HeaderTypeSpec.Member.name)
}
#if LANG_CXX11
inline void P4HeaderTypeSpec_Member::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.P4HeaderTypeSpec.Member.name)
}
#endif
inline void P4HeaderTypeSpec_Member::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4HeaderTypeSpec.Member.name)
}
inline void P4HeaderTypeSpec_Member::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4HeaderTypeSpec.Member.name)
}
inline ::std::string* P4HeaderTypeSpec_Member::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderTypeSpec.Member.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P4HeaderTypeSpec_Member::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4HeaderTypeSpec.Member.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P4HeaderTypeSpec_Member::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4HeaderTypeSpec.Member.name)
}

// .p4.config.v1.P4BitstringLikeTypeSpec type_spec = 2;
inline bool P4HeaderTypeSpec_Member::has_type_spec() const {
  return this != internal_default_instance() && type_spec_ != NULL;
}
inline void P4HeaderTypeSpec_Member::clear_type_spec() {
  if (GetArenaNoVirtual() == NULL && type_spec_ != NULL) delete type_spec_;
  type_spec_ = NULL;
}
inline const ::p4::config::v1::P4BitstringLikeTypeSpec& P4HeaderTypeSpec_Member::type_spec() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderTypeSpec.Member.type_spec)
  return type_spec_ != NULL ? *type_spec_
                         : *::p4::config::v1::P4BitstringLikeTypeSpec::internal_default_instance();
}
inline ::p4::config::v1::P4BitstringLikeTypeSpec* P4HeaderTypeSpec_Member::mutable_type_spec() {
  
  if (type_spec_ == NULL) {
    type_spec_ = new ::p4::config::v1::P4BitstringLikeTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderTypeSpec.Member.type_spec)
  return type_spec_;
}
inline ::p4::config::v1::P4BitstringLikeTypeSpec* P4HeaderTypeSpec_Member::release_type_spec() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4HeaderTypeSpec.Member.type_spec)
  
  ::p4::config::v1::P4BitstringLikeTypeSpec* temp = type_spec_;
  type_spec_ = NULL;
  return temp;
}
inline void P4HeaderTypeSpec_Member::set_allocated_type_spec(::p4::config::v1::P4BitstringLikeTypeSpec* type_spec) {
  delete type_spec_;
  type_spec_ = type_spec;
  if (type_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4HeaderTypeSpec.Member.type_spec)
}

// -------------------------------------------------------------------

// P4HeaderTypeSpec

// repeated .p4.config.v1.P4HeaderTypeSpec.Member members = 1;
inline int P4HeaderTypeSpec::members_size() const {
  return members_.size();
}
inline void P4HeaderTypeSpec::clear_members() {
  members_.Clear();
}
inline const ::p4::config::v1::P4HeaderTypeSpec_Member& P4HeaderTypeSpec::members(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderTypeSpec.members)
  return members_.Get(index);
}
inline ::p4::config::v1::P4HeaderTypeSpec_Member* P4HeaderTypeSpec::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderTypeSpec.members)
  return members_.Mutable(index);
}
inline ::p4::config::v1::P4HeaderTypeSpec_Member* P4HeaderTypeSpec::add_members() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4HeaderTypeSpec.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4HeaderTypeSpec_Member >*
P4HeaderTypeSpec::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4HeaderTypeSpec.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4HeaderTypeSpec_Member >&
P4HeaderTypeSpec::members() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4HeaderTypeSpec.members)
  return members_;
}

// repeated string annotations = 2;
inline int P4HeaderTypeSpec::annotations_size() const {
  return annotations_.size();
}
inline void P4HeaderTypeSpec::clear_annotations() {
  annotations_.Clear();
}
inline const ::std::string& P4HeaderTypeSpec::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderTypeSpec.annotations)
  return annotations_.Get(index);
}
inline ::std::string* P4HeaderTypeSpec::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderTypeSpec.annotations)
  return annotations_.Mutable(index);
}
inline void P4HeaderTypeSpec::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4HeaderTypeSpec.annotations)
  annotations_.Mutable(index)->assign(value);
}
inline void P4HeaderTypeSpec::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4HeaderTypeSpec.annotations)
}
inline void P4HeaderTypeSpec::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4HeaderTypeSpec.annotations)
}
inline ::std::string* P4HeaderTypeSpec::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4HeaderTypeSpec.annotations)
  return annotations_.Add();
}
inline void P4HeaderTypeSpec::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4HeaderTypeSpec.annotations)
}
inline void P4HeaderTypeSpec::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4HeaderTypeSpec.annotations)
}
inline void P4HeaderTypeSpec::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4HeaderTypeSpec.annotations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4HeaderTypeSpec::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4HeaderTypeSpec.annotations)
  return annotations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
P4HeaderTypeSpec::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4HeaderTypeSpec.annotations)
  return &annotations_;
}

// -------------------------------------------------------------------

// P4HeaderUnionTypeSpec_Member

// string name = 1;
inline void P4HeaderUnionTypeSpec_Member::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P4HeaderUnionTypeSpec_Member::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderUnionTypeSpec.Member.name)
  return name_.GetNoArena();
}
inline void P4HeaderUnionTypeSpec_Member::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.P4HeaderUnionTypeSpec.Member.name)
}
#if LANG_CXX11
inline void P4HeaderUnionTypeSpec_Member::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.P4HeaderUnionTypeSpec.Member.name)
}
#endif
inline void P4HeaderUnionTypeSpec_Member::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4HeaderUnionTypeSpec.Member.name)
}
inline void P4HeaderUnionTypeSpec_Member::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4HeaderUnionTypeSpec.Member.name)
}
inline ::std::string* P4HeaderUnionTypeSpec_Member::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderUnionTypeSpec.Member.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P4HeaderUnionTypeSpec_Member::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4HeaderUnionTypeSpec.Member.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P4HeaderUnionTypeSpec_Member::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4HeaderUnionTypeSpec.Member.name)
}

// .p4.config.v1.P4NamedType header = 2;
inline bool P4HeaderUnionTypeSpec_Member::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void P4HeaderUnionTypeSpec_Member::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::p4::config::v1::P4NamedType& P4HeaderUnionTypeSpec_Member::header() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderUnionTypeSpec.Member.header)
  return header_ != NULL ? *header_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
inline ::p4::config::v1::P4NamedType* P4HeaderUnionTypeSpec_Member::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderUnionTypeSpec.Member.header)
  return header_;
}
inline ::p4::config::v1::P4NamedType* P4HeaderUnionTypeSpec_Member::release_header() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4HeaderUnionTypeSpec.Member.header)
  
  ::p4::config::v1::P4NamedType* temp = header_;
  header_ = NULL;
  return temp;
}
inline void P4HeaderUnionTypeSpec_Member::set_allocated_header(::p4::config::v1::P4NamedType* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4HeaderUnionTypeSpec.Member.header)
}

// -------------------------------------------------------------------

// P4HeaderUnionTypeSpec

// repeated .p4.config.v1.P4HeaderUnionTypeSpec.Member members = 1;
inline int P4HeaderUnionTypeSpec::members_size() const {
  return members_.size();
}
inline void P4HeaderUnionTypeSpec::clear_members() {
  members_.Clear();
}
inline const ::p4::config::v1::P4HeaderUnionTypeSpec_Member& P4HeaderUnionTypeSpec::members(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderUnionTypeSpec.members)
  return members_.Get(index);
}
inline ::p4::config::v1::P4HeaderUnionTypeSpec_Member* P4HeaderUnionTypeSpec::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderUnionTypeSpec.members)
  return members_.Mutable(index);
}
inline ::p4::config::v1::P4HeaderUnionTypeSpec_Member* P4HeaderUnionTypeSpec::add_members() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4HeaderUnionTypeSpec.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4HeaderUnionTypeSpec_Member >*
P4HeaderUnionTypeSpec::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4HeaderUnionTypeSpec.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4HeaderUnionTypeSpec_Member >&
P4HeaderUnionTypeSpec::members() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4HeaderUnionTypeSpec.members)
  return members_;
}

// repeated string annotations = 2;
inline int P4HeaderUnionTypeSpec::annotations_size() const {
  return annotations_.size();
}
inline void P4HeaderUnionTypeSpec::clear_annotations() {
  annotations_.Clear();
}
inline const ::std::string& P4HeaderUnionTypeSpec::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
  return annotations_.Get(index);
}
inline ::std::string* P4HeaderUnionTypeSpec::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
  return annotations_.Mutable(index);
}
inline void P4HeaderUnionTypeSpec::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
  annotations_.Mutable(index)->assign(value);
}
inline void P4HeaderUnionTypeSpec::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
}
inline void P4HeaderUnionTypeSpec::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
}
inline ::std::string* P4HeaderUnionTypeSpec::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
  return annotations_.Add();
}
inline void P4HeaderUnionTypeSpec::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
}
inline void P4HeaderUnionTypeSpec::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
}
inline void P4HeaderUnionTypeSpec::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4HeaderUnionTypeSpec::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
  return annotations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
P4HeaderUnionTypeSpec::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4HeaderUnionTypeSpec.annotations)
  return &annotations_;
}

// -------------------------------------------------------------------

// P4HeaderStackTypeSpec

// .p4.config.v1.P4NamedType header = 1;
inline bool P4HeaderStackTypeSpec::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void P4HeaderStackTypeSpec::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::p4::config::v1::P4NamedType& P4HeaderStackTypeSpec::header() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderStackTypeSpec.header)
  return header_ != NULL ? *header_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
inline ::p4::config::v1::P4NamedType* P4HeaderStackTypeSpec::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderStackTypeSpec.header)
  return header_;
}
inline ::p4::config::v1::P4NamedType* P4HeaderStackTypeSpec::release_header() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4HeaderStackTypeSpec.header)
  
  ::p4::config::v1::P4NamedType* temp = header_;
  header_ = NULL;
  return temp;
}
inline void P4HeaderStackTypeSpec::set_allocated_header(::p4::config::v1::P4NamedType* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4HeaderStackTypeSpec.header)
}

// int32 size = 2;
inline void P4HeaderStackTypeSpec::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 P4HeaderStackTypeSpec::size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderStackTypeSpec.size)
  return size_;
}
inline void P4HeaderStackTypeSpec::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.P4HeaderStackTypeSpec.size)
}

// -------------------------------------------------------------------

// P4HeaderUnionStackTypeSpec

// .p4.config.v1.P4NamedType header_union = 1;
inline bool P4HeaderUnionStackTypeSpec::has_header_union() const {
  return this != internal_default_instance() && header_union_ != NULL;
}
inline void P4HeaderUnionStackTypeSpec::clear_header_union() {
  if (GetArenaNoVirtual() == NULL && header_union_ != NULL) delete header_union_;
  header_union_ = NULL;
}
inline const ::p4::config::v1::P4NamedType& P4HeaderUnionStackTypeSpec::header_union() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderUnionStackTypeSpec.header_union)
  return header_union_ != NULL ? *header_union_
                         : *::p4::config::v1::P4NamedType::internal_default_instance();
}
inline ::p4::config::v1::P4NamedType* P4HeaderUnionStackTypeSpec::mutable_header_union() {
  
  if (header_union_ == NULL) {
    header_union_ = new ::p4::config::v1::P4NamedType;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4HeaderUnionStackTypeSpec.header_union)
  return header_union_;
}
inline ::p4::config::v1::P4NamedType* P4HeaderUnionStackTypeSpec::release_header_union() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4HeaderUnionStackTypeSpec.header_union)
  
  ::p4::config::v1::P4NamedType* temp = header_union_;
  header_union_ = NULL;
  return temp;
}
inline void P4HeaderUnionStackTypeSpec::set_allocated_header_union(::p4::config::v1::P4NamedType* header_union) {
  delete header_union_;
  header_union_ = header_union;
  if (header_union) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4HeaderUnionStackTypeSpec.header_union)
}

// int32 size = 2;
inline void P4HeaderUnionStackTypeSpec::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 P4HeaderUnionStackTypeSpec::size() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4HeaderUnionStackTypeSpec.size)
  return size_;
}
inline void P4HeaderUnionStackTypeSpec::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.P4HeaderUnionStackTypeSpec.size)
}

// -------------------------------------------------------------------

// KeyValuePair

// string key = 1;
inline void KeyValuePair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KeyValuePair::key() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.KeyValuePair.key)
  return key_.GetNoArena();
}
inline void KeyValuePair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.KeyValuePair.key)
}
#if LANG_CXX11
inline void KeyValuePair::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.KeyValuePair.key)
}
#endif
inline void KeyValuePair::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.KeyValuePair.key)
}
inline void KeyValuePair::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.KeyValuePair.key)
}
inline ::std::string* KeyValuePair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.KeyValuePair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KeyValuePair::release_key() {
  // @@protoc_insertion_point(field_release:p4.config.v1.KeyValuePair.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValuePair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.KeyValuePair.key)
}

// .p4.config.v1.Expression value = 2;
inline bool KeyValuePair::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline void KeyValuePair::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
inline const ::p4::config::v1::Expression& KeyValuePair::value() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.KeyValuePair.value)
  return value_ != NULL ? *value_
                         : *::p4::config::v1::Expression::internal_default_instance();
}
inline ::p4::config::v1::Expression* KeyValuePair::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::p4::config::v1::Expression;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.KeyValuePair.value)
  return value_;
}
inline ::p4::config::v1::Expression* KeyValuePair::release_value() {
  // @@protoc_insertion_point(field_release:p4.config.v1.KeyValuePair.value)
  
  ::p4::config::v1::Expression* temp = value_;
  value_ = NULL;
  return temp;
}
inline void KeyValuePair::set_allocated_value(::p4::config::v1::Expression* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.KeyValuePair.value)
}

// -------------------------------------------------------------------

// KeyValuePairList

// repeated .p4.config.v1.KeyValuePair kv_pairs = 1;
inline int KeyValuePairList::kv_pairs_size() const {
  return kv_pairs_.size();
}
inline void KeyValuePairList::clear_kv_pairs() {
  kv_pairs_.Clear();
}
inline const ::p4::config::v1::KeyValuePair& KeyValuePairList::kv_pairs(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.KeyValuePairList.kv_pairs)
  return kv_pairs_.Get(index);
}
inline ::p4::config::v1::KeyValuePair* KeyValuePairList::mutable_kv_pairs(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.KeyValuePairList.kv_pairs)
  return kv_pairs_.Mutable(index);
}
inline ::p4::config::v1::KeyValuePair* KeyValuePairList::add_kv_pairs() {
  // @@protoc_insertion_point(field_add:p4.config.v1.KeyValuePairList.kv_pairs)
  return kv_pairs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::KeyValuePair >*
KeyValuePairList::mutable_kv_pairs() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.KeyValuePairList.kv_pairs)
  return &kv_pairs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::KeyValuePair >&
KeyValuePairList::kv_pairs() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.KeyValuePairList.kv_pairs)
  return kv_pairs_;
}

// -------------------------------------------------------------------

// Expression

// string string_value = 1;
inline bool Expression::has_string_value() const {
  return value_case() == kStringValue;
}
inline void Expression::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline void Expression::clear_string_value() {
  if (has_string_value()) {
    value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& Expression::string_value() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Expression.string_value)
  if (has_string_value()) {
    return value_.string_value_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Expression::set_string_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.Expression.string_value)
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.Expression.string_value)
}
#if LANG_CXX11
inline void Expression::set_string_value(::std::string&& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.Expression.string_value)
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.Expression.string_value)
}
#endif
inline void Expression::set_string_value(const char* value) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.Expression.string_value)
}
inline void Expression::set_string_value(const char* value, size_t size) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.Expression.string_value)
}
inline ::std::string* Expression::mutable_string_value() {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.Expression.string_value)
  return value_.string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Expression::release_string_value() {
  // @@protoc_insertion_point(field_release:p4.config.v1.Expression.string_value)
  if (has_string_value()) {
    clear_has_value();
    return value_.string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Expression::set_allocated_string_value(::std::string* string_value) {
  if (!has_string_value()) {
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (string_value != NULL) {
    set_has_string_value();
    value_.string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string_value);
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.Expression.string_value)
}

// int64 int64_value = 2;
inline bool Expression::has_int64_value() const {
  return value_case() == kInt64Value;
}
inline void Expression::set_has_int64_value() {
  _oneof_case_[0] = kInt64Value;
}
inline void Expression::clear_int64_value() {
  if (has_int64_value()) {
    value_.int64_value_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
inline ::google::protobuf::int64 Expression::int64_value() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Expression.int64_value)
  if (has_int64_value()) {
    return value_.int64_value_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Expression::set_int64_value(::google::protobuf::int64 value) {
  if (!has_int64_value()) {
    clear_value();
    set_has_int64_value();
  }
  value_.int64_value_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Expression.int64_value)
}

// bool bool_value = 3;
inline bool Expression::has_bool_value() const {
  return value_case() == kBoolValue;
}
inline void Expression::set_has_bool_value() {
  _oneof_case_[0] = kBoolValue;
}
inline void Expression::clear_bool_value() {
  if (has_bool_value()) {
    value_.bool_value_ = false;
    clear_has_value();
  }
}
inline bool Expression::bool_value() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.Expression.bool_value)
  if (has_bool_value()) {
    return value_.bool_value_;
  }
  return false;
}
inline void Expression::set_bool_value(bool value) {
  if (!has_bool_value()) {
    clear_value();
    set_has_bool_value();
  }
  value_.bool_value_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.Expression.bool_value)
}

inline bool Expression::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Expression::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline Expression::ValueCase Expression::value_case() const {
  return Expression::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ExpressionList

// repeated .p4.config.v1.Expression expressions = 1;
inline int ExpressionList::expressions_size() const {
  return expressions_.size();
}
inline void ExpressionList::clear_expressions() {
  expressions_.Clear();
}
inline const ::p4::config::v1::Expression& ExpressionList::expressions(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.ExpressionList.expressions)
  return expressions_.Get(index);
}
inline ::p4::config::v1::Expression* ExpressionList::mutable_expressions(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.ExpressionList.expressions)
  return expressions_.Mutable(index);
}
inline ::p4::config::v1::Expression* ExpressionList::add_expressions() {
  // @@protoc_insertion_point(field_add:p4.config.v1.ExpressionList.expressions)
  return expressions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Expression >*
ExpressionList::mutable_expressions() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.ExpressionList.expressions)
  return &expressions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::Expression >&
ExpressionList::expressions() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.ExpressionList.expressions)
  return expressions_;
}

// -------------------------------------------------------------------

// StructuredAnnotation

// string name = 1;
inline void StructuredAnnotation::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StructuredAnnotation::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.StructuredAnnotation.name)
  return name_.GetNoArena();
}
inline void StructuredAnnotation::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.StructuredAnnotation.name)
}
#if LANG_CXX11
inline void StructuredAnnotation::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.StructuredAnnotation.name)
}
#endif
inline void StructuredAnnotation::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.StructuredAnnotation.name)
}
inline void StructuredAnnotation::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.StructuredAnnotation.name)
}
inline ::std::string* StructuredAnnotation::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.StructuredAnnotation.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StructuredAnnotation::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.StructuredAnnotation.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StructuredAnnotation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.StructuredAnnotation.name)
}

// .p4.config.v1.ExpressionList expression_list = 2;
inline bool StructuredAnnotation::has_expression_list() const {
  return body_case() == kExpressionList;
}
inline void StructuredAnnotation::set_has_expression_list() {
  _oneof_case_[0] = kExpressionList;
}
inline void StructuredAnnotation::clear_expression_list() {
  if (has_expression_list()) {
    delete body_.expression_list_;
    clear_has_body();
  }
}
inline  const ::p4::config::v1::ExpressionList& StructuredAnnotation::expression_list() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.StructuredAnnotation.expression_list)
  return has_expression_list()
      ? *body_.expression_list_
      : ::p4::config::v1::ExpressionList::default_instance();
}
inline ::p4::config::v1::ExpressionList* StructuredAnnotation::mutable_expression_list() {
  if (!has_expression_list()) {
    clear_body();
    set_has_expression_list();
    body_.expression_list_ = new ::p4::config::v1::ExpressionList;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.StructuredAnnotation.expression_list)
  return body_.expression_list_;
}
inline ::p4::config::v1::ExpressionList* StructuredAnnotation::release_expression_list() {
  // @@protoc_insertion_point(field_release:p4.config.v1.StructuredAnnotation.expression_list)
  if (has_expression_list()) {
    clear_has_body();
    ::p4::config::v1::ExpressionList* temp = body_.expression_list_;
    body_.expression_list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void StructuredAnnotation::set_allocated_expression_list(::p4::config::v1::ExpressionList* expression_list) {
  clear_body();
  if (expression_list) {
    set_has_expression_list();
    body_.expression_list_ = expression_list;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.StructuredAnnotation.expression_list)
}

// .p4.config.v1.KeyValuePairList kv_pair_list = 3;
inline bool StructuredAnnotation::has_kv_pair_list() const {
  return body_case() == kKvPairList;
}
inline void StructuredAnnotation::set_has_kv_pair_list() {
  _oneof_case_[0] = kKvPairList;
}
inline void StructuredAnnotation::clear_kv_pair_list() {
  if (has_kv_pair_list()) {
    delete body_.kv_pair_list_;
    clear_has_body();
  }
}
inline  const ::p4::config::v1::KeyValuePairList& StructuredAnnotation::kv_pair_list() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.StructuredAnnotation.kv_pair_list)
  return has_kv_pair_list()
      ? *body_.kv_pair_list_
      : ::p4::config::v1::KeyValuePairList::default_instance();
}
inline ::p4::config::v1::KeyValuePairList* StructuredAnnotation::mutable_kv_pair_list() {
  if (!has_kv_pair_list()) {
    clear_body();
    set_has_kv_pair_list();
    body_.kv_pair_list_ = new ::p4::config::v1::KeyValuePairList;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.StructuredAnnotation.kv_pair_list)
  return body_.kv_pair_list_;
}
inline ::p4::config::v1::KeyValuePairList* StructuredAnnotation::release_kv_pair_list() {
  // @@protoc_insertion_point(field_release:p4.config.v1.StructuredAnnotation.kv_pair_list)
  if (has_kv_pair_list()) {
    clear_has_body();
    ::p4::config::v1::KeyValuePairList* temp = body_.kv_pair_list_;
    body_.kv_pair_list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void StructuredAnnotation::set_allocated_kv_pair_list(::p4::config::v1::KeyValuePairList* kv_pair_list) {
  clear_body();
  if (kv_pair_list) {
    set_has_kv_pair_list();
    body_.kv_pair_list_ = kv_pair_list;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.StructuredAnnotation.kv_pair_list)
}

inline bool StructuredAnnotation::has_body() const {
  return body_case() != BODY_NOT_SET;
}
inline void StructuredAnnotation::clear_has_body() {
  _oneof_case_[0] = BODY_NOT_SET;
}
inline StructuredAnnotation::BodyCase StructuredAnnotation::body_case() const {
  return StructuredAnnotation::BodyCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// P4EnumTypeSpec_Member

// string name = 1;
inline void P4EnumTypeSpec_Member::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P4EnumTypeSpec_Member::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4EnumTypeSpec.Member.name)
  return name_.GetNoArena();
}
inline void P4EnumTypeSpec_Member::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.P4EnumTypeSpec.Member.name)
}
#if LANG_CXX11
inline void P4EnumTypeSpec_Member::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.P4EnumTypeSpec.Member.name)
}
#endif
inline void P4EnumTypeSpec_Member::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4EnumTypeSpec.Member.name)
}
inline void P4EnumTypeSpec_Member::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4EnumTypeSpec.Member.name)
}
inline ::std::string* P4EnumTypeSpec_Member::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4EnumTypeSpec.Member.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P4EnumTypeSpec_Member::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4EnumTypeSpec.Member.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P4EnumTypeSpec_Member::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4EnumTypeSpec.Member.name)
}

// repeated string annotations = 2;
inline int P4EnumTypeSpec_Member::annotations_size() const {
  return annotations_.size();
}
inline void P4EnumTypeSpec_Member::clear_annotations() {
  annotations_.Clear();
}
inline const ::std::string& P4EnumTypeSpec_Member::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4EnumTypeSpec.Member.annotations)
  return annotations_.Get(index);
}
inline ::std::string* P4EnumTypeSpec_Member::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4EnumTypeSpec.Member.annotations)
  return annotations_.Mutable(index);
}
inline void P4EnumTypeSpec_Member::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4EnumTypeSpec.Member.annotations)
  annotations_.Mutable(index)->assign(value);
}
inline void P4EnumTypeSpec_Member::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4EnumTypeSpec.Member.annotations)
}
inline void P4EnumTypeSpec_Member::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4EnumTypeSpec.Member.annotations)
}
inline ::std::string* P4EnumTypeSpec_Member::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4EnumTypeSpec.Member.annotations)
  return annotations_.Add();
}
inline void P4EnumTypeSpec_Member::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4EnumTypeSpec.Member.annotations)
}
inline void P4EnumTypeSpec_Member::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4EnumTypeSpec.Member.annotations)
}
inline void P4EnumTypeSpec_Member::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4EnumTypeSpec.Member.annotations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4EnumTypeSpec_Member::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4EnumTypeSpec.Member.annotations)
  return annotations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
P4EnumTypeSpec_Member::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4EnumTypeSpec.Member.annotations)
  return &annotations_;
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 3;
inline int P4EnumTypeSpec_Member::structured_annotations_size() const {
  return structured_annotations_.size();
}
inline void P4EnumTypeSpec_Member::clear_structured_annotations() {
  structured_annotations_.Clear();
}
inline const ::p4::config::v1::StructuredAnnotation& P4EnumTypeSpec_Member::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4EnumTypeSpec.Member.structured_annotations)
  return structured_annotations_.Get(index);
}
inline ::p4::config::v1::StructuredAnnotation* P4EnumTypeSpec_Member::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4EnumTypeSpec.Member.structured_annotations)
  return structured_annotations_.Mutable(index);
}
inline ::p4::config::v1::StructuredAnnotation* P4EnumTypeSpec_Member::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4EnumTypeSpec.Member.structured_annotations)
  return structured_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
P4EnumTypeSpec_Member::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4EnumTypeSpec.Member.structured_annotations)
  return &structured_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
P4EnumTypeSpec_Member::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4EnumTypeSpec.Member.structured_annotations)
  return structured_annotations_;
}

// -------------------------------------------------------------------

// P4EnumTypeSpec

// repeated .p4.config.v1.P4EnumTypeSpec.Member members = 1;
inline int P4EnumTypeSpec::members_size() const {
  return members_.size();
}
inline void P4EnumTypeSpec::clear_members() {
  members_.Clear();
}
inline const ::p4::config::v1::P4EnumTypeSpec_Member& P4EnumTypeSpec::members(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4EnumTypeSpec.members)
  return members_.Get(index);
}
inline ::p4::config::v1::P4EnumTypeSpec_Member* P4EnumTypeSpec::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4EnumTypeSpec.members)
  return members_.Mutable(index);
}
inline ::p4::config::v1::P4EnumTypeSpec_Member* P4EnumTypeSpec::add_members() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4EnumTypeSpec.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4EnumTypeSpec_Member >*
P4EnumTypeSpec::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4EnumTypeSpec.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4EnumTypeSpec_Member >&
P4EnumTypeSpec::members() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4EnumTypeSpec.members)
  return members_;
}

// repeated string annotations = 2;
inline int P4EnumTypeSpec::annotations_size() const {
  return annotations_.size();
}
inline void P4EnumTypeSpec::clear_annotations() {
  annotations_.Clear();
}
inline const ::std::string& P4EnumTypeSpec::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4EnumTypeSpec.annotations)
  return annotations_.Get(index);
}
inline ::std::string* P4EnumTypeSpec::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4EnumTypeSpec.annotations)
  return annotations_.Mutable(index);
}
inline void P4EnumTypeSpec::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4EnumTypeSpec.annotations)
  annotations_.Mutable(index)->assign(value);
}
inline void P4EnumTypeSpec::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4EnumTypeSpec.annotations)
}
inline void P4EnumTypeSpec::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4EnumTypeSpec.annotations)
}
inline ::std::string* P4EnumTypeSpec::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4EnumTypeSpec.annotations)
  return annotations_.Add();
}
inline void P4EnumTypeSpec::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4EnumTypeSpec.annotations)
}
inline void P4EnumTypeSpec::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4EnumTypeSpec.annotations)
}
inline void P4EnumTypeSpec::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4EnumTypeSpec.annotations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4EnumTypeSpec::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4EnumTypeSpec.annotations)
  return annotations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
P4EnumTypeSpec::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4EnumTypeSpec.annotations)
  return &annotations_;
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 3;
inline int P4EnumTypeSpec::structured_annotations_size() const {
  return structured_annotations_.size();
}
inline void P4EnumTypeSpec::clear_structured_annotations() {
  structured_annotations_.Clear();
}
inline const ::p4::config::v1::StructuredAnnotation& P4EnumTypeSpec::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4EnumTypeSpec.structured_annotations)
  return structured_annotations_.Get(index);
}
inline ::p4::config::v1::StructuredAnnotation* P4EnumTypeSpec::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4EnumTypeSpec.structured_annotations)
  return structured_annotations_.Mutable(index);
}
inline ::p4::config::v1::StructuredAnnotation* P4EnumTypeSpec::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4EnumTypeSpec.structured_annotations)
  return structured_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
P4EnumTypeSpec::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4EnumTypeSpec.structured_annotations)
  return &structured_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
P4EnumTypeSpec::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4EnumTypeSpec.structured_annotations)
  return structured_annotations_;
}

// -------------------------------------------------------------------

// P4SerializableEnumTypeSpec_Member

// string name = 1;
inline void P4SerializableEnumTypeSpec_Member::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P4SerializableEnumTypeSpec_Member::name() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4SerializableEnumTypeSpec.Member.name)
  return name_.GetNoArena();
}
inline void P4SerializableEnumTypeSpec_Member::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.P4SerializableEnumTypeSpec.Member.name)
}
#if LANG_CXX11
inline void P4SerializableEnumTypeSpec_Member::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.P4SerializableEnumTypeSpec.Member.name)
}
#endif
inline void P4SerializableEnumTypeSpec_Member::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4SerializableEnumTypeSpec.Member.name)
}
inline void P4SerializableEnumTypeSpec_Member::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4SerializableEnumTypeSpec.Member.name)
}
inline ::std::string* P4SerializableEnumTypeSpec_Member::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4SerializableEnumTypeSpec.Member.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P4SerializableEnumTypeSpec_Member::release_name() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4SerializableEnumTypeSpec.Member.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P4SerializableEnumTypeSpec_Member::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4SerializableEnumTypeSpec.Member.name)
}

// bytes value = 2;
inline void P4SerializableEnumTypeSpec_Member::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P4SerializableEnumTypeSpec_Member::value() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4SerializableEnumTypeSpec.Member.value)
  return value_.GetNoArena();
}
inline void P4SerializableEnumTypeSpec_Member::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.P4SerializableEnumTypeSpec.Member.value)
}
#if LANG_CXX11
inline void P4SerializableEnumTypeSpec_Member::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.P4SerializableEnumTypeSpec.Member.value)
}
#endif
inline void P4SerializableEnumTypeSpec_Member::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4SerializableEnumTypeSpec.Member.value)
}
inline void P4SerializableEnumTypeSpec_Member::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4SerializableEnumTypeSpec.Member.value)
}
inline ::std::string* P4SerializableEnumTypeSpec_Member::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4SerializableEnumTypeSpec.Member.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P4SerializableEnumTypeSpec_Member::release_value() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4SerializableEnumTypeSpec.Member.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P4SerializableEnumTypeSpec_Member::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4SerializableEnumTypeSpec.Member.value)
}

// repeated string annotations = 3;
inline int P4SerializableEnumTypeSpec_Member::annotations_size() const {
  return annotations_.size();
}
inline void P4SerializableEnumTypeSpec_Member::clear_annotations() {
  annotations_.Clear();
}
inline const ::std::string& P4SerializableEnumTypeSpec_Member::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
  return annotations_.Get(index);
}
inline ::std::string* P4SerializableEnumTypeSpec_Member::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
  return annotations_.Mutable(index);
}
inline void P4SerializableEnumTypeSpec_Member::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
  annotations_.Mutable(index)->assign(value);
}
inline void P4SerializableEnumTypeSpec_Member::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
}
inline void P4SerializableEnumTypeSpec_Member::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
}
inline ::std::string* P4SerializableEnumTypeSpec_Member::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
  return annotations_.Add();
}
inline void P4SerializableEnumTypeSpec_Member::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
}
inline void P4SerializableEnumTypeSpec_Member::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
}
inline void P4SerializableEnumTypeSpec_Member::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4SerializableEnumTypeSpec_Member::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
  return annotations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
P4SerializableEnumTypeSpec_Member::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4SerializableEnumTypeSpec.Member.annotations)
  return &annotations_;
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
inline int P4SerializableEnumTypeSpec_Member::structured_annotations_size() const {
  return structured_annotations_.size();
}
inline void P4SerializableEnumTypeSpec_Member::clear_structured_annotations() {
  structured_annotations_.Clear();
}
inline const ::p4::config::v1::StructuredAnnotation& P4SerializableEnumTypeSpec_Member::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4SerializableEnumTypeSpec.Member.structured_annotations)
  return structured_annotations_.Get(index);
}
inline ::p4::config::v1::StructuredAnnotation* P4SerializableEnumTypeSpec_Member::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4SerializableEnumTypeSpec.Member.structured_annotations)
  return structured_annotations_.Mutable(index);
}
inline ::p4::config::v1::StructuredAnnotation* P4SerializableEnumTypeSpec_Member::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4SerializableEnumTypeSpec.Member.structured_annotations)
  return structured_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
P4SerializableEnumTypeSpec_Member::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4SerializableEnumTypeSpec.Member.structured_annotations)
  return &structured_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
P4SerializableEnumTypeSpec_Member::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4SerializableEnumTypeSpec.Member.structured_annotations)
  return structured_annotations_;
}

// -------------------------------------------------------------------

// P4SerializableEnumTypeSpec

// .p4.config.v1.P4BitTypeSpec underlying_type = 1;
inline bool P4SerializableEnumTypeSpec::has_underlying_type() const {
  return this != internal_default_instance() && underlying_type_ != NULL;
}
inline void P4SerializableEnumTypeSpec::clear_underlying_type() {
  if (GetArenaNoVirtual() == NULL && underlying_type_ != NULL) delete underlying_type_;
  underlying_type_ = NULL;
}
inline const ::p4::config::v1::P4BitTypeSpec& P4SerializableEnumTypeSpec::underlying_type() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4SerializableEnumTypeSpec.underlying_type)
  return underlying_type_ != NULL ? *underlying_type_
                         : *::p4::config::v1::P4BitTypeSpec::internal_default_instance();
}
inline ::p4::config::v1::P4BitTypeSpec* P4SerializableEnumTypeSpec::mutable_underlying_type() {
  
  if (underlying_type_ == NULL) {
    underlying_type_ = new ::p4::config::v1::P4BitTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4SerializableEnumTypeSpec.underlying_type)
  return underlying_type_;
}
inline ::p4::config::v1::P4BitTypeSpec* P4SerializableEnumTypeSpec::release_underlying_type() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4SerializableEnumTypeSpec.underlying_type)
  
  ::p4::config::v1::P4BitTypeSpec* temp = underlying_type_;
  underlying_type_ = NULL;
  return temp;
}
inline void P4SerializableEnumTypeSpec::set_allocated_underlying_type(::p4::config::v1::P4BitTypeSpec* underlying_type) {
  delete underlying_type_;
  underlying_type_ = underlying_type;
  if (underlying_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4SerializableEnumTypeSpec.underlying_type)
}

// repeated .p4.config.v1.P4SerializableEnumTypeSpec.Member members = 2;
inline int P4SerializableEnumTypeSpec::members_size() const {
  return members_.size();
}
inline void P4SerializableEnumTypeSpec::clear_members() {
  members_.Clear();
}
inline const ::p4::config::v1::P4SerializableEnumTypeSpec_Member& P4SerializableEnumTypeSpec::members(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4SerializableEnumTypeSpec.members)
  return members_.Get(index);
}
inline ::p4::config::v1::P4SerializableEnumTypeSpec_Member* P4SerializableEnumTypeSpec::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4SerializableEnumTypeSpec.members)
  return members_.Mutable(index);
}
inline ::p4::config::v1::P4SerializableEnumTypeSpec_Member* P4SerializableEnumTypeSpec::add_members() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4SerializableEnumTypeSpec.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4SerializableEnumTypeSpec_Member >*
P4SerializableEnumTypeSpec::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4SerializableEnumTypeSpec.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::P4SerializableEnumTypeSpec_Member >&
P4SerializableEnumTypeSpec::members() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4SerializableEnumTypeSpec.members)
  return members_;
}

// repeated string annotations = 3;
inline int P4SerializableEnumTypeSpec::annotations_size() const {
  return annotations_.size();
}
inline void P4SerializableEnumTypeSpec::clear_annotations() {
  annotations_.Clear();
}
inline const ::std::string& P4SerializableEnumTypeSpec::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
  return annotations_.Get(index);
}
inline ::std::string* P4SerializableEnumTypeSpec::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
  return annotations_.Mutable(index);
}
inline void P4SerializableEnumTypeSpec::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
  annotations_.Mutable(index)->assign(value);
}
inline void P4SerializableEnumTypeSpec::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
}
inline void P4SerializableEnumTypeSpec::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
}
inline ::std::string* P4SerializableEnumTypeSpec::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
  return annotations_.Add();
}
inline void P4SerializableEnumTypeSpec::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
}
inline void P4SerializableEnumTypeSpec::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
}
inline void P4SerializableEnumTypeSpec::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4SerializableEnumTypeSpec::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
  return annotations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
P4SerializableEnumTypeSpec::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4SerializableEnumTypeSpec.annotations)
  return &annotations_;
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
inline int P4SerializableEnumTypeSpec::structured_annotations_size() const {
  return structured_annotations_.size();
}
inline void P4SerializableEnumTypeSpec::clear_structured_annotations() {
  structured_annotations_.Clear();
}
inline const ::p4::config::v1::StructuredAnnotation& P4SerializableEnumTypeSpec::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4SerializableEnumTypeSpec.structured_annotations)
  return structured_annotations_.Get(index);
}
inline ::p4::config::v1::StructuredAnnotation* P4SerializableEnumTypeSpec::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4SerializableEnumTypeSpec.structured_annotations)
  return structured_annotations_.Mutable(index);
}
inline ::p4::config::v1::StructuredAnnotation* P4SerializableEnumTypeSpec::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4SerializableEnumTypeSpec.structured_annotations)
  return structured_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
P4SerializableEnumTypeSpec::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4SerializableEnumTypeSpec.structured_annotations)
  return &structured_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
P4SerializableEnumTypeSpec::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4SerializableEnumTypeSpec.structured_annotations)
  return structured_annotations_;
}

// -------------------------------------------------------------------

// P4ErrorTypeSpec

// repeated string members = 1;
inline int P4ErrorTypeSpec::members_size() const {
  return members_.size();
}
inline void P4ErrorTypeSpec::clear_members() {
  members_.Clear();
}
inline const ::std::string& P4ErrorTypeSpec::members(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4ErrorTypeSpec.members)
  return members_.Get(index);
}
inline ::std::string* P4ErrorTypeSpec::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4ErrorTypeSpec.members)
  return members_.Mutable(index);
}
inline void P4ErrorTypeSpec::set_members(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4ErrorTypeSpec.members)
  members_.Mutable(index)->assign(value);
}
inline void P4ErrorTypeSpec::set_members(int index, const char* value) {
  members_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4ErrorTypeSpec.members)
}
inline void P4ErrorTypeSpec::set_members(int index, const char* value, size_t size) {
  members_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4ErrorTypeSpec.members)
}
inline ::std::string* P4ErrorTypeSpec::add_members() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4ErrorTypeSpec.members)
  return members_.Add();
}
inline void P4ErrorTypeSpec::add_members(const ::std::string& value) {
  members_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4ErrorTypeSpec.members)
}
inline void P4ErrorTypeSpec::add_members(const char* value) {
  members_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4ErrorTypeSpec.members)
}
inline void P4ErrorTypeSpec::add_members(const char* value, size_t size) {
  members_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4ErrorTypeSpec.members)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4ErrorTypeSpec::members() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4ErrorTypeSpec.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
P4ErrorTypeSpec::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4ErrorTypeSpec.members)
  return &members_;
}

// -------------------------------------------------------------------

// P4NewTypeTranslation_SdnString

// -------------------------------------------------------------------

// P4NewTypeTranslation

// string uri = 1;
inline void P4NewTypeTranslation::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P4NewTypeTranslation::uri() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4NewTypeTranslation.uri)
  return uri_.GetNoArena();
}
inline void P4NewTypeTranslation::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:p4.config.v1.P4NewTypeTranslation.uri)
}
#if LANG_CXX11
inline void P4NewTypeTranslation::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:p4.config.v1.P4NewTypeTranslation.uri)
}
#endif
inline void P4NewTypeTranslation::set_uri(const char* value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4NewTypeTranslation.uri)
}
inline void P4NewTypeTranslation::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4NewTypeTranslation.uri)
}
inline ::std::string* P4NewTypeTranslation::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4NewTypeTranslation.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P4NewTypeTranslation::release_uri() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4NewTypeTranslation.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P4NewTypeTranslation::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4NewTypeTranslation.uri)
}

// int32 sdn_bitwidth = 2;
inline bool P4NewTypeTranslation::has_sdn_bitwidth() const {
  return sdn_type_case() == kSdnBitwidth;
}
inline void P4NewTypeTranslation::set_has_sdn_bitwidth() {
  _oneof_case_[0] = kSdnBitwidth;
}
inline void P4NewTypeTranslation::clear_sdn_bitwidth() {
  if (has_sdn_bitwidth()) {
    sdn_type_.sdn_bitwidth_ = 0;
    clear_has_sdn_type();
  }
}
inline ::google::protobuf::int32 P4NewTypeTranslation::sdn_bitwidth() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4NewTypeTranslation.sdn_bitwidth)
  if (has_sdn_bitwidth()) {
    return sdn_type_.sdn_bitwidth_;
  }
  return 0;
}
inline void P4NewTypeTranslation::set_sdn_bitwidth(::google::protobuf::int32 value) {
  if (!has_sdn_bitwidth()) {
    clear_sdn_type();
    set_has_sdn_bitwidth();
  }
  sdn_type_.sdn_bitwidth_ = value;
  // @@protoc_insertion_point(field_set:p4.config.v1.P4NewTypeTranslation.sdn_bitwidth)
}

// .p4.config.v1.P4NewTypeTranslation.SdnString sdn_string = 3;
inline bool P4NewTypeTranslation::has_sdn_string() const {
  return sdn_type_case() == kSdnString;
}
inline void P4NewTypeTranslation::set_has_sdn_string() {
  _oneof_case_[0] = kSdnString;
}
inline void P4NewTypeTranslation::clear_sdn_string() {
  if (has_sdn_string()) {
    delete sdn_type_.sdn_string_;
    clear_has_sdn_type();
  }
}
inline  const ::p4::config::v1::P4NewTypeTranslation_SdnString& P4NewTypeTranslation::sdn_string() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4NewTypeTranslation.sdn_string)
  return has_sdn_string()
      ? *sdn_type_.sdn_string_
      : ::p4::config::v1::P4NewTypeTranslation_SdnString::default_instance();
}
inline ::p4::config::v1::P4NewTypeTranslation_SdnString* P4NewTypeTranslation::mutable_sdn_string() {
  if (!has_sdn_string()) {
    clear_sdn_type();
    set_has_sdn_string();
    sdn_type_.sdn_string_ = new ::p4::config::v1::P4NewTypeTranslation_SdnString;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4NewTypeTranslation.sdn_string)
  return sdn_type_.sdn_string_;
}
inline ::p4::config::v1::P4NewTypeTranslation_SdnString* P4NewTypeTranslation::release_sdn_string() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4NewTypeTranslation.sdn_string)
  if (has_sdn_string()) {
    clear_has_sdn_type();
    ::p4::config::v1::P4NewTypeTranslation_SdnString* temp = sdn_type_.sdn_string_;
    sdn_type_.sdn_string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4NewTypeTranslation::set_allocated_sdn_string(::p4::config::v1::P4NewTypeTranslation_SdnString* sdn_string) {
  clear_sdn_type();
  if (sdn_string) {
    set_has_sdn_string();
    sdn_type_.sdn_string_ = sdn_string;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4NewTypeTranslation.sdn_string)
}

inline bool P4NewTypeTranslation::has_sdn_type() const {
  return sdn_type_case() != SDN_TYPE_NOT_SET;
}
inline void P4NewTypeTranslation::clear_has_sdn_type() {
  _oneof_case_[0] = SDN_TYPE_NOT_SET;
}
inline P4NewTypeTranslation::SdnTypeCase P4NewTypeTranslation::sdn_type_case() const {
  return P4NewTypeTranslation::SdnTypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// P4NewTypeSpec

// .p4.config.v1.P4DataTypeSpec original_type = 1;
inline bool P4NewTypeSpec::has_original_type() const {
  return representation_case() == kOriginalType;
}
inline void P4NewTypeSpec::set_has_original_type() {
  _oneof_case_[0] = kOriginalType;
}
inline void P4NewTypeSpec::clear_original_type() {
  if (has_original_type()) {
    delete representation_.original_type_;
    clear_has_representation();
  }
}
inline  const ::p4::config::v1::P4DataTypeSpec& P4NewTypeSpec::original_type() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4NewTypeSpec.original_type)
  return has_original_type()
      ? *representation_.original_type_
      : ::p4::config::v1::P4DataTypeSpec::default_instance();
}
inline ::p4::config::v1::P4DataTypeSpec* P4NewTypeSpec::mutable_original_type() {
  if (!has_original_type()) {
    clear_representation();
    set_has_original_type();
    representation_.original_type_ = new ::p4::config::v1::P4DataTypeSpec;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4NewTypeSpec.original_type)
  return representation_.original_type_;
}
inline ::p4::config::v1::P4DataTypeSpec* P4NewTypeSpec::release_original_type() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4NewTypeSpec.original_type)
  if (has_original_type()) {
    clear_has_representation();
    ::p4::config::v1::P4DataTypeSpec* temp = representation_.original_type_;
    representation_.original_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4NewTypeSpec::set_allocated_original_type(::p4::config::v1::P4DataTypeSpec* original_type) {
  clear_representation();
  if (original_type) {
    set_has_original_type();
    representation_.original_type_ = original_type;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4NewTypeSpec.original_type)
}

// .p4.config.v1.P4NewTypeTranslation translated_type = 2;
inline bool P4NewTypeSpec::has_translated_type() const {
  return representation_case() == kTranslatedType;
}
inline void P4NewTypeSpec::set_has_translated_type() {
  _oneof_case_[0] = kTranslatedType;
}
inline void P4NewTypeSpec::clear_translated_type() {
  if (has_translated_type()) {
    delete representation_.translated_type_;
    clear_has_representation();
  }
}
inline  const ::p4::config::v1::P4NewTypeTranslation& P4NewTypeSpec::translated_type() const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4NewTypeSpec.translated_type)
  return has_translated_type()
      ? *representation_.translated_type_
      : ::p4::config::v1::P4NewTypeTranslation::default_instance();
}
inline ::p4::config::v1::P4NewTypeTranslation* P4NewTypeSpec::mutable_translated_type() {
  if (!has_translated_type()) {
    clear_representation();
    set_has_translated_type();
    representation_.translated_type_ = new ::p4::config::v1::P4NewTypeTranslation;
  }
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4NewTypeSpec.translated_type)
  return representation_.translated_type_;
}
inline ::p4::config::v1::P4NewTypeTranslation* P4NewTypeSpec::release_translated_type() {
  // @@protoc_insertion_point(field_release:p4.config.v1.P4NewTypeSpec.translated_type)
  if (has_translated_type()) {
    clear_has_representation();
    ::p4::config::v1::P4NewTypeTranslation* temp = representation_.translated_type_;
    representation_.translated_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void P4NewTypeSpec::set_allocated_translated_type(::p4::config::v1::P4NewTypeTranslation* translated_type) {
  clear_representation();
  if (translated_type) {
    set_has_translated_type();
    representation_.translated_type_ = translated_type;
  }
  // @@protoc_insertion_point(field_set_allocated:p4.config.v1.P4NewTypeSpec.translated_type)
}

// repeated string annotations = 3;
inline int P4NewTypeSpec::annotations_size() const {
  return annotations_.size();
}
inline void P4NewTypeSpec::clear_annotations() {
  annotations_.Clear();
}
inline const ::std::string& P4NewTypeSpec::annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4NewTypeSpec.annotations)
  return annotations_.Get(index);
}
inline ::std::string* P4NewTypeSpec::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4NewTypeSpec.annotations)
  return annotations_.Mutable(index);
}
inline void P4NewTypeSpec::set_annotations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:p4.config.v1.P4NewTypeSpec.annotations)
  annotations_.Mutable(index)->assign(value);
}
inline void P4NewTypeSpec::set_annotations(int index, const char* value) {
  annotations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:p4.config.v1.P4NewTypeSpec.annotations)
}
inline void P4NewTypeSpec::set_annotations(int index, const char* value, size_t size) {
  annotations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:p4.config.v1.P4NewTypeSpec.annotations)
}
inline ::std::string* P4NewTypeSpec::add_annotations() {
  // @@protoc_insertion_point(field_add_mutable:p4.config.v1.P4NewTypeSpec.annotations)
  return annotations_.Add();
}
inline void P4NewTypeSpec::add_annotations(const ::std::string& value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:p4.config.v1.P4NewTypeSpec.annotations)
}
inline void P4NewTypeSpec::add_annotations(const char* value) {
  annotations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:p4.config.v1.P4NewTypeSpec.annotations)
}
inline void P4NewTypeSpec::add_annotations(const char* value, size_t size) {
  annotations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:p4.config.v1.P4NewTypeSpec.annotations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
P4NewTypeSpec::annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4NewTypeSpec.annotations)
  return annotations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
P4NewTypeSpec::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4NewTypeSpec.annotations)
  return &annotations_;
}

// repeated .p4.config.v1.StructuredAnnotation structured_annotations = 4;
inline int P4NewTypeSpec::structured_annotations_size() const {
  return structured_annotations_.size();
}
inline void P4NewTypeSpec::clear_structured_annotations() {
  structured_annotations_.Clear();
}
inline const ::p4::config::v1::StructuredAnnotation& P4NewTypeSpec::structured_annotations(int index) const {
  // @@protoc_insertion_point(field_get:p4.config.v1.P4NewTypeSpec.structured_annotations)
  return structured_annotations_.Get(index);
}
inline ::p4::config::v1::StructuredAnnotation* P4NewTypeSpec::mutable_structured_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:p4.config.v1.P4NewTypeSpec.structured_annotations)
  return structured_annotations_.Mutable(index);
}
inline ::p4::config::v1::StructuredAnnotation* P4NewTypeSpec::add_structured_annotations() {
  // @@protoc_insertion_point(field_add:p4.config.v1.P4NewTypeSpec.structured_annotations)
  return structured_annotations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >*
P4NewTypeSpec::mutable_structured_annotations() {
  // @@protoc_insertion_point(field_mutable_list:p4.config.v1.P4NewTypeSpec.structured_annotations)
  return &structured_annotations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::p4::config::v1::StructuredAnnotation >&
P4NewTypeSpec::structured_annotations() const {
  // @@protoc_insertion_point(field_list:p4.config.v1.P4NewTypeSpec.structured_annotations)
  return structured_annotations_;
}

inline bool P4NewTypeSpec::has_representation() const {
  return representation_case() != REPRESENTATION_NOT_SET;
}
inline void P4NewTypeSpec::clear_has_representation() {
  _oneof_case_[0] = REPRESENTATION_NOT_SET;
}
inline P4NewTypeSpec::RepresentationCase P4NewTypeSpec::representation_case() const {
  return P4NewTypeSpec::RepresentationCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v1
}  // namespace config
}  // namespace p4

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_p4_2fconfig_2fv1_2fp4types_2eproto__INCLUDED
