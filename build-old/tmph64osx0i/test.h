/* Automatically generated by p4c-ebpf from /media/yec/WORK/Programs/P4-verification/P4B-Translator/testdata/p4_16_samples/ebpf_conntrack_extern.p4 on Thu Feb 17 22:09:24 2022
 */
#ifndef _P4_GEN_HEADER_
#define _P4_GEN_HEADER_
#include "ebpf_test.h"

#define MAP_PATH "/sys/fs/bpf"
struct Ethernet_t {
    u64 dstAddr; /* EthernetAddress */
    u64 srcAddr; /* EthernetAddress */
    u16 etherType; /* bit<16> */
    u8 ebpf_valid;
};

struct Ipv4_t {
    u8 version; /* bit<4> */
    u8 ihl; /* bit<4> */
    u8 diffserv; /* bit<8> */
    u16 totalLen; /* bit<16> */
    u16 identification; /* bit<16> */
    u8 flags; /* bit<3> */
    u16 fragOffset; /* bit<13> */
    u8 ttl; /* bit<8> */
    u8 protocol; /* bit<8> */
    u16 hdrChecksum; /* bit<16> */
    u32 srcAddr; /* bit<32> */
    u32 dstAddr; /* bit<32> */
    u8 ebpf_valid;
};

struct Tcp_t {
    u16 srcPort; /* bit<16> */
    u16 dstPort; /* bit<16> */
    u32 seqNo; /* bit<32> */
    u32 ackNo; /* bit<32> */
    u8 dataOffset; /* bit<4> */
    u8 res; /* bit<3> */
    u8 ecn; /* bit<3> */
    u8 urgent; /* bit<1> */
    u8 ack; /* bit<1> */
    u8 psh; /* bit<1> */
    u8 rst; /* bit<1> */
    u8 syn; /* bit<1> */
    u8 fin; /* bit<1> */
    u16 window; /* bit<16> */
    u16 checksum; /* bit<16> */
    u16 urgentPtr; /* bit<16> */
    u8 ebpf_valid;
};

struct Headers_t {
    struct Ethernet_t ethernet; /* Ethernet_t */
    struct Ipv4_t ipv4; /* Ipv4_t */
    struct Tcp_t tcp; /* Tcp_t */
};

#if CONTROL_PLANE
static void init_tables() 
{
    u32 ebpf_zero = 0;
}
#endif
#endif
